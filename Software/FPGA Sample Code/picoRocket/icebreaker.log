
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+2406 (git sha1 93ef516d, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Parsing `icebreaker.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: icebreaker.v
Parsing Verilog input from `icebreaker.v' to AST representation.
Generating RTLIL representation for module `\icebreaker'.
Successfully finished Verilog frontend.

-- Parsing `ice40up5k_spram.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: ice40up5k_spram.v
Parsing Verilog input from `ice40up5k_spram.v' to AST representation.
Generating RTLIL representation for module `\ice40up5k_spram'.
Successfully finished Verilog frontend.

-- Parsing `spimemio.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: spimemio.v
Parsing Verilog input from `spimemio.v' to AST representation.
Generating RTLIL representation for module `\spimemio'.
Generating RTLIL representation for module `\spimemio_xfer'.
Successfully finished Verilog frontend.

-- Parsing `simpleuart.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: simpleuart.v
Parsing Verilog input from `simpleuart.v' to AST representation.
Generating RTLIL representation for module `\simpleuart'.
Successfully finished Verilog frontend.

-- Parsing `picosoc.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: picosoc.v
Parsing Verilog input from `picosoc.v' to AST representation.
Generating RTLIL representation for module `\picosoc'.
Generating RTLIL representation for module `\picosoc_regs'.
Generating RTLIL representation for module `\picosoc_mem'.
Successfully finished Verilog frontend.

-- Parsing `picorv32.v' using frontend `verilog' --

6. Executing Verilog-2005 frontend: picorv32.v
Parsing Verilog input from `picorv32.v' to AST representation.
Generating RTLIL representation for module `\picorv32'.
Generating RTLIL representation for module `\picorv32_regs'.
Generating RTLIL representation for module `\picorv32_pcpi_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_fast_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_div'.
Generating RTLIL representation for module `\picorv32_axi'.
Generating RTLIL representation for module `\picorv32_axi_adapter'.
Generating RTLIL representation for module `\picorv32_wb'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top icebreaker -json icebreaker.json' --

7. Executing SYNTH_ICE40 pass.

7.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

7.2. Executing HIERARCHY pass (managing design hierarchy).

7.2.1. Analyzing design hierarchy..
Top module:  \icebreaker
Used module:     \picosoc
Used module:         \ice40up5k_spram
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         \picorv32
Used module:             \picosoc_regs
Parameter \BARREL_SHIFTER = 0
Parameter \ENABLE_MULDIV = 0
Parameter \MEM_WORDS = 32768

7.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\picosoc'.
Parameter \BARREL_SHIFTER = 0
Parameter \ENABLE_MULDIV = 0
Parameter \MEM_WORDS = 32768
Generating RTLIL representation for module `$paramod\picosoc\BARREL_SHIFTER=0\ENABLE_MULDIV=0\MEM_WORDS=32768'.
Parameter \WORDS = 256

7.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\ice40up5k_spram'.
Parameter \WORDS = 256
Generating RTLIL representation for module `$paramod\ice40up5k_spram\WORDS=256'.
Parameter \ENABLE_COUNTERS = 1'1
Parameter \BARREL_SHIFTER = 1'1
Parameter \COMPRESSED_ISA = 1'1
Parameter \ENABLE_MUL = 1'1
Parameter \ENABLE_DIV = 1'1
Parameter \ENABLE_IRQ = 1
Parameter \ENABLE_IRQ_QREGS = 1'0
Parameter \PROGADDR_RESET = 1048576
Parameter \PROGADDR_IRQ = 0
Parameter \STACKADDR = 1024

7.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\picorv32'.
Parameter \ENABLE_COUNTERS = 1'1
Parameter \BARREL_SHIFTER = 1'1
Parameter \COMPRESSED_ISA = 1'1
Parameter \ENABLE_MUL = 1'1
Parameter \ENABLE_DIV = 1'1
Parameter \ENABLE_IRQ = 1
Parameter \ENABLE_IRQ_QREGS = 1'0
Parameter \PROGADDR_RESET = 1048576
Parameter \PROGADDR_IRQ = 0
Parameter \STACKADDR = 1024
Generating RTLIL representation for module `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32'.

7.2.5. Analyzing design hierarchy..
Top module:  \icebreaker
Used module:     $paramod\picosoc\BARREL_SHIFTER=0\ENABLE_MULDIV=0\MEM_WORDS=32768
Used module:         \ice40up5k_spram
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         \picorv32
Used module:             \picosoc_regs
Parameter \WORDS = 32768

7.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\ice40up5k_spram'.
Parameter \WORDS = 32768
Generating RTLIL representation for module `$paramod\ice40up5k_spram\WORDS=32768'.
Parameter \ENABLE_COUNTERS = 1'1
Parameter \BARREL_SHIFTER = 1'0
Parameter \COMPRESSED_ISA = 1'1
Parameter \ENABLE_MUL = 1'0
Parameter \ENABLE_DIV = 1'0
Parameter \ENABLE_IRQ = 1
Parameter \ENABLE_IRQ_QREGS = 1'0
Parameter \PROGADDR_RESET = 1048576
Parameter \PROGADDR_IRQ = 0
Parameter \STACKADDR = 131072

7.2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\picorv32'.
Parameter \ENABLE_COUNTERS = 1'1
Parameter \BARREL_SHIFTER = 1'0
Parameter \COMPRESSED_ISA = 1'1
Parameter \ENABLE_MUL = 1'0
Parameter \ENABLE_DIV = 1'0
Parameter \ENABLE_IRQ = 1
Parameter \ENABLE_IRQ_QREGS = 1'0
Parameter \PROGADDR_RESET = 1048576
Parameter \PROGADDR_IRQ = 0
Parameter \STACKADDR = 131072
Generating RTLIL representation for module `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32'.

7.2.8. Analyzing design hierarchy..
Top module:  \icebreaker
Used module:     $paramod\picosoc\BARREL_SHIFTER=0\ENABLE_MULDIV=0\MEM_WORDS=32768
Used module:         $paramod\ice40up5k_spram\WORDS=32768
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         $paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32
Used module:             \picosoc_regs

7.2.9. Analyzing design hierarchy..
Top module:  \icebreaker
Used module:     $paramod\picosoc\BARREL_SHIFTER=0\ENABLE_MULDIV=0\MEM_WORDS=32768
Used module:         $paramod\ice40up5k_spram\WORDS=32768
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         $paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32
Used module:             \picosoc_regs
Removing unused module `$paramod$6d0f3653f4952f84418caf0c1a33c12081356380\picorv32'.
Removing unused module `$paramod\ice40up5k_spram\WORDS=256'.
Removing unused module `\picorv32_wb'.
Removing unused module `\picorv32_axi_adapter'.
Removing unused module `\picorv32_axi'.
Removing unused module `\picorv32_pcpi_div'.
Removing unused module `\picorv32_pcpi_fast_mul'.
Removing unused module `\picorv32_pcpi_mul'.
Removing unused module `\picorv32_regs'.
Removing unused module `\picorv32'.
Removing unused module `\picosoc_mem'.
Removing unused module `\picosoc'.
Removing unused module `\ice40up5k_spram'.
Removed 13 unused modules.

7.3. Executing PROC pass (convert processes to netlists).

7.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 16 empty switches in `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
Found and cleaned up 1 empty switch in `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1382$2631'.
Found and cleaned up 6 empty switches in `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:546$2277'.
Removing empty process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:546$2277'.
Cleaned up 23 empty switches.

7.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 37 switch rules as full_case in process $proc$picorv32.v:1397$2645 in module $paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:1304$2617 in module $paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:1290$2612 in module $paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.
Marked 8 switch rules as full_case in process $proc$picorv32.v:1181$2577 in module $paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.
Marked 3 switch rules as full_case in process $proc$picorv32.v:856$2317 in module $paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.
Marked 3 switch rules as full_case in process $proc$picorv32.v:807$2315 in module $paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:776$2311 in module $paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.
Marked 47 switch rules as full_case in process $proc$picorv32.v:700$2310 in module $paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.
Marked 4 switch rules as full_case in process $proc$picorv32.v:565$2286 in module $paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:430$2248 in module $paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.
Removed 2 dead cases from process $proc$picorv32.v:401$2245 in module $paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:401$2245 in module $paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:390$2240 in module $paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:325$2166 in module $paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.
Marked 3 switch rules as full_case in process $proc$simpleuart.v:109$136 in module simpleuart.
Marked 2 switch rules as full_case in process $proc$simpleuart.v:66$127 in module simpleuart.
Marked 1 switch rules as full_case in process $proc$simpleuart.v:55$125 in module simpleuart.
Marked 2 switch rules as full_case in process $proc$spimemio.v:535$105 in module spimemio_xfer.
Marked 5 switch rules as full_case in process $proc$spimemio.v:447$81 in module spimemio_xfer.
Marked 3 switch rules as full_case in process $proc$spimemio.v:207$51 in module spimemio.
Marked 1 switch rules as full_case in process $proc$spimemio.v:99$29 in module spimemio.
Marked 1 switch rules as full_case in process $proc$icebreaker.v:93$7 in module icebreaker.
Removed a total of 2 dead cases.

7.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 7 redundant assignments.
Promoted 81 assignments to connections.

7.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\icebreaker.$proc$icebreaker.v:50$13'.
  Set init value: \reset_cnt = 6'000000

7.3.5. Executing PROC_ARST pass (detect async resets in processes).

7.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
     1/81: $20\next_irq_pending[2:2]
     2/81: $19\next_irq_pending[2:2]
     3/81: $18\next_irq_pending[2:2]
     4/81: $17\next_irq_pending[2:2]
     5/81: $16\next_irq_pending[2:2]
     6/81: $15\next_irq_pending[2:2]
     7/81: $14\next_irq_pending[2:2]
     8/81: $5\next_irq_pending[31:0] [31:2]
     9/81: $3\set_mem_do_rdata[0:0]
    10/81: $5\next_irq_pending[31:0] [1]
    11/81: $3\set_mem_do_wdata[0:0]
    12/81: $5\next_irq_pending[31:0] [0]
    13/81: $4\set_mem_do_rinst[0:0]
    14/81: $3\set_mem_do_rinst[0:0]
    15/81: $4\set_mem_do_wdata[0:0]
    16/81: $12\next_irq_pending[1:1]
    17/81: $11\next_irq_pending[1:1]
    18/81: $10\next_irq_pending[1:1]
    19/81: $4\set_mem_do_rdata[0:0]
    20/81: $8\next_irq_pending[1:1]
    21/81: $7\next_irq_pending[1:1]
    22/81: $13\next_irq_pending[1:1]
    23/81: $5\set_mem_do_rinst[0:0]
    24/81: $9\next_irq_pending[1:1]
    25/81: $6\next_irq_pending[31:0]
    26/81: $3\current_pc[31:0]
    27/81: $2\current_pc[31:0]
    28/81: $2\set_mem_do_wdata[0:0]
    29/81: $2\set_mem_do_rdata[0:0]
    30/81: $2\set_mem_do_rinst[0:0]
    31/81: $4\next_irq_pending[31:0]
    32/81: $1\current_pc[31:0]
    33/81: $1\set_mem_do_wdata[0:0]
    34/81: $1\set_mem_do_rdata[0:0]
    35/81: $1\set_mem_do_rinst[0:0]
    36/81: $0\trace_data[35:0]
    37/81: $3\next_irq_pending[31:0]
    38/81: $2\next_irq_pending[0:0]
    39/81: $1\next_irq_pending[0:0]
    40/81: $0\count_cycle[63:0]
    41/81: $0\trace_valid[0:0]
    42/81: $0\do_waitirq[0:0]
    43/81: $0\decoder_pseudo_trigger[0:0]
    44/81: $0\decoder_trigger[0:0]
    45/81: $0\alu_wait_2[0:0]
    46/81: $0\alu_wait[0:0]
    47/81: $0\reg_out[31:0]
    48/81: $0\reg_sh[4:0]
    49/81: $0\trap[0:0]
    50/81: $0\pcpi_timeout[0:0]
    51/81: $0\latched_rd[4:0]
    52/81: $0\latched_is_lb[0:0]
    53/81: $0\latched_is_lh[0:0]
    54/81: $0\latched_is_lu[0:0]
    55/81: $0\latched_trace[0:0]
    56/81: $0\latched_compr[0:0]
    57/81: $0\latched_branch[0:0]
    58/81: $0\latched_stalu[0:0]
    59/81: $0\latched_store[0:0]
    60/81: $0\irq_state[1:0]
    61/81: $0\cpu_state[7:0]
    62/81: $0\dbg_rs2val_valid[0:0]
    63/81: $0\dbg_rs1val_valid[0:0]
    64/81: $0\dbg_rs2val[31:0]
    65/81: $0\dbg_rs1val[31:0]
    66/81: $0\mem_do_wdata[0:0]
    67/81: $0\mem_do_rdata[0:0]
    68/81: $0\mem_do_rinst[0:0]
    69/81: $0\mem_do_prefetch[0:0]
    70/81: $0\mem_wordsize[1:0]
    71/81: $0\timer[31:0]
    72/81: $0\irq_mask[31:0]
    73/81: $0\irq_active[0:0]
    74/81: $0\irq_delay[0:0]
    75/81: $0\reg_op2[31:0]
    76/81: $0\reg_op1[31:0]
    77/81: $0\reg_next_pc[31:0]
    78/81: $0\reg_pc[31:0]
    79/81: $0\count_instr[63:0]
    80/81: $0\eoi[31:0]
    81/81: $0\pcpi_valid[0:0]
Creating decoders for process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1382$2631'.
Creating decoders for process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1304$2617'.
     1/4: $2\cpuregs_write[0:0]
     2/4: $2\cpuregs_wrdata[31:0]
     3/4: $1\cpuregs_wrdata[31:0]
     4/4: $1\cpuregs_write[0:0]
Creating decoders for process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1290$2612'.
     1/2: $2\clear_prefetched_high_word[0:0]
     2/2: $1\clear_prefetched_high_word[0:0]
Creating decoders for process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1288$2611'.
Creating decoders for process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1244$2589'.
     1/2: $1\alu_out[31:0]
     2/2: $1\alu_out_0[0:0]
Creating decoders for process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1181$2577'.
     1/8: $8\dbg_ascii_state[127:0]
     2/8: $7\dbg_ascii_state[127:0]
     3/8: $6\dbg_ascii_state[127:0]
     4/8: $5\dbg_ascii_state[127:0]
     5/8: $4\dbg_ascii_state[127:0]
     6/8: $3\dbg_ascii_state[127:0]
     7/8: $2\dbg_ascii_state[127:0]
     8/8: $1\dbg_ascii_state[127:0]
Creating decoders for process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
     1/76: $0\decoded_rs1[4:0] [4]
     2/76: $0\decoded_imm_j[31:0] [10]
     3/76: $0\decoded_imm_j[31:0] [7]
     4/76: $0\decoded_imm_j[31:0] [6]
     5/76: $0\decoded_imm_j[31:0] [3:1]
     6/76: $0\decoded_imm_j[31:0] [5]
     7/76: $0\decoded_imm_j[31:0] [9:8]
     8/76: $0\decoded_imm_j[31:0] [31:20]
     9/76: $0\decoded_imm_j[31:0] [4]
    10/76: $0\decoded_imm_j[31:0] [11]
    11/76: $0\decoded_imm_j[31:0] [0]
    12/76: $0\decoded_rs1[4:0] [3:0]
    13/76: $0\is_lui_auipc_jal_jalr_addi_add_sub[0:0]
    14/76: $0\is_alu_reg_reg[0:0]
    15/76: $0\is_alu_reg_imm[0:0]
    16/76: $0\is_beq_bne_blt_bge_bltu_bgeu[0:0]
    17/76: $0\is_sll_srl_sra[0:0]
    18/76: $0\is_sb_sh_sw[0:0]
    19/76: $0\is_jalr_addi_slti_sltiu_xori_ori_andi[0:0]
    20/76: $0\is_slli_srli_srai[0:0]
    21/76: $0\is_lb_lh_lw_lbu_lhu[0:0]
    22/76: $0\compressed_instr[0:0]
    23/76: $0\is_compare[0:0]
    24/76: $0\decoded_imm[31:0]
    25/76: $0\decoded_rs2[4:0]
    26/76: $0\decoded_imm_j[31:0] [19:12]
    27/76: $0\decoded_rd[4:0]
    28/76: $0\instr_timer[0:0]
    29/76: $0\instr_waitirq[0:0]
    30/76: $0\instr_maskirq[0:0]
    31/76: $0\instr_retirq[0:0]
    32/76: $0\instr_setq[0:0]
    33/76: $0\instr_getq[0:0]
    34/76: $0\instr_ecall_ebreak[0:0]
    35/76: $0\instr_rdinstrh[0:0]
    36/76: $0\instr_rdinstr[0:0]
    37/76: $0\instr_rdcycleh[0:0]
    38/76: $0\instr_rdcycle[0:0]
    39/76: $0\instr_and[0:0]
    40/76: $0\instr_or[0:0]
    41/76: $0\instr_sra[0:0]
    42/76: $0\instr_srl[0:0]
    43/76: $0\instr_xor[0:0]
    44/76: $0\instr_sltu[0:0]
    45/76: $0\instr_slt[0:0]
    46/76: $0\instr_sll[0:0]
    47/76: $0\instr_sub[0:0]
    48/76: $0\instr_add[0:0]
    49/76: $0\instr_srai[0:0]
    50/76: $0\instr_srli[0:0]
    51/76: $0\instr_slli[0:0]
    52/76: $0\instr_andi[0:0]
    53/76: $0\instr_ori[0:0]
    54/76: $0\instr_xori[0:0]
    55/76: $0\instr_sltiu[0:0]
    56/76: $0\instr_slti[0:0]
    57/76: $0\instr_addi[0:0]
    58/76: $0\instr_sw[0:0]
    59/76: $0\instr_sh[0:0]
    60/76: $0\instr_sb[0:0]
    61/76: $0\instr_lhu[0:0]
    62/76: $0\instr_lbu[0:0]
    63/76: $0\instr_lw[0:0]
    64/76: $0\instr_lh[0:0]
    65/76: $0\instr_lb[0:0]
    66/76: $0\instr_bgeu[0:0]
    67/76: $0\instr_bltu[0:0]
    68/76: $0\instr_bge[0:0]
    69/76: $0\instr_blt[0:0]
    70/76: $0\instr_bne[0:0]
    71/76: $0\instr_beq[0:0]
    72/76: $0\instr_jalr[0:0]
    73/76: $0\instr_jal[0:0]
    74/76: $0\instr_auipc[0:0]
    75/76: $0\instr_lui[0:0]
    76/76: $0\pcpi_insn[31:0]
Creating decoders for process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:807$2315'.
     1/13: $3\dbg_insn_opcode[31:0]
     2/13: $2\dbg_insn_rd[4:0]
     3/13: $2\dbg_insn_rs2[4:0]
     4/13: $2\dbg_insn_rs1[4:0]
     5/13: $2\dbg_insn_opcode[31:0]
     6/13: $2\dbg_insn_imm[31:0]
     7/13: $2\dbg_ascii_instr[63:0]
     8/13: $1\dbg_insn_rd[4:0]
     9/13: $1\dbg_insn_rs2[4:0]
    10/13: $1\dbg_insn_rs1[4:0]
    11/13: $1\dbg_insn_imm[31:0]
    12/13: $1\dbg_ascii_instr[63:0]
    13/13: $1\dbg_insn_opcode[31:0]
Creating decoders for process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:776$2311'.
     1/8: $0\cached_insn_rd[4:0]
     2/8: $0\cached_insn_rs2[4:0]
     3/8: $0\cached_insn_rs1[4:0]
     4/8: $0\cached_insn_opcode[31:0]
     5/8: $0\cached_insn_imm[31:0]
     6/8: $0\cached_ascii_instr[63:0]
     7/8: $0\dbg_valid_insn[0:0]
     8/8: $0\dbg_insn_addr[31:0]
Creating decoders for process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:700$2310'.
     1/47: $47\new_ascii_instr[63:0]
     2/47: $46\new_ascii_instr[63:0]
     3/47: $45\new_ascii_instr[63:0]
     4/47: $44\new_ascii_instr[63:0]
     5/47: $43\new_ascii_instr[63:0]
     6/47: $42\new_ascii_instr[63:0]
     7/47: $41\new_ascii_instr[63:0]
     8/47: $40\new_ascii_instr[63:0]
     9/47: $39\new_ascii_instr[63:0]
    10/47: $38\new_ascii_instr[63:0]
    11/47: $37\new_ascii_instr[63:0]
    12/47: $36\new_ascii_instr[63:0]
    13/47: $35\new_ascii_instr[63:0]
    14/47: $34\new_ascii_instr[63:0]
    15/47: $33\new_ascii_instr[63:0]
    16/47: $32\new_ascii_instr[63:0]
    17/47: $31\new_ascii_instr[63:0]
    18/47: $30\new_ascii_instr[63:0]
    19/47: $29\new_ascii_instr[63:0]
    20/47: $28\new_ascii_instr[63:0]
    21/47: $27\new_ascii_instr[63:0]
    22/47: $26\new_ascii_instr[63:0]
    23/47: $25\new_ascii_instr[63:0]
    24/47: $24\new_ascii_instr[63:0]
    25/47: $23\new_ascii_instr[63:0]
    26/47: $22\new_ascii_instr[63:0]
    27/47: $21\new_ascii_instr[63:0]
    28/47: $20\new_ascii_instr[63:0]
    29/47: $19\new_ascii_instr[63:0]
    30/47: $18\new_ascii_instr[63:0]
    31/47: $17\new_ascii_instr[63:0]
    32/47: $16\new_ascii_instr[63:0]
    33/47: $15\new_ascii_instr[63:0]
    34/47: $14\new_ascii_instr[63:0]
    35/47: $13\new_ascii_instr[63:0]
    36/47: $12\new_ascii_instr[63:0]
    37/47: $11\new_ascii_instr[63:0]
    38/47: $10\new_ascii_instr[63:0]
    39/47: $9\new_ascii_instr[63:0]
    40/47: $8\new_ascii_instr[63:0]
    41/47: $7\new_ascii_instr[63:0]
    42/47: $6\new_ascii_instr[63:0]
    43/47: $5\new_ascii_instr[63:0]
    44/47: $4\new_ascii_instr[63:0]
    45/47: $3\new_ascii_instr[63:0]
    46/47: $2\new_ascii_instr[63:0]
    47/47: $1\new_ascii_instr[63:0]
Creating decoders for process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:565$2286'.
     1/9: $0\mem_16bit_buffer[15:0]
     2/9: $0\prefetched_high_word[0:0]
     3/9: $0\mem_la_secondword[0:0]
     4/9: $0\mem_state[1:0]
     5/9: $0\mem_wstrb[3:0]
     6/9: $0\mem_wdata[31:0]
     7/9: $0\mem_addr[31:0]
     8/9: $0\mem_instr[0:0]
     9/9: $0\mem_valid[0:0]
Creating decoders for process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1234$2816'.
Creating decoders for process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:430$2248'.
     1/9: $0\mem_rdata_q[31:0] [31]
     2/9: $0\mem_rdata_q[31:0] [7]
     3/9: $0\mem_rdata_q[31:0] [24:20]
     4/9: $0\mem_rdata_q[31:0] [19:15]
     5/9: $0\mem_rdata_q[31:0] [6:0]
     6/9: $0\mem_rdata_q[31:0] [14:12]
     7/9: $0\mem_rdata_q[31:0] [11:8]
     8/9: $0\mem_rdata_q[31:0] [30:25]
     9/9: $0\next_insn_opcode[31:0]
Creating decoders for process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:401$2245'.
     1/5: $3\mem_rdata_word[31:0]
     2/5: $2\mem_rdata_word[31:0]
     3/5: $1\mem_rdata_word[31:0]
     4/5: $1\mem_la_wstrb[3:0]
     5/5: $1\mem_la_wdata[31:0]
Creating decoders for process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:390$2240'.
     1/2: $0\last_mem_valid[0:0]
     2/2: $0\mem_la_firstword_reg[0:0]
Creating decoders for process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:325$2166'.
     1/2: $1\pcpi_int_rd[31:0]
     2/2: $1\pcpi_int_wr[0:0]
Creating decoders for process `$paramod\picosoc\BARREL_SHIFTER=0\ENABLE_MULDIV=0\MEM_WORDS=32768.$proc$picosoc.v:205$1449'.
Creating decoders for process `$paramod\picosoc\BARREL_SHIFTER=0\ENABLE_MULDIV=0\MEM_WORDS=32768.$proc$picosoc.v:87$1416'.
Creating decoders for process `\picosoc_regs.$proc$picosoc.v:233$191'.
     1/3: $0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194
     2/3: $0$memwr$\regs$picosoc.v:234$190_DATA[31:0]$193
     3/3: $0$memwr$\regs$picosoc.v:234$190_ADDR[4:0]$192
Creating decoders for process `\simpleuart.$proc$simpleuart.v:109$136'.
     1/4: $0\send_divcnt[31:0]
     2/4: $0\send_dummy[0:0]
     3/4: $0\send_bitcnt[3:0]
     4/4: $0\send_pattern[9:0]
Creating decoders for process `\simpleuart.$proc$simpleuart.v:66$127'.
     1/5: $0\recv_divcnt[31:0]
     2/5: $0\recv_buf_valid[0:0]
     3/5: $0\recv_buf_data[7:0]
     4/5: $0\recv_pattern[7:0]
     5/5: $0\recv_state[3:0]
Creating decoders for process `\simpleuart.$proc$simpleuart.v:55$125'.
     1/4: $0\cfg_divider[31:0] [31:24]
     2/4: $0\cfg_divider[31:0] [23:16]
     3/4: $0\cfg_divider[31:0] [15:8]
     4/4: $0\cfg_divider[31:0] [7:0]
Creating decoders for process `\spimemio_xfer.$proc$spimemio.v:535$105'.
     1/14: $0\last_fetch[0:0]
     2/14: $0\fetch[0:0]
     3/14: $0\xfer_tag[3:0]
     4/14: $0\xfer_rd[0:0]
     5/14: $0\xfer_qspi[0:0]
     6/14: $0\xfer_cont[0:0]
     7/14: $0\dummy_count[3:0]
     8/14: $0\count[3:0]
     9/14: $0\ibuffer[7:0]
    10/14: $0\obuffer[7:0]
    11/14: $0\xfer_ddr[0:0]
    12/14: $0\xfer_dspi[0:0]
    13/14: $0\flash_clk[0:0]
    14/14: $0\flash_csb[0:0]
Creating decoders for process `\spimemio_xfer.$proc$spimemio.v:447$81'.
     1/33: $5\next_count[3:0]
     2/33: $5\next_obuffer[7:0]
     3/33: $5\next_ibuffer[7:0]
     4/33: $4\next_count[3:0]
     5/33: $4\next_obuffer[7:0]
     6/33: $4\next_ibuffer[7:0]
     7/33: $3\next_count[3:0]
     8/33: $3\next_obuffer[7:0]
     9/33: $3\next_ibuffer[7:0]
    10/33: $2\next_fetch[0:0]
    11/33: $2\next_count[3:0]
    12/33: $2\next_ibuffer[7:0]
    13/33: $2\next_obuffer[7:0]
    14/33: $2\flash_io0_do[0:0]
    15/33: $2\flash_io0_oe[0:0]
    16/33: $2\flash_io3_do[0:0]
    17/33: $2\flash_io3_oe[0:0]
    18/33: $2\flash_io2_do[0:0]
    19/33: $2\flash_io2_oe[0:0]
    20/33: $2\flash_io1_do[0:0]
    21/33: $2\flash_io1_oe[0:0]
    22/33: $1\next_fetch[0:0]
    23/33: $1\next_count[3:0]
    24/33: $1\next_ibuffer[7:0]
    25/33: $1\next_obuffer[7:0]
    26/33: $1\flash_io3_do[0:0]
    27/33: $1\flash_io3_oe[0:0]
    28/33: $1\flash_io2_do[0:0]
    29/33: $1\flash_io2_oe[0:0]
    30/33: $1\flash_io1_do[0:0]
    31/33: $1\flash_io1_oe[0:0]
    32/33: $1\flash_io0_do[0:0]
    33/33: $1\flash_io0_oe[0:0]
Creating decoders for process `\spimemio_xfer.$proc$spimemio.v:436$72'.
Creating decoders for process `\spimemio.$proc$spimemio.v:207$51'.
     1/17: $0\buffer[23:0] [23:16]
     2/17: $0\buffer[23:0] [15:8]
     3/17: $0\buffer[23:0] [7:0]
     4/17: $0\xfer_resetn[0:0]
     5/17: $0\state[3:0]
     6/17: $0\rd_inc[0:0]
     7/17: $0\rd_wait[0:0]
     8/17: $0\rd_valid[0:0]
     9/17: $0\rd_addr[23:0]
    10/17: $0\din_valid[0:0]
    11/17: $0\din_rd[0:0]
    12/17: $0\din_ddr[0:0]
    13/17: $0\din_qspi[0:0]
    14/17: $0\din_cont[0:0]
    15/17: $0\din_tag[3:0]
    16/17: $0\din_data[7:0]
    17/17: $0\rdata[31:0]
Creating decoders for process `\spimemio.$proc$spimemio.v:151$33'.
Creating decoders for process `\spimemio.$proc$spimemio.v:99$29'.
     1/10: $0\softreset[0:0]
     2/10: $0\config_do[3:0]
     3/10: $0\config_clk[0:0]
     4/10: $0\config_csb[0:0]
     5/10: $0\config_oe[3:0]
     6/10: $0\config_dummy[3:0]
     7/10: $0\config_cont[0:0]
     8/10: $0\config_qspi[0:0]
     9/10: $0\config_ddr[0:0]
    10/10: $0\config_en[0:0]
Creating decoders for process `\icebreaker.$proc$icebreaker.v:50$13'.
Creating decoders for process `\icebreaker.$proc$icebreaker.v:93$7'.
     1/6: $0\gpio[31:0] [31:24]
     2/6: $0\gpio[31:0] [23:16]
     3/6: $0\gpio[31:0] [15:8]
     4/6: $0\gpio[31:0] [7:0]
     5/6: $0\iomem_rdata[31:0]
     6/6: $0\iomem_ready[0:0]
Creating decoders for process `\icebreaker.$proc$icebreaker.v:53$2'.

7.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\cpuregs_rs1' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1382$2631'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\cpuregs_rs2' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1382$2631'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\decoded_rs' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1382$2631'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\cpuregs_write' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1304$2617'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\cpuregs_wrdata' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1304$2617'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\clear_prefetched_high_word' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1290$2612'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\alu_out' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1244$2589'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\alu_out_0' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1244$2589'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\dbg_ascii_state' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1181$2577'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\dbg_insn_opcode' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:807$2315'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\dbg_ascii_instr' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:807$2315'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\dbg_insn_imm' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:807$2315'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\dbg_insn_rs1' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:807$2315'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\dbg_insn_rs2' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:807$2315'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\dbg_insn_rd' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:807$2315'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\new_ascii_instr' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:700$2310'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\alu_add_sub' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1234$2816'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\alu_shl' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1234$2816'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\alu_shr' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1234$2816'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\alu_eq' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1234$2816'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\alu_ltu' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1234$2816'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\alu_lts' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1234$2816'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\mem_la_wdata' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:401$2245'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\mem_la_wstrb' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:401$2245'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\mem_rdata_word' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:401$2245'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\pcpi_int_wr' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:325$2166'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\pcpi_int_rd' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:325$2166'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\pcpi_int_wait' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:325$2166'.
No latch inferred for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\pcpi_int_ready' from process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:325$2166'.
No latch inferred for signal `$paramod\picosoc\BARREL_SHIFTER=0\ENABLE_MULDIV=0\MEM_WORDS=32768.\irq' from process `$paramod\picosoc\BARREL_SHIFTER=0\ENABLE_MULDIV=0\MEM_WORDS=32768.$proc$picosoc.v:87$1416'.
No latch inferred for signal `\spimemio_xfer.\flash_io0_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$81'.
No latch inferred for signal `\spimemio_xfer.\flash_io0_do' from process `\spimemio_xfer.$proc$spimemio.v:447$81'.
No latch inferred for signal `\spimemio_xfer.\flash_io1_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$81'.
No latch inferred for signal `\spimemio_xfer.\flash_io1_do' from process `\spimemio_xfer.$proc$spimemio.v:447$81'.
No latch inferred for signal `\spimemio_xfer.\flash_io2_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$81'.
No latch inferred for signal `\spimemio_xfer.\flash_io2_do' from process `\spimemio_xfer.$proc$spimemio.v:447$81'.
No latch inferred for signal `\spimemio_xfer.\flash_io3_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$81'.
No latch inferred for signal `\spimemio_xfer.\flash_io3_do' from process `\spimemio_xfer.$proc$spimemio.v:447$81'.
No latch inferred for signal `\spimemio_xfer.\next_obuffer' from process `\spimemio_xfer.$proc$spimemio.v:447$81'.
No latch inferred for signal `\spimemio_xfer.\next_ibuffer' from process `\spimemio_xfer.$proc$spimemio.v:447$81'.
No latch inferred for signal `\spimemio_xfer.\next_count' from process `\spimemio_xfer.$proc$spimemio.v:447$81'.
No latch inferred for signal `\spimemio_xfer.\next_fetch' from process `\spimemio_xfer.$proc$spimemio.v:447$81'.

7.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\trap' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6364' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\pcpi_valid' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6365' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\eoi' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6366' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\trace_valid' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6367' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\trace_data' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6368' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\count_cycle' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6369' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\count_instr' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6370' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\reg_pc' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6371' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\reg_next_pc' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6372' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\reg_op1' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6373' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\reg_op2' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6374' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\reg_out' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6375' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\reg_sh' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6376' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\irq_delay' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6377' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\irq_active' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6378' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\irq_mask' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6379' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\irq_pending' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6380' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\timer' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6381' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\mem_wordsize' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6382' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\mem_do_prefetch' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6383' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\mem_do_rinst' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6384' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\mem_do_rdata' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6385' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\mem_do_wdata' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6386' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\decoder_trigger' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6387' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\decoder_trigger_q' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6388' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\decoder_pseudo_trigger' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6389' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\decoder_pseudo_trigger_q' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6390' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\dbg_rs1val' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6391' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\dbg_rs2val' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6392' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\dbg_rs1val_valid' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6393' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\dbg_rs2val_valid' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6394' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\cpu_state' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6395' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\irq_state' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6396' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\set_mem_do_rinst' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6397' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\set_mem_do_rdata' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6398' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\set_mem_do_wdata' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6399' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\latched_store' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6400' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\latched_stalu' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6401' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\latched_branch' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6402' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\latched_compr' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6403' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\latched_trace' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6404' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\latched_is_lu' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6405' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\latched_is_lh' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6406' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\latched_is_lb' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6407' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\latched_rd' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6408' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\current_pc' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6409' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\pcpi_timeout' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6410' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\next_irq_pending' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6411' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\do_waitirq' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6412' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\alu_out_q' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6413' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\alu_out_0_q' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6414' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\alu_wait' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6415' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\alu_wait_2' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
  created $dff cell `$procdff$6416' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\clear_prefetched_high_word_q' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1288$2611'.
  created $dff cell `$procdff$6417' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\pcpi_insn' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6418' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_lui' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6419' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_auipc' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6420' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_jal' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6421' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_jalr' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6422' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_beq' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6423' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_bne' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6424' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_blt' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6425' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_bge' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6426' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_bltu' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6427' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_bgeu' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6428' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_lb' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6429' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_lh' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6430' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_lw' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6431' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_lbu' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6432' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_lhu' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6433' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_sb' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6434' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_sh' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6435' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_sw' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6436' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_addi' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6437' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_slti' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6438' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_sltiu' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6439' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_xori' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6440' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_ori' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6441' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_andi' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6442' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_slli' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6443' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_srli' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6444' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_srai' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6445' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_add' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6446' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_sub' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6447' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_sll' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6448' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_slt' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6449' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_sltu' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6450' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_xor' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6451' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_srl' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6452' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_sra' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6453' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_or' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6454' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_and' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6455' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_rdcycle' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6456' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_rdcycleh' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6457' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_rdinstr' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6458' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_rdinstrh' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6459' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_ecall_ebreak' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6460' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_getq' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6461' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_setq' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6462' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_retirq' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6463' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_maskirq' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6464' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_waitirq' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6465' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\instr_timer' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6466' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\decoded_rd' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6467' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\decoded_rs1' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6468' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\decoded_rs2' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6469' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\decoded_imm' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6470' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\decoded_imm_j' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6471' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\compressed_instr' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6472' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\is_lui_auipc_jal' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6473' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\is_lb_lh_lw_lbu_lhu' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6474' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\is_slli_srli_srai' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6475' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\is_jalr_addi_slti_sltiu_xori_ori_andi' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6476' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\is_sb_sh_sw' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6477' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\is_sll_srl_sra' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6478' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\is_lui_auipc_jal_jalr_addi_add_sub' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6479' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\is_slti_blt_slt' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6480' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\is_sltiu_bltu_sltu' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6481' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\is_beq_bne_blt_bge_bltu_bgeu' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6482' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\is_lbu_lhu_lw' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6483' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\is_alu_reg_imm' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6484' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\is_alu_reg_reg' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6485' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\is_compare' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
  created $dff cell `$procdff$6486' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\dbg_insn_addr' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:776$2311'.
  created $dff cell `$procdff$6487' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\q_ascii_instr' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:776$2311'.
  created $dff cell `$procdff$6488' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\q_insn_imm' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:776$2311'.
  created $dff cell `$procdff$6489' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\q_insn_opcode' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:776$2311'.
  created $dff cell `$procdff$6490' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\q_insn_rs1' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:776$2311'.
  created $dff cell `$procdff$6491' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\q_insn_rs2' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:776$2311'.
  created $dff cell `$procdff$6492' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\q_insn_rd' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:776$2311'.
  created $dff cell `$procdff$6493' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\dbg_next' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:776$2311'.
  created $dff cell `$procdff$6494' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\dbg_valid_insn' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:776$2311'.
  created $dff cell `$procdff$6495' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\cached_ascii_instr' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:776$2311'.
  created $dff cell `$procdff$6496' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\cached_insn_imm' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:776$2311'.
  created $dff cell `$procdff$6497' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\cached_insn_opcode' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:776$2311'.
  created $dff cell `$procdff$6498' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\cached_insn_rs1' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:776$2311'.
  created $dff cell `$procdff$6499' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\cached_insn_rs2' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:776$2311'.
  created $dff cell `$procdff$6500' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\cached_insn_rd' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:776$2311'.
  created $dff cell `$procdff$6501' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\mem_valid' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:565$2286'.
  created $dff cell `$procdff$6502' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\mem_instr' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:565$2286'.
  created $dff cell `$procdff$6503' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\mem_addr' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:565$2286'.
  created $dff cell `$procdff$6504' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\mem_wdata' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:565$2286'.
  created $dff cell `$procdff$6505' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\mem_wstrb' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:565$2286'.
  created $dff cell `$procdff$6506' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\mem_state' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:565$2286'.
  created $dff cell `$procdff$6507' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\mem_la_secondword' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:565$2286'.
  created $dff cell `$procdff$6508' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\prefetched_high_word' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:565$2286'.
  created $dff cell `$procdff$6509' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\mem_16bit_buffer' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:565$2286'.
  created $dff cell `$procdff$6510' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\next_insn_opcode' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:430$2248'.
  created $dff cell `$procdff$6511' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\mem_rdata_q' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:430$2248'.
  created $dff cell `$procdff$6512' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\mem_la_firstword_reg' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:390$2240'.
  created $dff cell `$procdff$6513' with positive edge clock.
Creating register for signal `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.\last_mem_valid' using process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:390$2240'.
  created $dff cell `$procdff$6514' with positive edge clock.
Creating register for signal `$paramod\picosoc\BARREL_SHIFTER=0\ENABLE_MULDIV=0\MEM_WORDS=32768.\ram_ready' using process `$paramod\picosoc\BARREL_SHIFTER=0\ENABLE_MULDIV=0\MEM_WORDS=32768.$proc$picosoc.v:205$1449'.
  created $dff cell `$procdff$6515' with positive edge clock.
Creating register for signal `\picosoc_regs.$memwr$\regs$picosoc.v:234$190_ADDR' using process `\picosoc_regs.$proc$picosoc.v:233$191'.
  created $dff cell `$procdff$6516' with positive edge clock.
Creating register for signal `\picosoc_regs.$memwr$\regs$picosoc.v:234$190_DATA' using process `\picosoc_regs.$proc$picosoc.v:233$191'.
  created $dff cell `$procdff$6517' with positive edge clock.
Creating register for signal `\picosoc_regs.$memwr$\regs$picosoc.v:234$190_EN' using process `\picosoc_regs.$proc$picosoc.v:233$191'.
  created $dff cell `$procdff$6518' with positive edge clock.
Creating register for signal `\simpleuart.\send_pattern' using process `\simpleuart.$proc$simpleuart.v:109$136'.
  created $dff cell `$procdff$6519' with positive edge clock.
Creating register for signal `\simpleuart.\send_bitcnt' using process `\simpleuart.$proc$simpleuart.v:109$136'.
  created $dff cell `$procdff$6520' with positive edge clock.
Creating register for signal `\simpleuart.\send_divcnt' using process `\simpleuart.$proc$simpleuart.v:109$136'.
  created $dff cell `$procdff$6521' with positive edge clock.
Creating register for signal `\simpleuart.\send_dummy' using process `\simpleuart.$proc$simpleuart.v:109$136'.
  created $dff cell `$procdff$6522' with positive edge clock.
Creating register for signal `\simpleuart.\recv_state' using process `\simpleuart.$proc$simpleuart.v:66$127'.
  created $dff cell `$procdff$6523' with positive edge clock.
Creating register for signal `\simpleuart.\recv_divcnt' using process `\simpleuart.$proc$simpleuart.v:66$127'.
  created $dff cell `$procdff$6524' with positive edge clock.
Creating register for signal `\simpleuart.\recv_pattern' using process `\simpleuart.$proc$simpleuart.v:66$127'.
  created $dff cell `$procdff$6525' with positive edge clock.
Creating register for signal `\simpleuart.\recv_buf_data' using process `\simpleuart.$proc$simpleuart.v:66$127'.
  created $dff cell `$procdff$6526' with positive edge clock.
Creating register for signal `\simpleuart.\recv_buf_valid' using process `\simpleuart.$proc$simpleuart.v:66$127'.
  created $dff cell `$procdff$6527' with positive edge clock.
Creating register for signal `\simpleuart.\cfg_divider' using process `\simpleuart.$proc$simpleuart.v:55$125'.
  created $dff cell `$procdff$6528' with positive edge clock.
Creating register for signal `\spimemio_xfer.\flash_csb' using process `\spimemio_xfer.$proc$spimemio.v:535$105'.
  created $dff cell `$procdff$6529' with positive edge clock.
Creating register for signal `\spimemio_xfer.\flash_clk' using process `\spimemio_xfer.$proc$spimemio.v:535$105'.
  created $dff cell `$procdff$6530' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_dspi' using process `\spimemio_xfer.$proc$spimemio.v:535$105'.
  created $dff cell `$procdff$6531' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_ddr' using process `\spimemio_xfer.$proc$spimemio.v:535$105'.
  created $dff cell `$procdff$6532' with positive edge clock.
Creating register for signal `\spimemio_xfer.\obuffer' using process `\spimemio_xfer.$proc$spimemio.v:535$105'.
  created $dff cell `$procdff$6533' with positive edge clock.
Creating register for signal `\spimemio_xfer.\ibuffer' using process `\spimemio_xfer.$proc$spimemio.v:535$105'.
  created $dff cell `$procdff$6534' with positive edge clock.
Creating register for signal `\spimemio_xfer.\count' using process `\spimemio_xfer.$proc$spimemio.v:535$105'.
  created $dff cell `$procdff$6535' with positive edge clock.
Creating register for signal `\spimemio_xfer.\dummy_count' using process `\spimemio_xfer.$proc$spimemio.v:535$105'.
  created $dff cell `$procdff$6536' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_cont' using process `\spimemio_xfer.$proc$spimemio.v:535$105'.
  created $dff cell `$procdff$6537' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_qspi' using process `\spimemio_xfer.$proc$spimemio.v:535$105'.
  created $dff cell `$procdff$6538' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_rd' using process `\spimemio_xfer.$proc$spimemio.v:535$105'.
  created $dff cell `$procdff$6539' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_tag' using process `\spimemio_xfer.$proc$spimemio.v:535$105'.
  created $dff cell `$procdff$6540' with positive edge clock.
Creating register for signal `\spimemio_xfer.\fetch' using process `\spimemio_xfer.$proc$spimemio.v:535$105'.
  created $dff cell `$procdff$6541' with positive edge clock.
Creating register for signal `\spimemio_xfer.\last_fetch' using process `\spimemio_xfer.$proc$spimemio.v:535$105'.
  created $dff cell `$procdff$6542' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_ddr_q' using process `\spimemio_xfer.$proc$spimemio.v:436$72'.
  created $dff cell `$procdff$6543' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_tag_q' using process `\spimemio_xfer.$proc$spimemio.v:436$72'.
  created $dff cell `$procdff$6544' with positive edge clock.
Creating register for signal `\spimemio.\rdata' using process `\spimemio.$proc$spimemio.v:207$51'.
  created $dff cell `$procdff$6545' with positive edge clock.
Creating register for signal `\spimemio.\xfer_resetn' using process `\spimemio.$proc$spimemio.v:207$51'.
  created $dff cell `$procdff$6546' with positive edge clock.
Creating register for signal `\spimemio.\din_valid' using process `\spimemio.$proc$spimemio.v:207$51'.
  created $dff cell `$procdff$6547' with positive edge clock.
Creating register for signal `\spimemio.\din_data' using process `\spimemio.$proc$spimemio.v:207$51'.
  created $dff cell `$procdff$6548' with positive edge clock.
Creating register for signal `\spimemio.\din_tag' using process `\spimemio.$proc$spimemio.v:207$51'.
  created $dff cell `$procdff$6549' with positive edge clock.
Creating register for signal `\spimemio.\din_cont' using process `\spimemio.$proc$spimemio.v:207$51'.
  created $dff cell `$procdff$6550' with positive edge clock.
Creating register for signal `\spimemio.\din_qspi' using process `\spimemio.$proc$spimemio.v:207$51'.
  created $dff cell `$procdff$6551' with positive edge clock.
Creating register for signal `\spimemio.\din_ddr' using process `\spimemio.$proc$spimemio.v:207$51'.
  created $dff cell `$procdff$6552' with positive edge clock.
Creating register for signal `\spimemio.\din_rd' using process `\spimemio.$proc$spimemio.v:207$51'.
  created $dff cell `$procdff$6553' with positive edge clock.
Creating register for signal `\spimemio.\buffer' using process `\spimemio.$proc$spimemio.v:207$51'.
  created $dff cell `$procdff$6554' with positive edge clock.
Creating register for signal `\spimemio.\rd_addr' using process `\spimemio.$proc$spimemio.v:207$51'.
  created $dff cell `$procdff$6555' with positive edge clock.
Creating register for signal `\spimemio.\rd_valid' using process `\spimemio.$proc$spimemio.v:207$51'.
  created $dff cell `$procdff$6556' with positive edge clock.
Creating register for signal `\spimemio.\rd_wait' using process `\spimemio.$proc$spimemio.v:207$51'.
  created $dff cell `$procdff$6557' with positive edge clock.
Creating register for signal `\spimemio.\rd_inc' using process `\spimemio.$proc$spimemio.v:207$51'.
  created $dff cell `$procdff$6558' with positive edge clock.
Creating register for signal `\spimemio.\state' using process `\spimemio.$proc$spimemio.v:207$51'.
  created $dff cell `$procdff$6559' with positive edge clock.
Creating register for signal `\spimemio.\xfer_io0_90' using process `\spimemio.$proc$spimemio.v:151$33'.
  created $dff cell `$procdff$6560' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io1_90' using process `\spimemio.$proc$spimemio.v:151$33'.
  created $dff cell `$procdff$6561' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io2_90' using process `\spimemio.$proc$spimemio.v:151$33'.
  created $dff cell `$procdff$6562' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io3_90' using process `\spimemio.$proc$spimemio.v:151$33'.
  created $dff cell `$procdff$6563' with negative edge clock.
Creating register for signal `\spimemio.\softreset' using process `\spimemio.$proc$spimemio.v:99$29'.
  created $dff cell `$procdff$6564' with positive edge clock.
Creating register for signal `\spimemio.\config_en' using process `\spimemio.$proc$spimemio.v:99$29'.
  created $dff cell `$procdff$6565' with positive edge clock.
Creating register for signal `\spimemio.\config_ddr' using process `\spimemio.$proc$spimemio.v:99$29'.
  created $dff cell `$procdff$6566' with positive edge clock.
Creating register for signal `\spimemio.\config_qspi' using process `\spimemio.$proc$spimemio.v:99$29'.
  created $dff cell `$procdff$6567' with positive edge clock.
Creating register for signal `\spimemio.\config_cont' using process `\spimemio.$proc$spimemio.v:99$29'.
  created $dff cell `$procdff$6568' with positive edge clock.
Creating register for signal `\spimemio.\config_dummy' using process `\spimemio.$proc$spimemio.v:99$29'.
  created $dff cell `$procdff$6569' with positive edge clock.
Creating register for signal `\spimemio.\config_oe' using process `\spimemio.$proc$spimemio.v:99$29'.
  created $dff cell `$procdff$6570' with positive edge clock.
Creating register for signal `\spimemio.\config_csb' using process `\spimemio.$proc$spimemio.v:99$29'.
  created $dff cell `$procdff$6571' with positive edge clock.
Creating register for signal `\spimemio.\config_clk' using process `\spimemio.$proc$spimemio.v:99$29'.
  created $dff cell `$procdff$6572' with positive edge clock.
Creating register for signal `\spimemio.\config_do' using process `\spimemio.$proc$spimemio.v:99$29'.
  created $dff cell `$procdff$6573' with positive edge clock.
Creating register for signal `\icebreaker.\iomem_ready' using process `\icebreaker.$proc$icebreaker.v:93$7'.
  created $dff cell `$procdff$6574' with positive edge clock.
Creating register for signal `\icebreaker.\iomem_rdata' using process `\icebreaker.$proc$icebreaker.v:93$7'.
  created $dff cell `$procdff$6575' with positive edge clock.
Creating register for signal `\icebreaker.\gpio' using process `\icebreaker.$proc$icebreaker.v:93$7'.
  created $dff cell `$procdff$6576' with positive edge clock.
Creating register for signal `\icebreaker.\reset_cnt' using process `\icebreaker.$proc$icebreaker.v:53$2'.
  created $dff cell `$procdff$6577' with positive edge clock.

7.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 55 empty switches in `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
Removing empty process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1397$2645'.
Removing empty process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1382$2631'.
Found and cleaned up 2 empty switches in `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1304$2617'.
Removing empty process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1304$2617'.
Found and cleaned up 2 empty switches in `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1290$2612'.
Removing empty process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1290$2612'.
Removing empty process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1288$2611'.
Found and cleaned up 2 empty switches in `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1244$2589'.
Removing empty process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1244$2589'.
Found and cleaned up 8 empty switches in `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1181$2577'.
Removing empty process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1181$2577'.
Found and cleaned up 22 empty switches in `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
Removing empty process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:856$2317'.
Found and cleaned up 3 empty switches in `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:807$2315'.
Removing empty process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:807$2315'.
Found and cleaned up 5 empty switches in `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:776$2311'.
Removing empty process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:776$2311'.
Found and cleaned up 47 empty switches in `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:700$2310'.
Removing empty process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:700$2310'.
Found and cleaned up 16 empty switches in `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:565$2286'.
Removing empty process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:565$2286'.
Removing empty process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:1234$2816'.
Found and cleaned up 19 empty switches in `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:430$2248'.
Removing empty process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:430$2248'.
Found and cleaned up 3 empty switches in `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:401$2245'.
Removing empty process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:401$2245'.
Found and cleaned up 2 empty switches in `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:390$2240'.
Removing empty process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:390$2240'.
Found and cleaned up 1 empty switch in `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:325$2166'.
Removing empty process `$paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.$proc$picorv32.v:325$2166'.
Removing empty process `$paramod\picosoc\BARREL_SHIFTER=0\ENABLE_MULDIV=0\MEM_WORDS=32768.$proc$picosoc.v:205$1449'.
Removing empty process `$paramod\picosoc\BARREL_SHIFTER=0\ENABLE_MULDIV=0\MEM_WORDS=32768.$proc$picosoc.v:87$1416'.
Found and cleaned up 1 empty switch in `\picosoc_regs.$proc$picosoc.v:233$191'.
Removing empty process `picosoc_regs.$proc$picosoc.v:233$191'.
Found and cleaned up 5 empty switches in `\simpleuart.$proc$simpleuart.v:109$136'.
Removing empty process `simpleuart.$proc$simpleuart.v:109$136'.
Found and cleaned up 7 empty switches in `\simpleuart.$proc$simpleuart.v:66$127'.
Removing empty process `simpleuart.$proc$simpleuart.v:66$127'.
Found and cleaned up 5 empty switches in `\simpleuart.$proc$simpleuart.v:55$125'.
Removing empty process `simpleuart.$proc$simpleuart.v:55$125'.
Found and cleaned up 4 empty switches in `\spimemio_xfer.$proc$spimemio.v:535$105'.
Removing empty process `spimemio_xfer.$proc$spimemio.v:535$105'.
Found and cleaned up 5 empty switches in `\spimemio_xfer.$proc$spimemio.v:447$81'.
Removing empty process `spimemio_xfer.$proc$spimemio.v:447$81'.
Removing empty process `spimemio_xfer.$proc$spimemio.v:436$72'.
Found and cleaned up 25 empty switches in `\spimemio.$proc$spimemio.v:207$51'.
Removing empty process `spimemio.$proc$spimemio.v:207$51'.
Removing empty process `spimemio.$proc$spimemio.v:151$33'.
Found and cleaned up 5 empty switches in `\spimemio.$proc$spimemio.v:99$29'.
Removing empty process `spimemio.$proc$spimemio.v:99$29'.
Removing empty process `icebreaker.$proc$icebreaker.v:50$13'.
Found and cleaned up 6 empty switches in `\icebreaker.$proc$icebreaker.v:93$7'.
Removing empty process `icebreaker.$proc$icebreaker.v:93$7'.
Removing empty process `icebreaker.$proc$icebreaker.v:53$2'.
Cleaned up 250 empty switches.

7.4. Executing FLATTEN pass (flatten design).
Using template $paramod\picosoc\BARREL_SHIFTER=0\ENABLE_MULDIV=0\MEM_WORDS=32768 for cells of type $paramod\picosoc\BARREL_SHIFTER=0\ENABLE_MULDIV=0\MEM_WORDS=32768.
Using template $paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32 for cells of type $paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.
Using template $paramod\ice40up5k_spram\WORDS=32768 for cells of type $paramod\ice40up5k_spram\WORDS=32768.
Using template simpleuart for cells of type simpleuart.
Using template spimemio for cells of type spimemio.
Using template picosoc_regs for cells of type picosoc_regs.
Using template spimemio_xfer for cells of type spimemio_xfer.
<suppressed ~7 debug messages>
No more expansions possible.
Deleting now unused module $paramod$34d328af50f15f3a44df4afb6b848e3a17681e2c\picorv32.
Deleting now unused module $paramod\ice40up5k_spram\WORDS=32768.
Deleting now unused module $paramod\picosoc\BARREL_SHIFTER=0\ENABLE_MULDIV=0\MEM_WORDS=32768.
Deleting now unused module picosoc_regs.
Deleting now unused module simpleuart.
Deleting now unused module spimemio_xfer.
Deleting now unused module spimemio.

7.5. Executing TRIBUF pass.

7.6. Executing DEMINOUT pass (demote inout ports to input or output).

7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.
<suppressed ~713 debug messages>

7.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..
Removed 286 unused cells and 2035 unused wires.
<suppressed ~353 debug messages>

7.9. Executing CHECK pass (checking for obvious problems).
checking module icebreaker..
found and reported 0 problems.

7.10. Executing OPT pass (performing simple optimizations).

7.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.

7.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\icebreaker'.
<suppressed ~1629 debug messages>
Removed a total of 543 cells.

7.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \icebreaker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2831.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2841.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2843.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2849.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2856.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2858.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2864.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2880.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2886.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2889.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2902.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2909.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2912.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2925.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2937.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2940.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2949.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2952.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2960.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2962.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$2965.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3016.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3019.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3026.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3028.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3031.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3050.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3052.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3055.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3076.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3079.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3113.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3118.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3121.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3143.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3145.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3148.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3160.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3163.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3206.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3219.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3232.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3272.
    dead port 4/7 on $pmux $techmap\soc.cpu.$procmux$3468.
    dead port 5/7 on $pmux $techmap\soc.cpu.$procmux$3468.
    dead port 7/12 on $pmux $techmap\soc.cpu.$procmux$3507.
    dead port 8/12 on $pmux $techmap\soc.cpu.$procmux$3507.
    dead port 4/7 on $pmux $techmap\soc.cpu.$procmux$3712.
    dead port 5/7 on $pmux $techmap\soc.cpu.$procmux$3712.
    dead port 3/4 on $pmux $techmap\soc.cpu.$procmux$3776.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$3781.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3781.
    dead port 1/2 on $mux $techmap\soc.cpu.$procmux$3783.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$3783.
    dead port 7/12 on $pmux $techmap\soc.cpu.$procmux$3795.
    dead port 8/12 on $pmux $techmap\soc.cpu.$procmux$3795.
    dead port 3/4 on $pmux $techmap\soc.cpu.$procmux$3977.
    dead port 7/12 on $pmux $techmap\soc.cpu.$procmux$3993.
    dead port 8/12 on $pmux $techmap\soc.cpu.$procmux$3993.
    dead port 7/12 on $pmux $techmap\soc.cpu.$procmux$4175.
    dead port 8/12 on $pmux $techmap\soc.cpu.$procmux$4175.
    dead port 4/9 on $pmux $techmap\soc.cpu.$procmux$4226.
    dead port 5/9 on $pmux $techmap\soc.cpu.$procmux$4226.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$4348.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$4357.
    dead port 1/8 on $pmux $techmap\soc.cpu.$procmux$4372.
    dead port 2/8 on $pmux $techmap\soc.cpu.$procmux$4372.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$5503.
    dead port 2/2 on $mux $techmap\soc.cpu.$procmux$5510.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5772.
    dead port 1/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5774.
    dead port 2/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5774.
    dead port 3/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5774.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5778.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5785.
    dead port 1/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5787.
    dead port 2/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5787.
    dead port 3/4 on $pmux $techmap\soc.spimemio.xfer.$procmux$5787.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5791.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5811.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5813.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5822.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5824.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5846.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5848.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5858.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5860.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5870.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5880.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5890.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5900.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5910.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5920.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5928.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5936.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5944.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5952.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5962.
    dead port 2/2 on $mux $techmap\soc.spimemio.xfer.$procmux$5972.
Removed 99 multiplexer ports.
<suppressed ~255 debug messages>

7.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \icebreaker.
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2915: { $techmap\soc.cpu.$eq$picorv32.v:1308$2618_Y $auto$opt_reduce.cc:134:opt_mux$6579 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3196: { $techmap\soc.cpu.$procmux$2872_CMP $auto$opt_reduce.cc:134:opt_mux$6581 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3209: { $auto$opt_reduce.cc:134:opt_mux$6583 $techmap\soc.cpu.$procmux$2871_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3222: { $techmap\soc.cpu.$procmux$2874_CMP $auto$opt_reduce.cc:134:opt_mux$6585 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3448: { $techmap\soc.cpu.$eq$picorv32.v:1308$2618_Y $techmap\soc.cpu.$procmux$2876_CMP $techmap\soc.cpu.$procmux$2874_CMP $techmap\soc.cpu.$procmux$2873_CMP $techmap\soc.cpu.$procmux$2871_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3507: { \soc.cpu.is_slli_srli_srai $auto$opt_reduce.cc:134:opt_mux$6587 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3549: { $techmap\soc.cpu.$eq$picorv32.v:1308$2618_Y $techmap\soc.cpu.$procmux$2874_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3689: { $techmap\soc.cpu.$eq$picorv32.v:1308$2618_Y $techmap\soc.cpu.$procmux$2876_CMP $techmap\soc.cpu.$procmux$2874_CMP $auto$opt_reduce.cc:134:opt_mux$6589 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3712: $auto$opt_reduce.cc:134:opt_mux$6591
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3795: { \soc.cpu.instr_trap $auto$opt_reduce.cc:134:opt_mux$6595 $techmap\soc.cpu.$logic_and$picorv32.v:1697$2726_Y \soc.cpu.is_slli_srli_srai $auto$opt_reduce.cc:134:opt_mux$6593 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3967: { $techmap\soc.cpu.$eq$picorv32.v:1308$2618_Y $techmap\soc.cpu.$procmux$2876_CMP $techmap\soc.cpu.$procmux$2875_CMP $techmap\soc.cpu.$procmux$2873_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3993: { $techmap\soc.cpu.$logic_and$picorv32.v:1697$2726_Y $auto$opt_reduce.cc:134:opt_mux$6599 $auto$opt_reduce.cc:134:opt_mux$6597 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4175: { $auto$opt_reduce.cc:134:opt_mux$6603 $auto$opt_reduce.cc:134:opt_mux$6601 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4226: { \soc.cpu.is_lui_auipc_jal $auto$opt_reduce.cc:134:opt_mux$6605 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4343: $auto$opt_reduce.cc:134:opt_mux$6607
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4433: { $techmap\soc.cpu.$procmux$4430_CMP $techmap\soc.cpu.$procmux$4448_CMP $techmap\soc.cpu.$procmux$4426_CMP $auto$opt_reduce.cc:134:opt_mux$6609 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4451: $auto$opt_reduce.cc:134:opt_mux$6611
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4519: { $techmap\soc.cpu.$procmux$4430_CMP $techmap\soc.cpu.$procmux$4448_CMP $techmap\soc.cpu.$procmux$4426_CMP $auto$opt_reduce.cc:134:opt_mux$6613 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4537: { $techmap\soc.cpu.$procmux$4430_CMP $auto$opt_reduce.cc:134:opt_mux$6615 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4585: { $auto$opt_reduce.cc:134:opt_mux$6617 $techmap\soc.cpu.$procmux$4448_CMP $techmap\soc.cpu.$procmux$4426_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4606: $auto$opt_reduce.cc:134:opt_mux$6619
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4727: { $techmap\soc.cpu.$procmux$4735_CMP $auto$opt_reduce.cc:134:opt_mux$6621 $techmap\soc.cpu.$procmux$4448_CMP $techmap\soc.cpu.$procmux$4426_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4739: $auto$opt_reduce.cc:134:opt_mux$6623
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4895: $auto$opt_reduce.cc:134:opt_mux$6625
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5282: { $techmap\soc.cpu.$procmux$4426_CMP $auto$opt_reduce.cc:134:opt_mux$6627 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5297: { $techmap\soc.cpu.$procmux$4426_CMP $auto$opt_reduce.cc:134:opt_mux$6629 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5315: $auto$opt_reduce.cc:134:opt_mux$6631
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5328: $auto$opt_reduce.cc:134:opt_mux$6633
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5353: { $auto$opt_reduce.cc:134:opt_mux$6635 $techmap\soc.cpu.$procmux$4448_CMP $techmap\soc.cpu.$procmux$4426_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5388: { $techmap\soc.cpu.$procmux$4430_CMP $techmap\soc.cpu.$procmux$4426_CMP $auto$opt_reduce.cc:134:opt_mux$6637 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5403: { $techmap\soc.cpu.$procmux$4448_CMP $techmap\soc.cpu.$procmux$4426_CMP $auto$opt_reduce.cc:134:opt_mux$6639 $techmap\soc.cpu.$procmux$4434_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5430: { $techmap\soc.cpu.$procmux$4430_CMP $auto$opt_reduce.cc:134:opt_mux$6641 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5443: $auto$opt_reduce.cc:134:opt_mux$6643
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5469: { $auto$opt_reduce.cc:134:opt_mux$6647 $techmap\soc.cpu.$procmux$4448_CMP $techmap\soc.cpu.$procmux$4426_CMP $auto$opt_reduce.cc:134:opt_mux$6645 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5488: { $techmap\soc.cpu.$procmux$4430_CMP $auto$opt_reduce.cc:134:opt_mux$6649 }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.cpuregs.$procmux$5544:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194
      New ports: A=1'0, B=1'1, Y=$techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0]
      New connections: $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [31:1] = { $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] $techmap\soc.cpu.cpuregs.$0$memwr$\regs$picosoc.v:234$190_EN[31:0]$194 [0] }
    New ctrl vector for $pmux cell $techmap\soc.simpleuart.$procmux$5624: $auto$opt_reduce.cc:134:opt_mux$6651
    New ctrl vector for $pmux cell $techmap\soc.spimemio.$procmux$6231: { $techmap\soc.spimemio.$procmux$6074_CMP $auto$opt_reduce.cc:134:opt_mux$6653 $techmap\soc.spimemio.$procmux$6060_CMP $techmap\soc.spimemio.$procmux$6057_CMP $techmap\soc.spimemio.$procmux$6054_CMP $techmap\soc.spimemio.$procmux$6051_CMP }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$5761: $auto$opt_reduce.cc:134:opt_mux$6655
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2870: { $techmap\soc.cpu.$eq$picorv32.v:1308$2618_Y $auto$opt_reduce.cc:134:opt_mux$6657 }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$5906: { $techmap\soc.spimemio.xfer.$procmux$5764_CMP $auto$opt_reduce.cc:134:opt_mux$6659 }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$5916: { $techmap\soc.spimemio.xfer.$procmux$5764_CMP $auto$opt_reduce.cc:134:opt_mux$6661 }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$5925: $auto$opt_reduce.cc:134:opt_mux$6663
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$2892: { $techmap\soc.cpu.$eq$picorv32.v:1308$2618_Y $techmap\soc.cpu.$procmux$2876_CMP $auto$opt_reduce.cc:134:opt_mux$6665 }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$5933: $auto$opt_reduce.cc:134:opt_mux$6667
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$5941: $auto$opt_reduce.cc:134:opt_mux$6669
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$5949: $auto$opt_reduce.cc:134:opt_mux$6671
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$5958: { $techmap\soc.spimemio.xfer.$procmux$5764_CMP $auto$opt_reduce.cc:134:opt_mux$6673 }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.xfer.$procmux$5968: { $techmap\soc.spimemio.xfer.$procmux$5764_CMP $auto$opt_reduce.cc:134:opt_mux$6675 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$6586: { \soc.cpu.instr_rdcycle \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdinstrh \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer \soc.cpu.instr_trap \soc.cpu.is_lui_auipc_jal \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi $techmap\soc.cpu.$logic_and$picorv32.v:1697$2726_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$6590: { \soc.cpu.instr_rdcycle \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdinstrh \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$6594: { \soc.cpu.instr_rdcycle \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdinstrh \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$6598: { \soc.cpu.instr_rdcycle \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdinstrh \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer \soc.cpu.instr_trap \soc.cpu.is_slli_srli_srai }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$6602: { \soc.cpu.instr_rdcycle \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdinstrh \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer \soc.cpu.instr_trap \soc.cpu.is_slli_srli_srai $techmap\soc.cpu.$logic_and$picorv32.v:1697$2726_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$6604: { \soc.cpu.instr_rdcycle \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdinstrh \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer \soc.cpu.instr_trap }
  Optimizing cells in module \icebreaker.
Performed a total of 55 changes.

7.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\icebreaker'.
<suppressed ~177 debug messages>
Removed a total of 59 cells.

7.10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $techmap\soc.cpu.$procdff$6461 ($dff) from module icebreaker.
Removing $techmap\soc.cpu.$procdff$6462 ($dff) from module icebreaker.
Removing $techmap\soc.cpu.$procdff$6410 ($dff) from module icebreaker.
Replaced 3 DFF cells.

7.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..
Removed 15 unused cells and 691 unused wires.
<suppressed ~19 debug messages>

7.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.

7.10.9. Rerunning OPT passes. (Maybe there is more to do..)

7.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \icebreaker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~258 debug messages>

7.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \icebreaker.
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3319: $auto$opt_reduce.cc:134:opt_mux$6677
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3336: { $techmap\soc.cpu.$procmux$2874_CMP $auto$opt_reduce.cc:134:opt_mux$6679 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$3754: { $techmap\soc.cpu.$eq$picorv32.v:1308$2618_Y $techmap\soc.cpu.$procmux$2876_CMP $techmap\soc.cpu.$procmux$2875_CMP $techmap\soc.cpu.$procmux$2874_CMP $techmap\soc.cpu.$procmux$2873_CMP $auto$opt_reduce.cc:134:opt_mux$6681 }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4621: $auto$opt_reduce.cc:134:opt_mux$6683
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$5326: { $techmap\soc.cpu.$procmux$4450_CMP $auto$opt_reduce.cc:134:opt_mux$6685 }
    New ctrl vector for $pmux cell $techmap\soc.spimemio.$procmux$6036: $auto$opt_reduce.cc:134:opt_mux$6687
    New ctrl vector for $pmux cell $techmap\soc.spimemio.$procmux$6138: { $techmap\soc.spimemio.$procmux$6074_CMP $auto$opt_reduce.cc:134:opt_mux$6689 $techmap\soc.spimemio.$procmux$6051_CMP }
  Optimizing cells in module \icebreaker.
Performed a total of 7 changes.

7.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\icebreaker'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

7.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

7.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

7.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.

7.10.16. Rerunning OPT passes. (Maybe there is more to do..)

7.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \icebreaker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~258 debug messages>

7.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \icebreaker.
Performed a total of 0 changes.

7.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\icebreaker'.
Removed a total of 0 cells.

7.10.20. Executing OPT_RMDFF pass (remove dff with constant values).

7.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..

7.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.

7.10.23. Finished OPT passes. (There is nothing left to do.)

7.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 5 bits (of 6) from port B of cell icebreaker.$add$icebreaker.v:54$4 ($add).
Removed top 6 bits (of 8) from port B of cell icebreaker.$eq$icebreaker.v:98$11 ($eq).
Removed top 14 bits (of 32) from port B of cell icebreaker.$techmap\soc.$lt$picosoc.v:206$1452 ($lt).
Removed top 6 bits (of 32) from port B of cell icebreaker.$techmap\soc.$lt$picosoc.v:159$1442 ($lt).
Removed top 14 bits (of 32) from port B of cell icebreaker.$techmap\soc.$ge$picosoc.v:159$1440 ($ge).
Removed top 6 bits (of 32) from port B of cell icebreaker.$techmap\soc.$eq$picosoc.v:121$1423 ($eq).
Removed top 6 bits (of 32) from port B of cell icebreaker.$techmap\soc.$eq$picosoc.v:118$1421 ($eq).
Removed top 6 bits (of 32) from port B of cell icebreaker.$techmap\soc.$eq$picosoc.v:115$1419 ($eq).
Removed top 7 bits (of 8) from port B of cell icebreaker.$techmap\soc.$gt$picosoc.v:110$1417 ($gt).
Removed top 16 bits (of 32) from mux cell icebreaker.$techmap\soc.cpu.$procmux$5507 ($pmux).
Removed top 1 bits (of 2) from port B of cell icebreaker.$techmap\soc.cpu.$procmux$5501_CMP0 ($eq).
Removed top 24 bits (of 32) from mux cell icebreaker.$techmap\soc.cpu.$procmux$5498 ($pmux).
Removed top 2 bits (of 6) from mux cell icebreaker.$techmap\soc.cpu.$procmux$5482 ($mux).
Removed top 1 bits (of 2) from port B of cell icebreaker.$techmap\soc.cpu.$procmux$5167_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell icebreaker.$techmap\soc.cpu.$procmux$4735_CMP0 ($eq).
Removed top 2 bits (of 4) from mux cell icebreaker.$techmap\soc.cpu.$procmux$4511 ($mux).
Removed top 1 bits (of 3) from port B of cell icebreaker.$techmap\soc.cpu.$procmux$4453_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell icebreaker.$techmap\soc.cpu.$procmux$4450_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell icebreaker.$techmap\soc.cpu.$procmux$4448_CMP0 ($eq).
Removed cell icebreaker.$techmap\soc.cpu.$procmux$4360 ($mux).
Removed top 4 bits (of 8) from mux cell icebreaker.$techmap\soc.cpu.$procmux$3776 ($pmux).
Removed cell icebreaker.$techmap\soc.cpu.$procmux$3521 ($mux).
Removed cell icebreaker.$techmap\soc.cpu.$procmux$3501 ($mux).
Removed cell icebreaker.$techmap\soc.cpu.$procmux$3488 ($mux).
Removed cell icebreaker.$techmap\soc.cpu.$procmux$3485 ($mux).
Removed cell icebreaker.$techmap\soc.cpu.$procmux$3483 ($mux).
Removed cell icebreaker.$techmap\soc.cpu.$procmux$3451 ($mux).
Removed cell icebreaker.$techmap\soc.cpu.$procmux$3446 ($mux).
Removed cell icebreaker.$techmap\soc.cpu.$procmux$3444 ($mux).
Removed cell icebreaker.$techmap\soc.cpu.$procmux$3180 ($mux).
Removed cell icebreaker.$techmap\soc.cpu.$procmux$3177 ($mux).
Removed top 2 bits (of 8) from port B of cell icebreaker.$techmap\soc.cpu.$procmux$2876_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell icebreaker.$techmap\soc.cpu.$procmux$2875_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell icebreaker.$techmap\soc.cpu.$procmux$2874_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell icebreaker.$techmap\soc.cpu.$procmux$2873_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell icebreaker.$techmap\soc.cpu.$procmux$2872_CMP0 ($eq).
Removed top 7 bits (of 8) from port B of cell icebreaker.$techmap\soc.cpu.$procmux$2871_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:1924$2795 ($eq).
Removed top 31 bits (of 32) from port B of cell icebreaker.$techmap\soc.cpu.$sub$picorv32.v:1851$2770 ($sub).
Removed top 27 bits (of 32) from port Y of cell icebreaker.$techmap\soc.cpu.$sub$picorv32.v:1851$2770 ($sub).
Removed top 29 bits (of 32) from port B of cell icebreaker.$techmap\soc.cpu.$sub$picorv32.v:1843$2763 ($sub).
Removed top 27 bits (of 32) from port Y of cell icebreaker.$techmap\soc.cpu.$sub$picorv32.v:1843$2763 ($sub).
Removed top 29 bits (of 32) from port B of cell icebreaker.$techmap\soc.cpu.$ge$picorv32.v:1836$2755 ($ge).
Removed top 31 bits (of 32) from port B of cell icebreaker.$techmap\soc.cpu.$add$picorv32.v:1565$2703 ($add).
Removed top 29 bits (of 32) from mux cell icebreaker.$techmap\soc.cpu.$ternary$picorv32.v:1553$2699 ($mux).
Removed top 29 bits (of 32) from mux cell icebreaker.$techmap\soc.cpu.$ternary$picorv32.v:1547$2694 ($mux).
Removed top 1 bits (of 2) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:1542$2691 ($eq).
Removed top 31 bits (of 32) from port B of cell icebreaker.$techmap\soc.cpu.$sub$picorv32.v:1438$2651 ($sub).
Removed top 31 bits (of 32) from port B of cell icebreaker.$techmap\soc.cpu.$add$picorv32.v:1428$2646 ($add).
Removed top 29 bits (of 32) from mux cell icebreaker.$techmap\soc.cpu.$ternary$picorv32.v:1312$2619 ($mux).
Removed top 1 bits (of 8) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:1308$2618 ($eq).
Removed top 4 bits (of 7) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:1090$2538 ($eq).
Removed top 5 bits (of 7) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:1089$2534 ($eq).
Removed top 3 bits (of 7) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:1089$2533 ($eq).
Removed top 1 bits (of 7) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:1064$2447 ($eq).
Removed top 1 bits (of 3) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:1057$2429 ($eq).
Removed top 1 bits (of 3) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:1047$2413 ($eq).
Removed top 2 bits (of 3) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:1039$2399 ($eq).
Removed top 28 bits (of 32) from port A of cell icebreaker.$techmap\soc.cpu.$add$picorv32.v:910$2357 ($add).
Removed top 27 bits (of 32) from port Y of cell icebreaker.$techmap\soc.cpu.$add$picorv32.v:910$2357 ($add).
Removed top 28 bits (of 32) from port A of cell icebreaker.$techmap\soc.cpu.$add$picorv32.v:906$2356 ($add).
Removed top 27 bits (of 32) from port Y of cell icebreaker.$techmap\soc.cpu.$add$picorv32.v:906$2356 ($add).
Removed top 1 bits (of 7) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:876$2343 ($eq).
Removed top 2 bits (of 7) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:875$2342 ($eq).
Removed top 1 bits (of 7) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:874$2341 ($eq).
Removed top 5 bits (of 7) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:873$2340 ($eq).
Removed top 4 bits (of 7) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:870$2336 ($eq).
Removed top 5 bits (of 7) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:869$2332 ($eq).
Removed top 3 bits (of 7) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:869$2331 ($eq).
Removed top 2 bits (of 7) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:866$2326 ($eq).
Removed top 1 bits (of 7) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:865$2325 ($eq).
Removed top 30 bits (of 32) from mux cell icebreaker.$techmap\soc.cpu.$ternary$picorv32.v:617$2306 ($mux).
Removed top 1 bits (of 7) from mux cell icebreaker.$techmap\soc.cpu.$ternary$picorv32.v:491$2262 ($mux).
Removed top 1 bits (of 2) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:488$2258 ($eq).
Removed top 1 bits (of 3) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:486$2256 ($eq).
Removed top 1 bits (of 2) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:478$2254 ($eq).
Removed top 3 bits (of 5) from port B of cell icebreaker.$techmap\soc.cpu.$eq$picorv32.v:465$2252 ($eq).
Removed top 3 bits (of 4) from port A of cell icebreaker.$techmap\soc.cpu.$shl$picorv32.v:419$2247 ($shl).
Removed top 16 bits (of 32) from mux cell icebreaker.$techmap\soc.cpu.$ternary$picorv32.v:386$2239 ($mux).
Removed top 16 bits (of 32) from mux cell icebreaker.$techmap\soc.cpu.$ternary$picorv32.v:388$2237 ($mux).
Removed top 3 bits (of 4) from port B of cell icebreaker.$techmap\soc.simpleuart.$procmux$5598_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell icebreaker.$techmap\soc.simpleuart.$sub$simpleuart.v:132$146 ($sub).
Removed top 28 bits (of 32) from port Y of cell icebreaker.$techmap\soc.simpleuart.$sub$simpleuart.v:132$146 ($sub).
Removed top 31 bits (of 32) from port B of cell icebreaker.$techmap\soc.simpleuart.$add$simpleuart.v:112$138 ($add).
Removed top 31 bits (of 32) from port B of cell icebreaker.$techmap\soc.simpleuart.$add$simpleuart.v:99$135 ($add).
Removed top 28 bits (of 32) from port Y of cell icebreaker.$techmap\soc.simpleuart.$add$simpleuart.v:99$135 ($add).
Removed top 31 bits (of 32) from port B of cell icebreaker.$techmap\soc.simpleuart.$add$simpleuart.v:74$129 ($add).
Removed top 1 bits (of 2) from port B of cell icebreaker.$techmap\soc.spimemio.$procmux$6265_CMP0 ($eq).
Removed top 3 bits (of 4) from mux cell icebreaker.$techmap\soc.spimemio.$procmux$6091 ($mux).
Removed top 2 bits (of 4) from port B of cell icebreaker.$techmap\soc.spimemio.$procmux$6083_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell icebreaker.$techmap\soc.spimemio.$procmux$6077_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell icebreaker.$techmap\soc.spimemio.$procmux$6074_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell icebreaker.$techmap\soc.spimemio.$procmux$6069_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell icebreaker.$techmap\soc.spimemio.$procmux$6066_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell icebreaker.$techmap\soc.spimemio.$procmux$6040_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell icebreaker.$techmap\soc.spimemio.$procmux$6037_CMP0 ($eq).
Removed top 1 bits (of 8) from mux cell icebreaker.$techmap\soc.spimemio.$ternary$spimemio.v:316$69 ($mux).
Removed top 31 bits (of 32) from mux cell icebreaker.$techmap\soc.spimemio.$ternary$spimemio.v:310$68 ($mux).
Removed top 8 bits (of 32) from mux cell icebreaker.$techmap\soc.spimemio.$ternary$spimemio.v:226$64 ($mux).
Removed top 29 bits (of 32) from port B of cell icebreaker.$techmap\soc.spimemio.$add$spimemio.v:226$62 ($add).
Removed top 7 bits (of 32) from port Y of cell icebreaker.$techmap\soc.spimemio.$add$spimemio.v:226$62 ($add).
Removed top 1 bits (of 4) from port B of cell icebreaker.$techmap\soc.spimemio.$eq$spimemio.v:224$60 ($eq).
Removed top 2 bits (of 4) from port B of cell icebreaker.$techmap\soc.spimemio.$eq$spimemio.v:223$58 ($eq).
Removed top 2 bits (of 4) from port B of cell icebreaker.$techmap\soc.spimemio.$eq$spimemio.v:222$56 ($eq).
Removed top 3 bits (of 4) from port B of cell icebreaker.$techmap\soc.spimemio.$eq$spimemio.v:221$54 ($eq).
Removed top 7 bits (of 32) from port B of cell icebreaker.$techmap\soc.spimemio.$ne$spimemio.v:72$26 ($ne).
Removed top 31 bits (of 32) from FF cell icebreaker.$techmap\soc.cpu.cpuregs.$procdff$6518 ($dff).
Removed cell icebreaker.$techmap\soc.cpu.cpuregs.$procmux$5548 ($mux).
Removed cell icebreaker.$techmap\soc.cpu.cpuregs.$procmux$5546 ($mux).
Removed cell icebreaker.$techmap\soc.spimemio.xfer.$procmux$5836 ($mux).
Removed cell icebreaker.$techmap\soc.spimemio.xfer.$procmux$5834 ($mux).
Removed cell icebreaker.$techmap\soc.spimemio.xfer.$procmux$5802 ($mux).
Removed cell icebreaker.$techmap\soc.spimemio.xfer.$procmux$5800 ($mux).
Removed cell icebreaker.$techmap\soc.spimemio.xfer.$procmux$5765 ($mux).
Removed top 1 bits (of 2) from port B of cell icebreaker.$techmap\soc.spimemio.xfer.$procmux$5763_CMP0 ($eq).
Removed cell icebreaker.$techmap\soc.spimemio.xfer.$procmux$5761 ($mux).
Removed cell icebreaker.$techmap\soc.spimemio.xfer.$procmux$5759 ($mux).
Removed top 28 bits (of 32) from mux cell icebreaker.$techmap\soc.spimemio.xfer.$ternary$spimemio.v:567$120 ($mux).
Removed top 31 bits (of 32) from mux cell icebreaker.$techmap\soc.spimemio.xfer.$ternary$spimemio.v:551$108 ($mux).
Removed top 2 bits (of 4) from port B of cell icebreaker.$techmap\soc.spimemio.xfer.$sub$spimemio.v:524$103 ($sub).
Removed top 1 bits (of 4) from port B of cell icebreaker.$techmap\soc.spimemio.xfer.$sub$spimemio.v:491$91 ($sub).
Removed top 3 bits (of 4) from port B of cell icebreaker.$techmap\soc.spimemio.xfer.$sub$spimemio.v:471$84 ($sub).
Removed top 5 bits (of 6) from wire icebreaker.$logic_not$icebreaker.v:54$3_Y.
Removed top 16 bits (of 32) from wire icebreaker.$techmap\soc.cpu.$2\mem_rdata_word[31:0].
Removed top 24 bits (of 32) from wire icebreaker.$techmap\soc.cpu.$3\mem_rdata_word[31:0].
Removed top 27 bits (of 32) from wire icebreaker.$techmap\soc.cpu.$add$picorv32.v:906$2356_Y.
Removed top 27 bits (of 32) from wire icebreaker.$techmap\soc.cpu.$add$picorv32.v:910$2357_Y.
Removed top 4 bits (of 8) from wire icebreaker.$techmap\soc.cpu.$procmux$3776_Y.
Removed top 2 bits (of 4) from wire icebreaker.$techmap\soc.cpu.$procmux$4511_Y.
Removed top 27 bits (of 32) from wire icebreaker.$techmap\soc.cpu.$sub$picorv32.v:1843$2763_Y.
Removed top 27 bits (of 32) from wire icebreaker.$techmap\soc.cpu.$sub$picorv32.v:1851$2770_Y.
Removed top 29 bits (of 32) from wire icebreaker.$techmap\soc.cpu.$ternary$picorv32.v:1312$2619_Y.
Removed top 29 bits (of 32) from wire icebreaker.$techmap\soc.cpu.$ternary$picorv32.v:1547$2694_Y.
Removed top 29 bits (of 32) from wire icebreaker.$techmap\soc.cpu.$ternary$picorv32.v:1553$2699_Y.
Removed top 1 bits (of 7) from wire icebreaker.$techmap\soc.cpu.$ternary$picorv32.v:491$2262_Y.
Removed top 30 bits (of 32) from wire icebreaker.$techmap\soc.cpu.$ternary$picorv32.v:617$2306_Y.
Removed top 28 bits (of 32) from wire icebreaker.$techmap\soc.simpleuart.$add$simpleuart.v:99$135_Y.
Removed top 28 bits (of 32) from wire icebreaker.$techmap\soc.simpleuart.$sub$simpleuart.v:132$146_Y.
Removed top 7 bits (of 32) from wire icebreaker.$techmap\soc.spimemio.$add$spimemio.v:226$62_Y.
Removed top 3 bits (of 4) from wire icebreaker.$techmap\soc.spimemio.$procmux$6091_Y.
Removed top 10 bits (of 32) from wire icebreaker.$techmap\soc.spimemio.$ternary$spimemio.v:226$64_Y.
Removed top 31 bits (of 32) from wire icebreaker.$techmap\soc.spimemio.$ternary$spimemio.v:310$68_Y.
Removed top 1 bits (of 8) from wire icebreaker.$techmap\soc.spimemio.$ternary$spimemio.v:316$69_Y.
Removed top 3 bits (of 4) from wire icebreaker.$techmap\soc.spimemio.xfer.$reduce_or$spimemio.v:471$83_Y.
Removed top 31 bits (of 32) from wire icebreaker.$techmap\soc.spimemio.xfer.$ternary$spimemio.v:551$108_Y.
Removed top 28 bits (of 32) from wire icebreaker.$techmap\soc.spimemio.xfer.$ternary$spimemio.v:567$120_Y.

7.12. Executing PEEPOPT pass (run peephole optimizers).

7.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..
Removed 1 unused cells and 45 unused wires.
<suppressed ~2 debug messages>

7.14. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module icebreaker that may be considered for resource sharing.
  Analyzing resource sharing options for $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:237$196 ($memrd):
    Found 4 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_mux$6603 $auto$opt_reduce.cc:134:opt_mux$6593 $auto$opt_reduce.cc:134:opt_mux$6587 \soc.cpu.is_slli_srli_srai $techmap\soc.cpu.$reduce_bool$picorv32.v:1386$2634_Y $techmap\soc.cpu.$procmux$2875_CMP $techmap\soc.cpu.$procmux$2876_CMP \resetn }.
    Found 1 candidates: $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:236$195
    Analyzing resource sharing with $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:236$195 ($memrd):
      Found 4 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_mux$6605 \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$picorv32.v:1385$2632_Y $techmap\soc.cpu.$procmux$2876_CMP \resetn }.
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:237$196: { $auto$opt_reduce.cc:134:opt_mux$6603 $auto$opt_reduce.cc:134:opt_mux$6593 $techmap\soc.cpu.$reduce_bool$picorv32.v:1386$2634_Y $techmap\soc.cpu.$procmux$2876_CMP \resetn } = 5'00111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:237$196: { $techmap\soc.cpu.$reduce_bool$picorv32.v:1386$2634_Y $techmap\soc.cpu.$procmux$2875_CMP \resetn } = 3'111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:237$196: { $auto$opt_reduce.cc:134:opt_mux$6587 \soc.cpu.is_slli_srli_srai $techmap\soc.cpu.$reduce_bool$picorv32.v:1386$2634_Y $techmap\soc.cpu.$procmux$2876_CMP } = 4'0011
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:237$196: { $techmap\soc.cpu.$reduce_bool$picorv32.v:1386$2634_Y $techmap\soc.cpu.$procmux$2875_CMP } = 2'11
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:236$195: { \soc.cpu.instr_retirq $techmap\soc.cpu.$reduce_bool$picorv32.v:1385$2632_Y $techmap\soc.cpu.$procmux$2876_CMP \resetn } = 4'1111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:236$195: { $auto$opt_reduce.cc:134:opt_mux$6605 \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$picorv32.v:1385$2632_Y $techmap\soc.cpu.$procmux$2876_CMP \resetn } = 5'00111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:236$195: { \soc.cpu.instr_maskirq $techmap\soc.cpu.$reduce_bool$picorv32.v:1385$2632_Y $techmap\soc.cpu.$procmux$2876_CMP \resetn } = 4'1111
      Activation pattern for cell $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:236$195: { \soc.cpu.instr_timer $techmap\soc.cpu.$reduce_bool$picorv32.v:1385$2632_Y $techmap\soc.cpu.$procmux$2876_CMP \resetn } = 4'1111
      Adding exclusive control bits: \soc.cpu.instr_timer vs. \soc.cpu.instr_maskirq
      Adding exclusive control bits: \soc.cpu.instr_timer vs. \soc.cpu.instr_retirq
      Adding exclusive control bits: \soc.cpu.instr_maskirq vs. \soc.cpu.instr_retirq
      Adding exclusive control bits: \soc.cpu.instr_rdinstrh vs. \soc.cpu.instr_rdinstr
      Adding exclusive control bits: \soc.cpu.instr_rdinstrh vs. \soc.cpu.instr_rdcycleh
      Adding exclusive control bits: \soc.cpu.instr_rdinstrh vs. \soc.cpu.instr_rdcycle
      Adding exclusive control bits: \soc.cpu.instr_rdinstr vs. \soc.cpu.instr_rdcycleh
      Adding exclusive control bits: \soc.cpu.instr_rdinstr vs. \soc.cpu.instr_rdcycle
      Adding exclusive control bits: \soc.cpu.instr_rdcycleh vs. \soc.cpu.instr_rdcycle
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2876_CMP vs. $techmap\soc.cpu.$procmux$2875_CMP
      Adding exclusive control bits: \soc.cpu.is_slli_srli_srai vs. $auto$opt_reduce.cc:134:opt_mux$6587
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2876_CMP vs. $techmap\soc.cpu.$procmux$2875_CMP
      Adding exclusive control bits: \soc.cpu.is_slli_srli_srai vs. $auto$opt_reduce.cc:134:opt_mux$6593
      Adding exclusive control bits: \soc.cpu.is_slli_srli_srai vs. \soc.cpu.instr_trap
      Adding exclusive control bits: $techmap\soc.cpu.$logic_and$picorv32.v:1697$2726_Y vs. $auto$opt_reduce.cc:134:opt_mux$6593
      Adding exclusive control bits: $techmap\soc.cpu.$logic_and$picorv32.v:1697$2726_Y vs. \soc.cpu.is_slli_srli_srai
      Adding exclusive control bits: $techmap\soc.cpu.$logic_and$picorv32.v:1697$2726_Y vs. \soc.cpu.instr_trap
      Adding exclusive control bits: \soc.cpu.instr_trap vs. $auto$opt_reduce.cc:134:opt_mux$6593
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2876_CMP vs. $techmap\soc.cpu.$procmux$2875_CMP
      Adding exclusive control bits: $techmap\soc.cpu.$logic_and$picorv32.v:1697$2726_Y vs. $auto$opt_reduce.cc:134:opt_mux$6593
      Adding exclusive control bits: \soc.cpu.instr_sw vs. \soc.cpu.instr_sh
      Adding exclusive control bits: \soc.cpu.instr_sw vs. \soc.cpu.instr_sb
      Adding exclusive control bits: \soc.cpu.instr_sh vs. \soc.cpu.instr_sb
      Adding exclusive control bits: $techmap\soc.cpu.$procmux$2876_CMP vs. $techmap\soc.cpu.$procmux$2875_CMP
      Adding exclusive control bits: $auto$opt_reduce.cc:134:opt_mux$6593 vs. $auto$opt_reduce.cc:134:opt_mux$6603
      Adding exclusive control bits: \soc.cpu.is_lui_auipc_jal vs. $auto$opt_reduce.cc:134:opt_mux$6605
      Adding exclusive control bits: \soc.cpu.instr_bgeu vs. \soc.cpu.instr_bge
      Adding exclusive control bits: \soc.cpu.instr_bgeu vs. \soc.cpu.instr_bne
      Adding exclusive control bits: \soc.cpu.instr_bgeu vs. \soc.cpu.instr_beq
      Adding exclusive control bits: \soc.cpu.instr_bge vs. \soc.cpu.instr_bne
      Adding exclusive control bits: \soc.cpu.instr_bge vs. \soc.cpu.instr_beq
      Adding exclusive control bits: \soc.cpu.instr_bne vs. \soc.cpu.instr_beq
      Size of SAT problem: 12 cells, 235 variables, 607 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $auto$opt_reduce.cc:134:opt_mux$6603 $auto$opt_reduce.cc:134:opt_mux$6593 $auto$opt_reduce.cc:134:opt_mux$6587 $auto$opt_reduce.cc:134:opt_mux$6605 \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer \soc.cpu.is_lui_auipc_jal \soc.cpu.is_slli_srli_srai $techmap\soc.cpu.$reduce_bool$picorv32.v:1385$2632_Y $techmap\soc.cpu.$reduce_bool$picorv32.v:1386$2634_Y $techmap\soc.cpu.$procmux$2875_CMP $techmap\soc.cpu.$procmux$2876_CMP \resetn } = 14'00000000011011
  Analyzing resource sharing options for $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:236$195 ($memrd):
    Found 4 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_mux$6605 \soc.cpu.instr_retirq \soc.cpu.instr_maskirq \soc.cpu.instr_timer \soc.cpu.is_lui_auipc_jal $techmap\soc.cpu.$reduce_bool$picorv32.v:1385$2632_Y $techmap\soc.cpu.$procmux$2876_CMP \resetn }.
    No candidates found.

7.15. Executing TECHMAP pass (map to technology primitives).

7.15.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

7.15.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~238 debug messages>

7.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.

7.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..

7.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module icebreaker:
  creating $macc model for $add$icebreaker.v:54$4 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1235$2818 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1312$2620 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1428$2646 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1553$2700 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1565$2703 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1570$2704 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1807$2749 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:1870$2774 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:382$2230 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:906$2356 ($add).
  creating $macc model for $techmap\soc.cpu.$add$picorv32.v:910$2357 ($add).
  creating $macc model for $techmap\soc.cpu.$sub$picorv32.v:1235$2817 ($sub).
  creating $macc model for $techmap\soc.cpu.$sub$picorv32.v:1438$2651 ($sub).
  creating $macc model for $techmap\soc.cpu.$sub$picorv32.v:1843$2763 ($sub).
  creating $macc model for $techmap\soc.cpu.$sub$picorv32.v:1851$2770 ($sub).
  creating $macc model for $techmap\soc.simpleuart.$add$simpleuart.v:112$138 ($add).
  creating $macc model for $techmap\soc.simpleuart.$add$simpleuart.v:74$129 ($add).
  creating $macc model for $techmap\soc.simpleuart.$add$simpleuart.v:99$135 ($add).
  creating $macc model for $techmap\soc.simpleuart.$sub$simpleuart.v:132$146 ($sub).
  creating $macc model for $techmap\soc.spimemio.$add$spimemio.v:226$62 ($add).
  creating $macc model for $techmap\soc.spimemio.xfer.$sub$spimemio.v:471$84 ($sub).
  creating $macc model for $techmap\soc.spimemio.xfer.$sub$spimemio.v:491$91 ($sub).
  creating $macc model for $techmap\soc.spimemio.xfer.$sub$spimemio.v:524$103 ($sub).
  creating $macc model for $techmap\soc.spimemio.xfer.$sub$spimemio.v:554$113 ($sub).
  creating $alu model for $macc $techmap\soc.spimemio.xfer.$sub$spimemio.v:554$113.
  creating $alu model for $macc $techmap\soc.spimemio.xfer.$sub$spimemio.v:524$103.
  creating $alu model for $macc $techmap\soc.spimemio.xfer.$sub$spimemio.v:491$91.
  creating $alu model for $macc $techmap\soc.spimemio.xfer.$sub$spimemio.v:471$84.
  creating $alu model for $macc $techmap\soc.spimemio.$add$spimemio.v:226$62.
  creating $alu model for $macc $techmap\soc.simpleuart.$sub$simpleuart.v:132$146.
  creating $alu model for $macc $techmap\soc.simpleuart.$add$simpleuart.v:99$135.
  creating $alu model for $macc $techmap\soc.simpleuart.$add$simpleuart.v:74$129.
  creating $alu model for $macc $techmap\soc.simpleuart.$add$simpleuart.v:112$138.
  creating $alu model for $macc $techmap\soc.cpu.$sub$picorv32.v:1851$2770.
  creating $alu model for $macc $techmap\soc.cpu.$sub$picorv32.v:1843$2763.
  creating $alu model for $macc $techmap\soc.cpu.$sub$picorv32.v:1438$2651.
  creating $alu model for $macc $techmap\soc.cpu.$sub$picorv32.v:1235$2817.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:910$2357.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:906$2356.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:382$2230.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1870$2774.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1807$2749.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1570$2704.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1565$2703.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1553$2700.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1428$2646.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1312$2620.
  creating $alu model for $macc $techmap\soc.cpu.$add$picorv32.v:1235$2818.
  creating $alu model for $macc $add$icebreaker.v:54$4.
  creating $alu model for $techmap\soc.$ge$picosoc.v:159$1440 ($ge): new $alu
  creating $alu model for $techmap\soc.$gt$picosoc.v:110$1417 ($gt): new $alu
  creating $alu model for $techmap\soc.$lt$picosoc.v:159$1442 ($lt): new $alu
  creating $alu model for $techmap\soc.$lt$picosoc.v:206$1452 ($lt): merged with $techmap\soc.$ge$picosoc.v:159$1440.
  creating $alu model for $techmap\soc.cpu.$ge$picorv32.v:1836$2755 ($ge): new $alu
  creating $alu model for $techmap\soc.cpu.$lt$picorv32.v:1237$2821 ($lt): new $alu
  creating $alu model for $techmap\soc.cpu.$lt$picorv32.v:1238$2822 ($lt): merged with $techmap\soc.cpu.$sub$picorv32.v:1235$2817.
  creating $alu model for $techmap\soc.simpleuart.$gt$simpleuart.v:130$144 ($gt): new $alu
  creating $alu model for $techmap\soc.simpleuart.$gt$simpleuart.v:84$132 ($gt): new $alu
  creating $alu model for $techmap\soc.simpleuart.$gt$simpleuart.v:90$133 ($gt): new $alu
  creating $alu model for $techmap\soc.$eq$picosoc.v:115$1419 ($eq): merged with $techmap\soc.$lt$picosoc.v:159$1442.
  creating $alu model for $techmap\soc.cpu.$eq$picorv32.v:1236$2820 ($eq): merged with $techmap\soc.cpu.$sub$picorv32.v:1235$2817.
  creating $alu cell for $techmap\soc.simpleuart.$gt$simpleuart.v:90$133: $auto$alumacc.cc:485:replace_alu$6722
  creating $alu cell for $techmap\soc.simpleuart.$gt$simpleuart.v:84$132: $auto$alumacc.cc:485:replace_alu$6733
  creating $alu cell for $techmap\soc.simpleuart.$gt$simpleuart.v:130$144: $auto$alumacc.cc:485:replace_alu$6738
  creating $alu cell for $techmap\soc.cpu.$ge$picorv32.v:1836$2755: $auto$alumacc.cc:485:replace_alu$6749
  creating $alu cell for $techmap\soc.$lt$picosoc.v:159$1442, $techmap\soc.$eq$picosoc.v:115$1419: $auto$alumacc.cc:485:replace_alu$6758
  creating $alu cell for $techmap\soc.$gt$picosoc.v:110$1417: $auto$alumacc.cc:485:replace_alu$6769
  creating $alu cell for $techmap\soc.$ge$picosoc.v:159$1440, $techmap\soc.$lt$picosoc.v:206$1452: $auto$alumacc.cc:485:replace_alu$6774
  creating $alu cell for $add$icebreaker.v:54$4: $auto$alumacc.cc:485:replace_alu$6787
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1312$2620: $auto$alumacc.cc:485:replace_alu$6790
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1428$2646: $auto$alumacc.cc:485:replace_alu$6793
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1553$2700: $auto$alumacc.cc:485:replace_alu$6796
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1565$2703: $auto$alumacc.cc:485:replace_alu$6799
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1570$2704: $auto$alumacc.cc:485:replace_alu$6802
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1807$2749: $auto$alumacc.cc:485:replace_alu$6805
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1870$2774: $auto$alumacc.cc:485:replace_alu$6808
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:382$2230: $auto$alumacc.cc:485:replace_alu$6811
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:906$2356: $auto$alumacc.cc:485:replace_alu$6814
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:910$2357: $auto$alumacc.cc:485:replace_alu$6817
  creating $alu cell for $techmap\soc.cpu.$lt$picorv32.v:1237$2821: $auto$alumacc.cc:485:replace_alu$6820
  creating $alu cell for $techmap\soc.cpu.$add$picorv32.v:1235$2818: $auto$alumacc.cc:485:replace_alu$6827
  creating $alu cell for $techmap\soc.cpu.$sub$picorv32.v:1235$2817, $techmap\soc.cpu.$lt$picorv32.v:1238$2822, $techmap\soc.cpu.$eq$picorv32.v:1236$2820: $auto$alumacc.cc:485:replace_alu$6830
  creating $alu cell for $techmap\soc.cpu.$sub$picorv32.v:1438$2651: $auto$alumacc.cc:485:replace_alu$6837
  creating $alu cell for $techmap\soc.cpu.$sub$picorv32.v:1843$2763: $auto$alumacc.cc:485:replace_alu$6840
  creating $alu cell for $techmap\soc.cpu.$sub$picorv32.v:1851$2770: $auto$alumacc.cc:485:replace_alu$6843
  creating $alu cell for $techmap\soc.simpleuart.$add$simpleuart.v:112$138: $auto$alumacc.cc:485:replace_alu$6846
  creating $alu cell for $techmap\soc.simpleuart.$add$simpleuart.v:74$129: $auto$alumacc.cc:485:replace_alu$6849
  creating $alu cell for $techmap\soc.simpleuart.$add$simpleuart.v:99$135: $auto$alumacc.cc:485:replace_alu$6852
  creating $alu cell for $techmap\soc.simpleuart.$sub$simpleuart.v:132$146: $auto$alumacc.cc:485:replace_alu$6855
  creating $alu cell for $techmap\soc.spimemio.$add$spimemio.v:226$62: $auto$alumacc.cc:485:replace_alu$6858
  creating $alu cell for $techmap\soc.spimemio.xfer.$sub$spimemio.v:471$84: $auto$alumacc.cc:485:replace_alu$6861
  creating $alu cell for $techmap\soc.spimemio.xfer.$sub$spimemio.v:491$91: $auto$alumacc.cc:485:replace_alu$6864
  creating $alu cell for $techmap\soc.spimemio.xfer.$sub$spimemio.v:524$103: $auto$alumacc.cc:485:replace_alu$6867
  creating $alu cell for $techmap\soc.spimemio.xfer.$sub$spimemio.v:554$113: $auto$alumacc.cc:485:replace_alu$6870
  created 33 $alu and 0 $macc cells.

7.19. Executing OPT pass (performing simple optimizations).

7.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.
<suppressed ~9 debug messages>

7.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\icebreaker'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

7.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \icebreaker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~257 debug messages>

7.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \icebreaker.
Performed a total of 0 changes.

7.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\icebreaker'.
Removed a total of 0 cells.

7.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

7.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..
Removed 2 unused cells and 17 unused wires.
<suppressed ~3 debug messages>

7.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.

7.19.9. Rerunning OPT passes. (Maybe there is more to do..)

7.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \icebreaker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~257 debug messages>

7.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \icebreaker.
Performed a total of 0 changes.

7.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\icebreaker'.
Removed a total of 0 cells.

7.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

7.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..

7.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.

7.19.16. Finished OPT passes. (There is nothing left to do.)

7.20. Executing FSM pass (extract and optimize FSM).

7.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register icebreaker.soc.cpu.cpu_state.
Not marking icebreaker.soc.cpu.irq_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking icebreaker.soc.cpu.mem_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register icebreaker.soc.cpu.mem_wordsize.
Not marking icebreaker.soc.spimemio.din_tag as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register icebreaker.soc.spimemio.state.

7.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\soc.cpu.cpu_state' from module `\icebreaker'.
  found $dff cell for state register: $techmap\soc.cpu.$procdff$6395
  root of input selection tree: $techmap\soc.cpu.$0\cpu_state[7:0]
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1932$2804_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1916$2787_Y
  found ctrl input: \resetn
  found state code: 8'01000000
  found ctrl input: $auto$opt_reduce.cc:134:opt_mux$6677
  found ctrl input: $techmap\soc.cpu.$procmux$2873_CMP
  found ctrl input: $techmap\soc.cpu.$procmux$2874_CMP
  found ctrl input: $techmap\soc.cpu.$procmux$2875_CMP
  found ctrl input: $techmap\soc.cpu.$procmux$2876_CMP
  found ctrl input: $techmap\soc.cpu.$eq$picorv32.v:1308$2618_Y
  found ctrl input: $techmap\soc.cpu.$logic_or$picorv32.v:1858$2772_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1873$2776_Y
  found ctrl input: $techmap\soc.cpu.$eq$picorv32.v:1832$2754_Y
  found ctrl input: \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu
  found ctrl input: \soc.cpu.mem_done
  found ctrl input: \soc.cpu.is_sll_srl_sra
  found ctrl input: \soc.cpu.is_sb_sh_sw
  found state code: 8'00001000
  found state code: 8'00000100
  found state code: 8'00000010
  found ctrl input: $auto$opt_reduce.cc:134:opt_mux$6593
  found ctrl input: \soc.cpu.is_slli_srli_srai
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1697$2726_Y
  found ctrl input: $auto$opt_reduce.cc:134:opt_mux$6591
  found ctrl input: \soc.cpu.instr_trap
  found state code: 8'00000001
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1620$2712_Y
  found state code: 8'10000000
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1539$2689_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1549$2697_Y
  found ctrl input: \soc.cpu.decoder_trigger
  found ctrl input: \soc.cpu.instr_jal
  found state code: 8'00100000
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1924$2797_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1917$2790_Y
  found ctrl input: $techmap\soc.cpu.$logic_and$picorv32.v:1919$2794_Y
  found ctrl output: $techmap\soc.cpu.$procmux$2878_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2876_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2875_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2874_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2873_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2872_CMP
  found ctrl output: $techmap\soc.cpu.$procmux$2871_CMP
  found ctrl output: $techmap\soc.cpu.$eq$picorv32.v:1308$2618_Y
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_mux$6593 $auto$opt_reduce.cc:134:opt_mux$6591 $auto$opt_reduce.cc:134:opt_mux$6677 \soc.cpu.mem_done \soc.cpu.instr_jal \soc.cpu.instr_trap \soc.cpu.decoder_trigger \soc.cpu.is_slli_srli_srai \soc.cpu.is_sb_sh_sw \soc.cpu.is_sll_srl_sra \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu $techmap\soc.cpu.$logic_and$picorv32.v:1539$2689_Y $techmap\soc.cpu.$logic_and$picorv32.v:1549$2697_Y $techmap\soc.cpu.$logic_and$picorv32.v:1620$2712_Y $techmap\soc.cpu.$logic_and$picorv32.v:1697$2726_Y $techmap\soc.cpu.$eq$picorv32.v:1832$2754_Y $techmap\soc.cpu.$logic_or$picorv32.v:1858$2772_Y $techmap\soc.cpu.$logic_and$picorv32.v:1873$2776_Y $techmap\soc.cpu.$logic_and$picorv32.v:1916$2787_Y $techmap\soc.cpu.$logic_and$picorv32.v:1917$2790_Y $techmap\soc.cpu.$logic_and$picorv32.v:1919$2794_Y $techmap\soc.cpu.$logic_and$picorv32.v:1924$2797_Y $techmap\soc.cpu.$logic_and$picorv32.v:1932$2804_Y \resetn }
  ctrl outputs: { $techmap\soc.cpu.$eq$picorv32.v:1308$2618_Y $techmap\soc.cpu.$0\cpu_state[7:0] $techmap\soc.cpu.$procmux$2871_CMP $techmap\soc.cpu.$procmux$2872_CMP $techmap\soc.cpu.$procmux$2873_CMP $techmap\soc.cpu.$procmux$2874_CMP $techmap\soc.cpu.$procmux$2875_CMP $techmap\soc.cpu.$procmux$2876_CMP $techmap\soc.cpu.$procmux$2878_CMP }
  transition: 8'10000000 24'------------------0---00 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------0---01 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------10-000 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------10-001 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------11000- -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------111000 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------111001 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------1-010- -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------101100 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------101101 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------111100 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------111101 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'--------------------0-1- -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------0-1-10 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------0-1-11 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------101010 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------101011 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------111010 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------111011 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------101110 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------101111 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 24'------------------111110 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 24'------------------111111 -> 8'10000000 16'0100000000000001
  transition: 8'01000000 24'------------------0---00 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------0----00-----0---01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----0-1----00-----0---01 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'----1-1----00-----0---01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----------01-----0---01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----------1------0---01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------10-000 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------0----00-----10-001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----0-1----00-----10-001 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'----1-1----00-----10-001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----------01-----10-001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----------1------10-001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------11000- -> 8'10000000 16'1100000000000000
  transition: 8'01000000 24'------------------111000 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------0----00-----111001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----0-1----00-----111001 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'----1-1----00-----111001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----------01-----111001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----------1------111001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------1-010- -> 8'10000000 16'1100000000000000
  transition: 8'01000000 24'------------------101100 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------0----00-----101101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----0-1----00-----101101 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'----1-1----00-----101101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----------01-----101101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----------1------101101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------111100 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------0----00-----111101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----0-1----00-----111101 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'----1-1----00-----111101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----------01-----111101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----------1------111101 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'--------------------0-1- -> 8'10000000 16'1100000000000000
  transition: 8'01000000 24'------------------0-1-10 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------0----00-----0-1-11 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----0-1----00-----0-1-11 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'----1-1----00-----0-1-11 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----------01-----0-1-11 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----------1------0-1-11 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------101010 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------0----00-----101011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----0-1----00-----101011 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'----1-1----00-----101011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----------01-----101011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----------1------101011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------111010 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------0----00-----111011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----0-1----00-----111011 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'----1-1----00-----111011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----------01-----111011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----------1------111011 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------101110 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------0----00-----101111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----0-1----00-----101111 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'----1-1----00-----101111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----------01-----101111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----------1------101111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------------------111110 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'------0----00-----111111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'----0-1----00-----111111 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 24'----1-1----00-----111111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----------01-----111111 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 24'-----------1------111111 -> 8'01000000 16'1010000000000000
  transition: 8'00100000 24'------------------0---00 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00---0-000----0---0---01 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00---0-01-----0---0---01 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'00---0-0-1----0---0---01 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 24'-----1-------0----0---01 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'-----1-------1----0---01 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------0---01 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---0---01 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'-------1----------0---01 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 24'1-----------------0---01 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------10-000 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00---0-000----0---10-001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00---0-01-----0---10-001 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'00---0-0-1----0---10-001 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 24'-----1-------0----10-001 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'-----1-------1----10-001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------10-001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---10-001 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'-------1----------10-001 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 24'1-----------------10-001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------11000- -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'------------------111000 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00---0-000----0---111001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00---0-01-----0---111001 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'00---0-0-1----0---111001 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 24'-----1-------0----111001 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'-----1-------1----111001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------111001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---111001 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'-------1----------111001 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 24'1-----------------111001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------1-010- -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'------------------101100 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00---0-000----0---101101 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00---0-01-----0---101101 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'00---0-0-1----0---101101 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 24'-----1-------0----101101 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'-----1-------1----101101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------101101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---101101 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'-------1----------101101 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 24'1-----------------101101 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------111100 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00---0-000----0---111101 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00---0-01-----0---111101 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'00---0-0-1----0---111101 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 24'-----1-------0----111101 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'-----1-------1----111101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------111101 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---111101 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'-------1----------111101 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 24'1-----------------111101 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'--------------------0-1- -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'------------------0-1-10 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00---0-000----0---0-1-11 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00---0-01-----0---0-1-11 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'00---0-0-1----0---0-1-11 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 24'-----1-------0----0-1-11 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'-----1-------1----0-1-11 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------0-1-11 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---0-1-11 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'-------1----------0-1-11 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 24'1-----------------0-1-11 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------101010 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00---0-000----0---101011 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00---0-01-----0---101011 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'00---0-0-1----0---101011 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 24'-----1-------0----101011 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'-----1-------1----101011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------101011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---101011 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'-------1----------101011 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 24'1-----------------101011 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------111010 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00---0-000----0---111011 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00---0-01-----0---111011 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'00---0-0-1----0---111011 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 24'-----1-------0----111011 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'-----1-------1----111011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------111011 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---111011 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'-------1----------111011 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 24'1-----------------111011 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------101110 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00---0-000----0---101111 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00---0-01-----0---101111 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'00---0-0-1----0---101111 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 24'-----1-------0----101111 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'-----1-------1----101111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------101111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---101111 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'-------1----------101111 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 24'1-----------------101111 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'------------------111110 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'00---0-000----0---111111 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 24'00---0-01-----0---111111 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 24'00---0-0-1----0---111111 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 24'-----1-------0----111111 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 24'-----1-------1----111111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'-1----------------111111 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 24'--------------1---111111 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 24'-------1----------111111 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 24'1-----------------111111 -> 8'00001000 16'0000010000000010
  transition: 8'00001000 24'------------------0---00 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----------0-------0---01 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---0------1-------0---01 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'---1------1-------0---01 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------10-000 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----------0-------10-001 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---0------1-------10-001 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'---1------1-------10-001 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------11000- -> 8'10000000 16'0100000000001000
  transition: 8'00001000 24'------------------111000 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----------0-------111001 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---0------1-------111001 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'---1------1-------111001 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------1-010- -> 8'10000000 16'0100000000001000
  transition: 8'00001000 24'------------------101100 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----------0-------101101 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---0------1-------101101 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'---1------1-------101101 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------111100 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----------0-------111101 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---0------1-------111101 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'---1------1-------111101 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'--------------------0-1- -> 8'10000000 16'0100000000001000
  transition: 8'00001000 24'------------------0-1-10 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----------0-------0-1-11 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---0------1-------0-1-11 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'---1------1-------0-1-11 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------101010 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----------0-------101011 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---0------1-------101011 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'---1------1-------101011 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------111010 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----------0-------111011 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---0------1-------111011 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'---1------1-------111011 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------101110 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----------0-------101111 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---0------1-------101111 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'---1------1-------101111 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'------------------111110 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'----------0-------111111 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 24'---0------1-------111111 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 24'---1------1-------111111 -> 8'01000000 16'0010000000001000
  transition: 8'00000100 24'------------------0---00 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 24'---------------0--0---01 -> 8'00000100 16'0000001000010000
  transition: 8'00000100 24'---------------1--0---01 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 24'------------------10-000 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 24'---------------0--10-001 -> 8'00000100 16'0000001000010000
  transition: 8'00000100 24'---------------1--10-001 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 24'------------------11000- -> 8'10000000 16'0100000000010000
  transition: 8'00000100 24'------------------111000 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 24'---------------0--111001 -> 8'00000100 16'0000001000010000
  transition: 8'00000100 24'---------------1--111001 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 24'------------------1-010- -> 8'10000000 16'0100000000010000
  transition: 8'00000100 24'------------------101100 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 24'---------------0--101101 -> 8'00000100 16'0000001000010000
  transition: 8'00000100 24'---------------1--101101 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 24'------------------111100 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 24'---------------0--111101 -> 8'00000100 16'0000001000010000
  transition: 8'00000100 24'---------------1--111101 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 24'--------------------0-1- -> 8'10000000 16'0100000000010000
  transition: 8'00000100 24'------------------0-1-10 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 24'---------------0--0-1-11 -> 8'00000100 16'0000001000010000
  transition: 8'00000100 24'---------------1--0-1-11 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 24'------------------101010 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 24'---------------0--101011 -> 8'00000100 16'0000001000010000
  transition: 8'00000100 24'---------------1--101011 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 24'------------------111010 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 24'---------------0--111011 -> 8'00000100 16'0000001000010000
  transition: 8'00000100 24'---------------1--111011 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 24'------------------101110 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 24'---------------0--101111 -> 8'00000100 16'0000001000010000
  transition: 8'00000100 24'---------------1--101111 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 24'------------------111110 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 24'---------------0--111111 -> 8'00000100 16'0000001000010000
  transition: 8'00000100 24'---------------1--111111 -> 8'01000000 16'0010000000010000
  transition: 8'00000010 24'------------------0---00 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-0---01 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------100---01 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------110---01 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------10-000 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-10-001 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------1010-001 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------1110-001 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------11000- -> 8'10000000 16'0100000000100000
  transition: 8'00000010 24'------------------111000 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-111001 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10111001 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11111001 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------1-010- -> 8'10000000 16'0100000000100000
  transition: 8'00000010 24'------------------101100 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-101101 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10101101 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11101101 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------111100 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-111101 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10111101 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11111101 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'--------------------0-1- -> 8'10000000 16'0100000000100000
  transition: 8'00000010 24'------------------0-1-10 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-0-1-11 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------100-1-11 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------110-1-11 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------101010 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-101011 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10101011 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11101011 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------111010 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-111011 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10111011 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11111011 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------101110 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-101111 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10101111 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11101111 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'------------------111110 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 24'----------------0-111111 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------10111111 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 24'----------------11111111 -> 8'01000000 16'0010000000100000
  transition: 8'00000001 24'------------------0---00 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-0---01 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------100---01 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------110---01 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------10-000 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-10-001 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------1010-001 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------1110-001 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------11000- -> 8'10000000 16'0100000001000000
  transition: 8'00000001 24'------------------111000 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-111001 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10111001 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11111001 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------1-010- -> 8'10000000 16'0100000001000000
  transition: 8'00000001 24'------------------101100 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-101101 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10101101 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11101101 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------111100 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-111101 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10111101 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11111101 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'--------------------0-1- -> 8'10000000 16'0100000001000000
  transition: 8'00000001 24'------------------0-1-10 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-0-1-11 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------100-1-11 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------110-1-11 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------101010 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-101011 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10101011 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11101011 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------111010 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-111011 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10111011 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11111011 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------101110 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-101111 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10101111 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11101111 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'------------------111110 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 24'----------------0-111111 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------10111111 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 24'----------------11111111 -> 8'01000000 16'0010000001000000
Extracting FSM `\soc.cpu.mem_wordsize' from module `\icebreaker'.
  found $dff cell for state register: $techmap\soc.cpu.$procdff$6382
  root of input selection tree: $techmap\soc.cpu.$0\mem_wordsize[1:0]
  found ctrl input: \resetn
  found ctrl input: $techmap\soc.cpu.$procmux$2871_CMP
  found ctrl input: $techmap\soc.cpu.$procmux$2872_CMP
  found ctrl input: $techmap\soc.cpu.$eq$picorv32.v:1308$2618_Y
  found ctrl input: $techmap\soc.cpu.$logic_or$picorv32.v:1858$2772_Y
  found ctrl input: \soc.cpu.mem_do_rdata
  found ctrl input: \soc.cpu.instr_lw
  found ctrl input: $techmap\soc.cpu.$logic_or$picorv32.v:1888$2781_Y
  found ctrl input: $techmap\soc.cpu.$logic_or$picorv32.v:1887$2780_Y
  found state code: 2'00
  found state code: 2'01
  found state code: 2'10
  found ctrl input: \soc.cpu.mem_do_wdata
  found ctrl input: \soc.cpu.instr_sw
  found ctrl input: \soc.cpu.instr_sh
  found ctrl input: \soc.cpu.instr_sb
  found ctrl output: $techmap\soc.cpu.$procmux$5504_CMP
  found ctrl output: $techmap\soc.cpu.$eq$picorv32.v:1924$2795_Y
  found ctrl output: $techmap\soc.cpu.$eq$picorv32.v:1917$2788_Y
  ctrl inputs: { \soc.cpu.mem_do_rdata \soc.cpu.mem_do_wdata \soc.cpu.instr_lw \soc.cpu.instr_sb \soc.cpu.instr_sh \soc.cpu.instr_sw $techmap\soc.cpu.$eq$picorv32.v:1308$2618_Y $techmap\soc.cpu.$logic_or$picorv32.v:1858$2772_Y $techmap\soc.cpu.$logic_or$picorv32.v:1887$2780_Y $techmap\soc.cpu.$logic_or$picorv32.v:1888$2781_Y $techmap\soc.cpu.$procmux$2871_CMP $techmap\soc.cpu.$procmux$2872_CMP \resetn }
  ctrl outputs: { $techmap\soc.cpu.$0\mem_wordsize[1:0] $techmap\soc.cpu.$eq$picorv32.v:1917$2788_Y $techmap\soc.cpu.$eq$picorv32.v:1924$2795_Y $techmap\soc.cpu.$procmux$5504_CMP }
  transition:       2'00 13'------------0 ->       2'00 5'00100
  transition:       2'00 13'------0---001 ->       2'00 5'00100
  transition:       2'00 13'------1-----1 ->       2'00 5'00100
  transition:       2'00 13'-------0---11 ->       2'00 5'00100
  transition:       2'00 13'-0-000-1---11 -> INVALID_STATE(2'xx) 5'xx100  <ignored invalid transition!>
  transition:       2'00 13'-0-1---1---11 ->       2'10 5'10100
  transition:       2'00 13'-0--1--1---11 ->       2'01 5'01100
  transition:       2'00 13'-0---1-1---11 ->       2'00 5'00100
  transition:       2'00 13'-1-----1---11 ->       2'00 5'00100
  transition:       2'00 13'-------0--1-1 ->       2'00 5'00100
  transition:       2'00 13'0-0----1001-1 -> INVALID_STATE(2'xx) 5'xx100  <ignored invalid transition!>
  transition:       2'00 13'0------11-1-1 ->       2'10 5'10100
  transition:       2'00 13'0------1-11-1 ->       2'01 5'01100
  transition:       2'00 13'0-1----1--1-1 ->       2'00 5'00100
  transition:       2'00 13'1------1--1-1 ->       2'00 5'00100
  transition:       2'10 13'------------0 ->       2'10 5'10001
  transition:       2'10 13'------0---001 ->       2'10 5'10001
  transition:       2'10 13'------1-----1 ->       2'00 5'00001
  transition:       2'10 13'-------0---11 ->       2'10 5'10001
  transition:       2'10 13'-0-000-1---11 -> INVALID_STATE(2'xx) 5'xx001  <ignored invalid transition!>
  transition:       2'10 13'-0-1---1---11 ->       2'10 5'10001
  transition:       2'10 13'-0--1--1---11 ->       2'01 5'01001
  transition:       2'10 13'-0---1-1---11 ->       2'00 5'00001
  transition:       2'10 13'-1-----1---11 ->       2'10 5'10001
  transition:       2'10 13'-------0--1-1 ->       2'10 5'10001
  transition:       2'10 13'0-0----1001-1 -> INVALID_STATE(2'xx) 5'xx001  <ignored invalid transition!>
  transition:       2'10 13'0------11-1-1 ->       2'10 5'10001
  transition:       2'10 13'0------1-11-1 ->       2'01 5'01001
  transition:       2'10 13'0-1----1--1-1 ->       2'00 5'00001
  transition:       2'10 13'1------1--1-1 ->       2'10 5'10001
  transition:       2'01 13'------------0 ->       2'01 5'01010
  transition:       2'01 13'------0---001 ->       2'01 5'01010
  transition:       2'01 13'------1-----1 ->       2'00 5'00010
  transition:       2'01 13'-------0---11 ->       2'01 5'01010
  transition:       2'01 13'-0-000-1---11 -> INVALID_STATE(2'xx) 5'xx010  <ignored invalid transition!>
  transition:       2'01 13'-0-1---1---11 ->       2'10 5'10010
  transition:       2'01 13'-0--1--1---11 ->       2'01 5'01010
  transition:       2'01 13'-0---1-1---11 ->       2'00 5'00010
  transition:       2'01 13'-1-----1---11 ->       2'01 5'01010
  transition:       2'01 13'-------0--1-1 ->       2'01 5'01010
  transition:       2'01 13'0-0----1001-1 -> INVALID_STATE(2'xx) 5'xx010  <ignored invalid transition!>
  transition:       2'01 13'0------11-1-1 ->       2'10 5'10010
  transition:       2'01 13'0------1-11-1 ->       2'01 5'01010
  transition:       2'01 13'0-1----1--1-1 ->       2'00 5'00010
  transition:       2'01 13'1------1--1-1 ->       2'01 5'01010
Extracting FSM `\soc.spimemio.state' from module `\icebreaker'.
  found $dff cell for state register: $techmap\soc.spimemio.$procdff$6559
  root of input selection tree: $techmap\soc.spimemio.$0\state[3:0]
  found reset state: 4'0000 (guessed from mux tree)
  found ctrl input: $techmap\soc.spimemio.$logic_or$spimemio.v:211$53_Y
  found ctrl input: \soc.spimemio.jump
  found ctrl input: $techmap\soc.spimemio.$procmux$6051_CMP
  found ctrl input: $techmap\soc.spimemio.$procmux$6054_CMP
  found ctrl input: $techmap\soc.spimemio.$procmux$6057_CMP
  found ctrl input: $techmap\soc.spimemio.$procmux$6060_CMP
  found ctrl input: $techmap\soc.spimemio.$procmux$6063_CMP
  found ctrl input: $techmap\soc.spimemio.$procmux$6066_CMP
  found ctrl input: $techmap\soc.spimemio.$procmux$6069_CMP
  found ctrl input: $techmap\soc.spimemio.$procmux$6074_CMP
  found ctrl input: $techmap\soc.spimemio.$procmux$6077_CMP
  found ctrl input: $techmap\soc.spimemio.$procmux$6037_CMP
  found ctrl input: $techmap\soc.spimemio.$procmux$6083_CMP
  found ctrl input: $techmap\soc.spimemio.$procmux$6040_CMP
  found ctrl input: $techmap\soc.spimemio.$procmux$6089_CMP
  found ctrl input: $techmap\soc.spimemio.$logic_or$spimemio.v:350$71_Y
  found ctrl input: \soc.spimemio.xfer.din_ready
  found state code: 4'1001
  found state code: 4'1100
  found state code: 4'1011
  found state code: 4'1010
  found ctrl input: $techmap\soc.spimemio.$logic_or$spimemio.v:310$67_Y
  found state code: 4'1000
  found state code: 4'0111
  found ctrl input: $techmap\soc.spimemio.$logic_and$spimemio.v:282$66_Y
  found state code: 4'0110
  found state code: 4'0101
  found ctrl input: \soc.spimemio.dout_valid
  found state code: 4'0100
  found state code: 4'0011
  found state code: 4'0010
  found state code: 4'0001
  found ctrl input: \soc.spimemio.config_cont
  found state code: 4'0000
  found ctrl output: $techmap\soc.spimemio.$procmux$6089_CMP
  found ctrl output: $techmap\soc.spimemio.$procmux$6083_CMP
  found ctrl output: $techmap\soc.spimemio.$procmux$6077_CMP
  found ctrl output: $techmap\soc.spimemio.$procmux$6074_CMP
  found ctrl output: $techmap\soc.spimemio.$procmux$6069_CMP
  found ctrl output: $techmap\soc.spimemio.$procmux$6066_CMP
  found ctrl output: $techmap\soc.spimemio.$procmux$6063_CMP
  found ctrl output: $techmap\soc.spimemio.$procmux$6060_CMP
  found ctrl output: $techmap\soc.spimemio.$procmux$6057_CMP
  found ctrl output: $techmap\soc.spimemio.$procmux$6054_CMP
  found ctrl output: $techmap\soc.spimemio.$procmux$6051_CMP
  found ctrl output: $techmap\soc.spimemio.$procmux$6040_CMP
  found ctrl output: $techmap\soc.spimemio.$procmux$6037_CMP
  ctrl inputs: { \soc.spimemio.xfer.din_ready \soc.spimemio.dout_valid \soc.spimemio.jump \soc.spimemio.config_cont $techmap\soc.spimemio.$logic_or$spimemio.v:211$53_Y $techmap\soc.spimemio.$logic_and$spimemio.v:282$66_Y $techmap\soc.spimemio.$logic_or$spimemio.v:310$67_Y $techmap\soc.spimemio.$logic_or$spimemio.v:350$71_Y }
  ctrl outputs: { $techmap\soc.spimemio.$0\state[3:0] $techmap\soc.spimemio.$procmux$6037_CMP $techmap\soc.spimemio.$procmux$6040_CMP $techmap\soc.spimemio.$procmux$6051_CMP $techmap\soc.spimemio.$procmux$6054_CMP $techmap\soc.spimemio.$procmux$6057_CMP $techmap\soc.spimemio.$procmux$6060_CMP $techmap\soc.spimemio.$procmux$6063_CMP $techmap\soc.spimemio.$procmux$6066_CMP $techmap\soc.spimemio.$procmux$6069_CMP $techmap\soc.spimemio.$procmux$6074_CMP $techmap\soc.spimemio.$procmux$6077_CMP $techmap\soc.spimemio.$procmux$6083_CMP $techmap\soc.spimemio.$procmux$6089_CMP }
  transition:     4'0000 8'0-0-0--- ->     4'0000 17'00000000000000001
  transition:     4'0000 8'1-0-0--- ->     4'0001 17'00010000000000001
  transition:     4'0000 8'--100--- ->     4'0100 17'01000000000000001
  transition:     4'0000 8'--110--- ->     4'0101 17'01010000000000001
  transition:     4'0000 8'----1--- ->     4'0000 17'00000000000000001
  transition:     4'1000 8'0-0-0--- ->     4'1000 17'10000000001000000
  transition:     4'1000 8'1-0-0--- ->     4'1001 17'10010000001000000
  transition:     4'1000 8'--100--- ->     4'0100 17'01000000001000000
  transition:     4'1000 8'--110--- ->     4'0101 17'01010000001000000
  transition:     4'1000 8'----1--- ->     4'0000 17'00000000001000000
  transition:     4'0100 8'0-0-0--- ->     4'0100 17'01000000000000100
  transition:     4'0100 8'1-0-0--- ->     4'0101 17'01010000000000100
  transition:     4'0100 8'--100--- ->     4'0100 17'01000000000000100
  transition:     4'0100 8'--110--- ->     4'0101 17'01010000000000100
  transition:     4'0100 8'----1--- ->     4'0000 17'00000000000000100
  transition:     4'1100 8'--0-0--0 ->     4'1100 17'11000010000000000
  transition:     4'1100 8'0-0-0--1 ->     4'1100 17'11000010000000000
  transition:     4'1100 8'1-0-0--1 ->     4'1001 17'10010010000000000
  transition:     4'1100 8'--100--- ->     4'0100 17'01000010000000000
  transition:     4'1100 8'--110--- ->     4'0101 17'01010010000000000
  transition:     4'1100 8'----1--- ->     4'0000 17'00000010000000000
  transition:     4'0010 8'0-0-0--- ->     4'0010 17'00100000000000010
  transition:     4'0010 8'1-0-0--- ->     4'0011 17'00110000000000010
  transition:     4'0010 8'--100--- ->     4'0100 17'01000000000000010
  transition:     4'0010 8'--110--- ->     4'0101 17'01010000000000010
  transition:     4'0010 8'----1--- ->     4'0000 17'00000000000000010
  transition:     4'1010 8'0-0-0--- ->     4'1010 17'10100000100000000
  transition:     4'1010 8'1-0-0--- ->     4'1011 17'10110000100000000
  transition:     4'1010 8'--100--- ->     4'0100 17'01000000100000000
  transition:     4'1010 8'--110--- ->     4'0101 17'01010000100000000
  transition:     4'1010 8'----1--- ->     4'0000 17'00000000100000000
  transition:     4'0110 8'0-0-0--- ->     4'0110 17'01100000000010000
  transition:     4'0110 8'1-0-0--- ->     4'0111 17'01110000000010000
  transition:     4'0110 8'--100--- ->     4'0100 17'01000000000010000
  transition:     4'0110 8'--110--- ->     4'0101 17'01010000000010000
  transition:     4'0110 8'----1--- ->     4'0000 17'00000000000010000
  transition:     4'0001 8'-00-0--- ->     4'0001 17'00010100000000000
  transition:     4'0001 8'-10-0--- ->     4'0010 17'00100100000000000
  transition:     4'0001 8'--100--- ->     4'0100 17'01000100000000000
  transition:     4'0001 8'--110--- ->     4'0101 17'01010100000000000
  transition:     4'0001 8'----1--- ->     4'0000 17'00000100000000000
  transition:     4'1001 8'0-0-0--- ->     4'1001 17'10010000010000000
  transition:     4'1001 8'1-0-0--- ->     4'1010 17'10100000010000000
  transition:     4'1001 8'--100--- ->     4'0100 17'01000000010000000
  transition:     4'1001 8'--110--- ->     4'0101 17'01010000010000000
  transition:     4'1001 8'----1--- ->     4'0000 17'00000000010000000
  transition:     4'0101 8'--0-00-- ->     4'0101 17'01010000000001000
  transition:     4'0101 8'0-0-01-- ->     4'0101 17'01010000000001000
  transition:     4'0101 8'1-0-01-- ->     4'0110 17'01100000000001000
  transition:     4'0101 8'--100--- ->     4'0100 17'01000000000001000
  transition:     4'0101 8'--110--- ->     4'0101 17'01010000000001000
  transition:     4'0101 8'----1--- ->     4'0000 17'00000000000001000
  transition:     4'0011 8'-00-0--- ->     4'0011 17'00111000000000000
  transition:     4'0011 8'-10-0--- ->     4'0100 17'01001000000000000
  transition:     4'0011 8'--100--- ->     4'0100 17'01001000000000000
  transition:     4'0011 8'--110--- ->     4'0101 17'01011000000000000
  transition:     4'0011 8'----1--- ->     4'0000 17'00001000000000000
  transition:     4'1011 8'0-0-0--- ->     4'1011 17'10110001000000000
  transition:     4'1011 8'1-0-0--- ->     4'1100 17'11000001000000000
  transition:     4'1011 8'--100--- ->     4'0100 17'01000001000000000
  transition:     4'1011 8'--110--- ->     4'0101 17'01010001000000000
  transition:     4'1011 8'----1--- ->     4'0000 17'00000001000000000
  transition:     4'0111 8'0-0-0--- ->     4'0111 17'01110000000100000
  transition:     4'0111 8'1-0-0-0- ->     4'1001 17'10010000000100000
  transition:     4'0111 8'1-0-0-1- ->     4'1000 17'10000000000100000
  transition:     4'0111 8'--100--- ->     4'0100 17'01000000000100000
  transition:     4'0111 8'--110--- ->     4'0101 17'01010000000100000
  transition:     4'0111 8'----1--- ->     4'0000 17'00000000000100000

7.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\soc.spimemio.state$6888' from module `\icebreaker'.
Optimizing FSM `$fsm$\soc.cpu.mem_wordsize$6883' from module `\icebreaker'.
Optimizing FSM `$fsm$\soc.cpu.cpu_state$6873' from module `\icebreaker'.
  Merging pattern 24'------------------111001 and 24'------------------111011 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------101101 and 24'------------------101111 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------111101 and 24'------------------111111 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------111011 and 24'------------------111001 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------101111 and 24'------------------101101 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------111111 and 24'------------------111101 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------1110-1 and 24'------------------1111-1 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------1111-1 and 24'------------------1110-1 from group (0 0 16'0100000000000001).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (0 1 16'0010000000000001).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (1 1 16'1010000000000000).
  Merging pattern 24'------0----00-----111001 and 24'------0----00-----111011 from group (1 1 16'1010000000000000).
  Merging pattern 24'----1-1----00-----111001 and 24'----1-1----00-----111011 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----------01-----111001 and 24'-----------01-----111011 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----------1------111001 and 24'-----------1------111011 from group (1 1 16'1010000000000000).
  Merging pattern 24'------0----00-----101101 and 24'------0----00-----101111 from group (1 1 16'1010000000000000).
  Merging pattern 24'----1-1----00-----101101 and 24'----1-1----00-----101111 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----------01-----101101 and 24'-----------01-----101111 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----------1------101101 and 24'-----------1------101111 from group (1 1 16'1010000000000000).
  Merging pattern 24'------0----00-----111101 and 24'------0----00-----111111 from group (1 1 16'1010000000000000).
  Merging pattern 24'----1-1----00-----111101 and 24'----1-1----00-----111111 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----------01-----111101 and 24'-----------01-----111111 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----------1------111101 and 24'-----------1------111111 from group (1 1 16'1010000000000000).
  Merging pattern 24'------0----00-----111011 and 24'------0----00-----111001 from group (1 1 16'1010000000000000).
  Merging pattern 24'----1-1----00-----111011 and 24'----1-1----00-----111001 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----------01-----111011 and 24'-----------01-----111001 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----------1------111011 and 24'-----------1------111001 from group (1 1 16'1010000000000000).
  Merging pattern 24'------0----00-----101111 and 24'------0----00-----101101 from group (1 1 16'1010000000000000).
  Merging pattern 24'----1-1----00-----101111 and 24'----1-1----00-----101101 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----------01-----101111 and 24'-----------01-----101101 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----------1------101111 and 24'-----------1------101101 from group (1 1 16'1010000000000000).
  Merging pattern 24'------0----00-----111111 and 24'------0----00-----111101 from group (1 1 16'1010000000000000).
  Merging pattern 24'----1-1----00-----111111 and 24'----1-1----00-----111101 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----------01-----111111 and 24'-----------01-----111101 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----------1------111111 and 24'-----------1------111101 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (1 1 16'1010000000000000).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (1 1 16'1010000000000000).
  Merging pattern 24'------0----00-----1110-1 and 24'------0----00-----1111-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'----1-1----00-----1110-1 and 24'----1-1----00-----1111-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----------01-----1110-1 and 24'-----------01-----1111-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----------1------1110-1 and 24'-----------1------1111-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'------0----00-----1111-1 and 24'------0----00-----1110-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'----1-1----00-----1111-1 and 24'----1-1----00-----1110-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----------01-----1111-1 and 24'-----------01-----1110-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'-----------1------1111-1 and 24'-----------1------1110-1 from group (1 1 16'1010000000000000).
  Merging pattern 24'----0-1----00-----111001 and 24'----0-1----00-----111011 from group (1 2 16'1001000000000000).
  Merging pattern 24'----0-1----00-----101101 and 24'----0-1----00-----101111 from group (1 2 16'1001000000000000).
  Merging pattern 24'----0-1----00-----111101 and 24'----0-1----00-----111111 from group (1 2 16'1001000000000000).
  Merging pattern 24'----0-1----00-----111011 and 24'----0-1----00-----111001 from group (1 2 16'1001000000000000).
  Merging pattern 24'----0-1----00-----101111 and 24'----0-1----00-----101101 from group (1 2 16'1001000000000000).
  Merging pattern 24'----0-1----00-----111111 and 24'----0-1----00-----111101 from group (1 2 16'1001000000000000).
  Merging pattern 24'----0-1----00-----1110-1 and 24'----0-1----00-----1111-1 from group (1 2 16'1001000000000000).
  Merging pattern 24'----0-1----00-----1111-1 and 24'----0-1----00-----1110-1 from group (1 2 16'1001000000000000).
  Merging pattern 24'-----1-------0----111001 and 24'-----1-------0----111011 from group (2 0 16'0100000000000010).
  Merging pattern 24'-----1-------0----101101 and 24'-----1-------0----101111 from group (2 0 16'0100000000000010).
  Merging pattern 24'-----1-------0----111101 and 24'-----1-------0----111111 from group (2 0 16'0100000000000010).
  Merging pattern 24'-----1-------0----111011 and 24'-----1-------0----111001 from group (2 0 16'0100000000000010).
  Merging pattern 24'-----1-------0----101111 and 24'-----1-------0----101101 from group (2 0 16'0100000000000010).
  Merging pattern 24'-----1-------0----111111 and 24'-----1-------0----111101 from group (2 0 16'0100000000000010).
  Merging pattern 24'-----1-------0----1110-1 and 24'-----1-------0----1111-1 from group (2 0 16'0100000000000010).
  Merging pattern 24'-----1-------0----1111-1 and 24'-----1-------0----1110-1 from group (2 0 16'0100000000000010).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (2 1 16'0010000000000010).
  Merging pattern 24'-----1-------1----111001 and 24'-----1-------1----111011 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------111001 and 24'-1----------------111011 from group (2 1 16'0010000000000010).
  Merging pattern 24'-----1-------1----101101 and 24'-----1-------1----101111 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------101101 and 24'-1----------------101111 from group (2 1 16'0010000000000010).
  Merging pattern 24'-----1-------1----111101 and 24'-----1-------1----111111 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------111101 and 24'-1----------------111111 from group (2 1 16'0010000000000010).
  Merging pattern 24'-----1-------1----111011 and 24'-----1-------1----111001 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------111011 and 24'-1----------------111001 from group (2 1 16'0010000000000010).
  Merging pattern 24'-----1-------1----101111 and 24'-----1-------1----101101 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------101111 and 24'-1----------------101101 from group (2 1 16'0010000000000010).
  Merging pattern 24'-----1-------1----111111 and 24'-----1-------1----111101 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------111111 and 24'-1----------------111101 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (2 1 16'0010000000000010).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (2 1 16'0010000000000010).
  Merging pattern 24'-----1-------1----1110-1 and 24'-----1-------1----1111-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------1110-1 and 24'-1----------------1111-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'-----1-------1----1111-1 and 24'-----1-------1----1110-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'-1----------------1111-1 and 24'-1----------------1110-1 from group (2 1 16'0010000000000010).
  Merging pattern 24'00---0-000----0---111001 and 24'00---0-000----0---111011 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------111001 and 24'1-----------------111011 from group (2 3 16'0000010000000010).
  Merging pattern 24'00---0-000----0---101101 and 24'00---0-000----0---101111 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------101101 and 24'1-----------------101111 from group (2 3 16'0000010000000010).
  Merging pattern 24'00---0-000----0---111101 and 24'00---0-000----0---111111 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------111101 and 24'1-----------------111111 from group (2 3 16'0000010000000010).
  Merging pattern 24'00---0-000----0---111011 and 24'00---0-000----0---111001 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------111011 and 24'1-----------------111001 from group (2 3 16'0000010000000010).
  Merging pattern 24'00---0-000----0---101111 and 24'00---0-000----0---101101 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------101111 and 24'1-----------------101101 from group (2 3 16'0000010000000010).
  Merging pattern 24'00---0-000----0---111111 and 24'00---0-000----0---111101 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------111111 and 24'1-----------------111101 from group (2 3 16'0000010000000010).
  Merging pattern 24'00---0-000----0---1110-1 and 24'00---0-000----0---1111-1 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------1110-1 and 24'1-----------------1111-1 from group (2 3 16'0000010000000010).
  Merging pattern 24'00---0-000----0---1111-1 and 24'00---0-000----0---1110-1 from group (2 3 16'0000010000000010).
  Merging pattern 24'1-----------------1111-1 and 24'1-----------------1110-1 from group (2 3 16'0000010000000010).
  Merging pattern 24'00---0-0-1----0---111001 and 24'00---0-0-1----0---111011 from group (2 4 16'0000001000000010).
  Merging pattern 24'-------1----------111001 and 24'-------1----------111011 from group (2 4 16'0000001000000010).
  Merging pattern 24'00---0-0-1----0---101101 and 24'00---0-0-1----0---101111 from group (2 4 16'0000001000000010).
  Merging pattern 24'-------1----------101101 and 24'-------1----------101111 from group (2 4 16'0000001000000010).
  Merging pattern 24'00---0-0-1----0---111101 and 24'00---0-0-1----0---111111 from group (2 4 16'0000001000000010).
  Merging pattern 24'-------1----------111101 and 24'-------1----------111111 from group (2 4 16'0000001000000010).
  Merging pattern 24'00---0-0-1----0---111011 and 24'00---0-0-1----0---111001 from group (2 4 16'0000001000000010).
  Merging pattern 24'-------1----------111011 and 24'-------1----------111001 from group (2 4 16'0000001000000010).
  Merging pattern 24'00---0-0-1----0---101111 and 24'00---0-0-1----0---101101 from group (2 4 16'0000001000000010).
  Merging pattern 24'-------1----------101111 and 24'-------1----------101101 from group (2 4 16'0000001000000010).
  Merging pattern 24'00---0-0-1----0---111111 and 24'00---0-0-1----0---111101 from group (2 4 16'0000001000000010).
  Merging pattern 24'-------1----------111111 and 24'-------1----------111101 from group (2 4 16'0000001000000010).
  Merging pattern 24'00---0-0-1----0---1110-1 and 24'00---0-0-1----0---1111-1 from group (2 4 16'0000001000000010).
  Merging pattern 24'-------1----------1110-1 and 24'-------1----------1111-1 from group (2 4 16'0000001000000010).
  Merging pattern 24'00---0-0-1----0---1111-1 and 24'00---0-0-1----0---1110-1 from group (2 4 16'0000001000000010).
  Merging pattern 24'-------1----------1111-1 and 24'-------1----------1110-1 from group (2 4 16'0000001000000010).
  Merging pattern 24'00---0-01-----0---111001 and 24'00---0-01-----0---111011 from group (2 5 16'0000000100000010).
  Merging pattern 24'00---0-01-----0---101101 and 24'00---0-01-----0---101111 from group (2 5 16'0000000100000010).
  Merging pattern 24'00---0-01-----0---111101 and 24'00---0-01-----0---111111 from group (2 5 16'0000000100000010).
  Merging pattern 24'00---0-01-----0---111011 and 24'00---0-01-----0---111001 from group (2 5 16'0000000100000010).
  Merging pattern 24'00---0-01-----0---101111 and 24'00---0-01-----0---101101 from group (2 5 16'0000000100000010).
  Merging pattern 24'00---0-01-----0---111111 and 24'00---0-01-----0---111101 from group (2 5 16'0000000100000010).
  Merging pattern 24'00---0-01-----0---1110-1 and 24'00---0-01-----0---1111-1 from group (2 5 16'0000000100000010).
  Merging pattern 24'00---0-01-----0---1111-1 and 24'00---0-01-----0---1110-1 from group (2 5 16'0000000100000010).
  Merging pattern 24'--------------1---111001 and 24'--------------1---111011 from group (2 6 16'0000000010000010).
  Merging pattern 24'--------------1---101101 and 24'--------------1---101111 from group (2 6 16'0000000010000010).
  Merging pattern 24'--------------1---111101 and 24'--------------1---111111 from group (2 6 16'0000000010000010).
  Merging pattern 24'--------------1---111011 and 24'--------------1---111001 from group (2 6 16'0000000010000010).
  Merging pattern 24'--------------1---101111 and 24'--------------1---101101 from group (2 6 16'0000000010000010).
  Merging pattern 24'--------------1---111111 and 24'--------------1---111101 from group (2 6 16'0000000010000010).
  Merging pattern 24'--------------1---1110-1 and 24'--------------1---1111-1 from group (2 6 16'0000000010000010).
  Merging pattern 24'--------------1---1111-1 and 24'--------------1---1110-1 from group (2 6 16'0000000010000010).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (3 1 16'0010000000001000).
  Merging pattern 24'----------0-------111001 and 24'----------0-------111011 from group (3 1 16'0010000000001000).
  Merging pattern 24'---1------1-------111001 and 24'---1------1-------111011 from group (3 1 16'0010000000001000).
  Merging pattern 24'----------0-------101101 and 24'----------0-------101111 from group (3 1 16'0010000000001000).
  Merging pattern 24'---1------1-------101101 and 24'---1------1-------101111 from group (3 1 16'0010000000001000).
  Merging pattern 24'----------0-------111101 and 24'----------0-------111111 from group (3 1 16'0010000000001000).
  Merging pattern 24'---1------1-------111101 and 24'---1------1-------111111 from group (3 1 16'0010000000001000).
  Merging pattern 24'----------0-------111011 and 24'----------0-------111001 from group (3 1 16'0010000000001000).
  Merging pattern 24'---1------1-------111011 and 24'---1------1-------111001 from group (3 1 16'0010000000001000).
  Merging pattern 24'----------0-------101111 and 24'----------0-------101101 from group (3 1 16'0010000000001000).
  Merging pattern 24'---1------1-------101111 and 24'---1------1-------101101 from group (3 1 16'0010000000001000).
  Merging pattern 24'----------0-------111111 and 24'----------0-------111101 from group (3 1 16'0010000000001000).
  Merging pattern 24'---1------1-------111111 and 24'---1------1-------111101 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (3 1 16'0010000000001000).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (3 1 16'0010000000001000).
  Merging pattern 24'----------0-------1110-1 and 24'----------0-------1111-1 from group (3 1 16'0010000000001000).
  Merging pattern 24'---1------1-------1110-1 and 24'---1------1-------1111-1 from group (3 1 16'0010000000001000).
  Merging pattern 24'----------0-------1111-1 and 24'----------0-------1110-1 from group (3 1 16'0010000000001000).
  Merging pattern 24'---1------1-------1111-1 and 24'---1------1-------1110-1 from group (3 1 16'0010000000001000).
  Merging pattern 24'---0------1-------111001 and 24'---0------1-------111011 from group (3 3 16'0000010000001000).
  Merging pattern 24'---0------1-------101101 and 24'---0------1-------101111 from group (3 3 16'0000010000001000).
  Merging pattern 24'---0------1-------111101 and 24'---0------1-------111111 from group (3 3 16'0000010000001000).
  Merging pattern 24'---0------1-------111011 and 24'---0------1-------111001 from group (3 3 16'0000010000001000).
  Merging pattern 24'---0------1-------101111 and 24'---0------1-------101101 from group (3 3 16'0000010000001000).
  Merging pattern 24'---0------1-------111111 and 24'---0------1-------111101 from group (3 3 16'0000010000001000).
  Merging pattern 24'---0------1-------1110-1 and 24'---0------1-------1111-1 from group (3 3 16'0000010000001000).
  Merging pattern 24'---0------1-------1111-1 and 24'---0------1-------1110-1 from group (3 3 16'0000010000001000).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (4 1 16'0010000000010000).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (4 1 16'0010000000010000).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (4 1 16'0010000000010000).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (4 1 16'0010000000010000).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (4 1 16'0010000000010000).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (4 1 16'0010000000010000).
  Merging pattern 24'---------------1--111001 and 24'---------------1--111011 from group (4 1 16'0010000000010000).
  Merging pattern 24'---------------1--101101 and 24'---------------1--101111 from group (4 1 16'0010000000010000).
  Merging pattern 24'---------------1--111101 and 24'---------------1--111111 from group (4 1 16'0010000000010000).
  Merging pattern 24'---------------1--111011 and 24'---------------1--111001 from group (4 1 16'0010000000010000).
  Merging pattern 24'---------------1--101111 and 24'---------------1--101101 from group (4 1 16'0010000000010000).
  Merging pattern 24'---------------1--111111 and 24'---------------1--111101 from group (4 1 16'0010000000010000).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (4 1 16'0010000000010000).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (4 1 16'0010000000010000).
  Merging pattern 24'---------------1--1110-1 and 24'---------------1--1111-1 from group (4 1 16'0010000000010000).
  Merging pattern 24'---------------1--1111-1 and 24'---------------1--1110-1 from group (4 1 16'0010000000010000).
  Merging pattern 24'---------------0--111001 and 24'---------------0--111011 from group (4 4 16'0000001000010000).
  Merging pattern 24'---------------0--101101 and 24'---------------0--101111 from group (4 4 16'0000001000010000).
  Merging pattern 24'---------------0--111101 and 24'---------------0--111111 from group (4 4 16'0000001000010000).
  Merging pattern 24'---------------0--111011 and 24'---------------0--111001 from group (4 4 16'0000001000010000).
  Merging pattern 24'---------------0--101111 and 24'---------------0--101101 from group (4 4 16'0000001000010000).
  Merging pattern 24'---------------0--111111 and 24'---------------0--111101 from group (4 4 16'0000001000010000).
  Merging pattern 24'---------------0--1110-1 and 24'---------------0--1111-1 from group (4 4 16'0000001000010000).
  Merging pattern 24'---------------0--1111-1 and 24'---------------0--1110-1 from group (4 4 16'0000001000010000).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (5 1 16'0010000000100000).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (5 1 16'0010000000100000).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (5 1 16'0010000000100000).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (5 1 16'0010000000100000).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (5 1 16'0010000000100000).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (5 1 16'0010000000100000).
  Merging pattern 24'----------------11111001 and 24'----------------11111011 from group (5 1 16'0010000000100000).
  Merging pattern 24'----------------11101101 and 24'----------------11101111 from group (5 1 16'0010000000100000).
  Merging pattern 24'----------------11111101 and 24'----------------11111111 from group (5 1 16'0010000000100000).
  Merging pattern 24'----------------11111011 and 24'----------------11111001 from group (5 1 16'0010000000100000).
  Merging pattern 24'----------------11101111 and 24'----------------11101101 from group (5 1 16'0010000000100000).
  Merging pattern 24'----------------11111111 and 24'----------------11111101 from group (5 1 16'0010000000100000).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (5 1 16'0010000000100000).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (5 1 16'0010000000100000).
  Merging pattern 24'----------------111110-1 and 24'----------------111111-1 from group (5 1 16'0010000000100000).
  Merging pattern 24'----------------111111-1 and 24'----------------111110-1 from group (5 1 16'0010000000100000).
  Merging pattern 24'----------------10111001 and 24'----------------10111011 from group (5 5 16'0000000100100000).
  Merging pattern 24'----------------0-111001 and 24'----------------0-111011 from group (5 5 16'0000000100100000).
  Merging pattern 24'----------------10101101 and 24'----------------10101111 from group (5 5 16'0000000100100000).
  Merging pattern 24'----------------0-101101 and 24'----------------0-101111 from group (5 5 16'0000000100100000).
  Merging pattern 24'----------------10111101 and 24'----------------10111111 from group (5 5 16'0000000100100000).
  Merging pattern 24'----------------0-111101 and 24'----------------0-111111 from group (5 5 16'0000000100100000).
  Merging pattern 24'----------------10111011 and 24'----------------10111001 from group (5 5 16'0000000100100000).
  Merging pattern 24'----------------0-111011 and 24'----------------0-111001 from group (5 5 16'0000000100100000).
  Merging pattern 24'----------------10101111 and 24'----------------10101101 from group (5 5 16'0000000100100000).
  Merging pattern 24'----------------0-101111 and 24'----------------0-101101 from group (5 5 16'0000000100100000).
  Merging pattern 24'----------------10111111 and 24'----------------10111101 from group (5 5 16'0000000100100000).
  Merging pattern 24'----------------0-111111 and 24'----------------0-111101 from group (5 5 16'0000000100100000).
  Merging pattern 24'----------------101110-1 and 24'----------------101111-1 from group (5 5 16'0000000100100000).
  Merging pattern 24'----------------0-1110-1 and 24'----------------0-1111-1 from group (5 5 16'0000000100100000).
  Merging pattern 24'----------------101111-1 and 24'----------------101110-1 from group (5 5 16'0000000100100000).
  Merging pattern 24'----------------0-1111-1 and 24'----------------0-1110-1 from group (5 5 16'0000000100100000).
  Merging pattern 24'------------------111000 and 24'------------------111010 from group (6 1 16'0010000001000000).
  Merging pattern 24'------------------101100 and 24'------------------101110 from group (6 1 16'0010000001000000).
  Merging pattern 24'------------------111100 and 24'------------------111110 from group (6 1 16'0010000001000000).
  Merging pattern 24'------------------111010 and 24'------------------111000 from group (6 1 16'0010000001000000).
  Merging pattern 24'------------------101110 and 24'------------------101100 from group (6 1 16'0010000001000000).
  Merging pattern 24'------------------111110 and 24'------------------111100 from group (6 1 16'0010000001000000).
  Merging pattern 24'----------------11111001 and 24'----------------11111011 from group (6 1 16'0010000001000000).
  Merging pattern 24'----------------11101101 and 24'----------------11101111 from group (6 1 16'0010000001000000).
  Merging pattern 24'----------------11111101 and 24'----------------11111111 from group (6 1 16'0010000001000000).
  Merging pattern 24'----------------11111011 and 24'----------------11111001 from group (6 1 16'0010000001000000).
  Merging pattern 24'----------------11101111 and 24'----------------11101101 from group (6 1 16'0010000001000000).
  Merging pattern 24'----------------11111111 and 24'----------------11111101 from group (6 1 16'0010000001000000).
  Merging pattern 24'------------------1110-0 and 24'------------------1111-0 from group (6 1 16'0010000001000000).
  Merging pattern 24'------------------1111-0 and 24'------------------1110-0 from group (6 1 16'0010000001000000).
  Merging pattern 24'----------------111110-1 and 24'----------------111111-1 from group (6 1 16'0010000001000000).
  Merging pattern 24'----------------111111-1 and 24'----------------111110-1 from group (6 1 16'0010000001000000).
  Merging pattern 24'----------------10111001 and 24'----------------10111011 from group (6 6 16'0000000011000000).
  Merging pattern 24'----------------0-111001 and 24'----------------0-111011 from group (6 6 16'0000000011000000).
  Merging pattern 24'----------------10101101 and 24'----------------10101111 from group (6 6 16'0000000011000000).
  Merging pattern 24'----------------0-101101 and 24'----------------0-101111 from group (6 6 16'0000000011000000).
  Merging pattern 24'----------------10111101 and 24'----------------10111111 from group (6 6 16'0000000011000000).
  Merging pattern 24'----------------0-111101 and 24'----------------0-111111 from group (6 6 16'0000000011000000).
  Merging pattern 24'----------------10111011 and 24'----------------10111001 from group (6 6 16'0000000011000000).
  Merging pattern 24'----------------0-111011 and 24'----------------0-111001 from group (6 6 16'0000000011000000).
  Merging pattern 24'----------------10101111 and 24'----------------10101101 from group (6 6 16'0000000011000000).
  Merging pattern 24'----------------0-101111 and 24'----------------0-101101 from group (6 6 16'0000000011000000).
  Merging pattern 24'----------------10111111 and 24'----------------10111101 from group (6 6 16'0000000011000000).
  Merging pattern 24'----------------0-111111 and 24'----------------0-111101 from group (6 6 16'0000000011000000).
  Merging pattern 24'----------------101110-1 and 24'----------------101111-1 from group (6 6 16'0000000011000000).
  Merging pattern 24'----------------0-1110-1 and 24'----------------0-1111-1 from group (6 6 16'0000000011000000).
  Merging pattern 24'----------------101111-1 and 24'----------------101110-1 from group (6 6 16'0000000011000000).
  Merging pattern 24'----------------0-1111-1 and 24'----------------0-1110-1 from group (6 6 16'0000000011000000).
  Removing unused input signal $auto$opt_reduce.cc:134:opt_mux$6677.

7.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..
Removed 75 unused cells and 75 unused wires.
<suppressed ~76 debug messages>

7.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\soc.cpu.cpu_state$6873' from module `\icebreaker'.
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [0].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [1].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [2].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [3].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [4].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [5].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [6].
  Removing unused output signal $techmap\soc.cpu.$0\cpu_state[7:0] [7].
Optimizing FSM `$fsm$\soc.cpu.mem_wordsize$6883' from module `\icebreaker'.
  Removing unused output signal $techmap\soc.cpu.$0\mem_wordsize[1:0] [0].
  Removing unused output signal $techmap\soc.cpu.$0\mem_wordsize[1:0] [1].
Optimizing FSM `$fsm$\soc.spimemio.state$6888' from module `\icebreaker'.
  Removing unused output signal $techmap\soc.spimemio.$0\state[3:0] [0].
  Removing unused output signal $techmap\soc.spimemio.$0\state[3:0] [1].
  Removing unused output signal $techmap\soc.spimemio.$0\state[3:0] [2].
  Removing unused output signal $techmap\soc.spimemio.$0\state[3:0] [3].

7.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\soc.cpu.cpu_state$6873' from module `\icebreaker' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  10000000 -> ------1
  01000000 -> -----1-
  00100000 -> ----1--
  00001000 -> ---1---
  00000100 -> --1----
  00000010 -> -1-----
  00000001 -> 1------
Recoding FSM `$fsm$\soc.cpu.mem_wordsize$6883' from module `\icebreaker' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\soc.spimemio.state$6888' from module `\icebreaker' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  0000 -> ------------1
  1000 -> -----------1-
  0100 -> ----------1--
  1100 -> ---------1---
  0010 -> --------1----
  1010 -> -------1-----
  0110 -> ------1------
  0001 -> -----1-------
  1001 -> ----1--------
  0101 -> ---1---------
  0011 -> --1----------
  1011 -> -1-----------
  0111 -> 1------------

7.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\soc.cpu.cpu_state$6873' from module `icebreaker':
-------------------------------------

  Information on FSM $fsm$\soc.cpu.cpu_state$6873 (\soc.cpu.cpu_state):

  Number of input signals:   23
  Number of output signals:   8
  Number of state bits:       7

  Input signals:
    0: \resetn
    1: $techmap\soc.cpu.$logic_and$picorv32.v:1932$2804_Y
    2: $techmap\soc.cpu.$logic_and$picorv32.v:1924$2797_Y
    3: $techmap\soc.cpu.$logic_and$picorv32.v:1919$2794_Y
    4: $techmap\soc.cpu.$logic_and$picorv32.v:1917$2790_Y
    5: $techmap\soc.cpu.$logic_and$picorv32.v:1916$2787_Y
    6: $techmap\soc.cpu.$logic_and$picorv32.v:1873$2776_Y
    7: $techmap\soc.cpu.$logic_or$picorv32.v:1858$2772_Y
    8: $techmap\soc.cpu.$eq$picorv32.v:1832$2754_Y
    9: $techmap\soc.cpu.$logic_and$picorv32.v:1697$2726_Y
   10: $techmap\soc.cpu.$logic_and$picorv32.v:1620$2712_Y
   11: $techmap\soc.cpu.$logic_and$picorv32.v:1549$2697_Y
   12: $techmap\soc.cpu.$logic_and$picorv32.v:1539$2689_Y
   13: \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu
   14: \soc.cpu.is_sll_srl_sra
   15: \soc.cpu.is_sb_sh_sw
   16: \soc.cpu.is_slli_srli_srai
   17: \soc.cpu.decoder_trigger
   18: \soc.cpu.instr_trap
   19: \soc.cpu.instr_jal
   20: \soc.cpu.mem_done
   21: $auto$opt_reduce.cc:134:opt_mux$6591
   22: $auto$opt_reduce.cc:134:opt_mux$6593

  Output signals:
    0: $techmap\soc.cpu.$procmux$2878_CMP
    1: $techmap\soc.cpu.$procmux$2876_CMP
    2: $techmap\soc.cpu.$procmux$2875_CMP
    3: $techmap\soc.cpu.$procmux$2874_CMP
    4: $techmap\soc.cpu.$procmux$2873_CMP
    5: $techmap\soc.cpu.$procmux$2872_CMP
    6: $techmap\soc.cpu.$procmux$2871_CMP
    7: $techmap\soc.cpu.$eq$picorv32.v:1308$2618_Y

  State encoding:
    0:  7'------1
    1:  7'-----1-
    2:  7'----1--
    3:  7'---1---
    4:  7'--1----
    5:  7'-1-----
    6:  7'1------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 23'-----------------10-001   ->     0 8'00000001
      1:     0 23'-----------------0---01   ->     0 8'00000001
      2:     0 23'-----------------101011   ->     0 8'00000001
      3:     0 23'-----------------0-1-11   ->     0 8'00000001
      4:     0 23'-----------------1011-1   ->     0 8'00000001
      5:     0 23'-----------------111--1   ->     0 8'00000001
      6:     0 23'-----------------11000-   ->     0 8'00000001
      7:     0 23'-----------------1-010-   ->     0 8'00000001
      8:     0 23'-------------------0-1-   ->     0 8'00000001
      9:     0 23'-----------------10-000   ->     1 8'00000001
     10:     0 23'-----------------0---00   ->     1 8'00000001
     11:     0 23'-----------------101010   ->     1 8'00000001
     12:     0 23'-----------------0-1-10   ->     1 8'00000001
     13:     0 23'-----------------1011-0   ->     1 8'00000001
     14:     0 23'-----------------111--0   ->     1 8'00000001
     15:     1 23'-----------------11000-   ->     0 8'10000000
     16:     1 23'-----------------1-010-   ->     0 8'10000000
     17:     1 23'-------------------0-1-   ->     0 8'10000000
     18:     1 23'-----------------10-000   ->     1 8'10000000
     19:     1 23'-----------------0---00   ->     1 8'10000000
     20:     1 23'-----------------101010   ->     1 8'10000000
     21:     1 23'-----------------0-1-10   ->     1 8'10000000
     22:     1 23'-----------------1011-0   ->     1 8'10000000
     23:     1 23'-----------------111--0   ->     1 8'10000000
     24:     1 23'-----0----00-----10-001   ->     1 8'10000000
     25:     1 23'---1-1----00-----10-001   ->     1 8'10000000
     26:     1 23'----------01-----10-001   ->     1 8'10000000
     27:     1 23'----------1------10-001   ->     1 8'10000000
     28:     1 23'-----0----00-----0---01   ->     1 8'10000000
     29:     1 23'---1-1----00-----0---01   ->     1 8'10000000
     30:     1 23'----------01-----0---01   ->     1 8'10000000
     31:     1 23'----------1------0---01   ->     1 8'10000000
     32:     1 23'-----0----00-----101011   ->     1 8'10000000
     33:     1 23'---1-1----00-----101011   ->     1 8'10000000
     34:     1 23'----------01-----101011   ->     1 8'10000000
     35:     1 23'----------1------101011   ->     1 8'10000000
     36:     1 23'-----0----00-----0-1-11   ->     1 8'10000000
     37:     1 23'---1-1----00-----0-1-11   ->     1 8'10000000
     38:     1 23'----------01-----0-1-11   ->     1 8'10000000
     39:     1 23'----------1------0-1-11   ->     1 8'10000000
     40:     1 23'-----0----00-----1011-1   ->     1 8'10000000
     41:     1 23'---1-1----00-----1011-1   ->     1 8'10000000
     42:     1 23'----------01-----1011-1   ->     1 8'10000000
     43:     1 23'----------1------1011-1   ->     1 8'10000000
     44:     1 23'-----0----00-----111--1   ->     1 8'10000000
     45:     1 23'---1-1----00-----111--1   ->     1 8'10000000
     46:     1 23'----------01-----111--1   ->     1 8'10000000
     47:     1 23'----------1------111--1   ->     1 8'10000000
     48:     1 23'---0-1----00-----10-001   ->     2 8'10000000
     49:     1 23'---0-1----00-----0---01   ->     2 8'10000000
     50:     1 23'---0-1----00-----101011   ->     2 8'10000000
     51:     1 23'---0-1----00-----0-1-11   ->     2 8'10000000
     52:     1 23'---0-1----00-----1011-1   ->     2 8'10000000
     53:     1 23'---0-1----00-----111--1   ->     2 8'10000000
     54:     2 23'----1-------0----10-001   ->     0 8'00000010
     55:     2 23'----1-------0----0---01   ->     0 8'00000010
     56:     2 23'----1-------0----101011   ->     0 8'00000010
     57:     2 23'----1-------0----0-1-11   ->     0 8'00000010
     58:     2 23'----1-------0----1011-1   ->     0 8'00000010
     59:     2 23'----1-------0----111--1   ->     0 8'00000010
     60:     2 23'-----------------11000-   ->     0 8'00000010
     61:     2 23'-----------------1-010-   ->     0 8'00000010
     62:     2 23'-------------------0-1-   ->     0 8'00000010
     63:     2 23'-----------------10-000   ->     1 8'00000010
     64:     2 23'-----------------0---00   ->     1 8'00000010
     65:     2 23'-----------------101010   ->     1 8'00000010
     66:     2 23'-----------------0-1-10   ->     1 8'00000010
     67:     2 23'-----------------1011-0   ->     1 8'00000010
     68:     2 23'-----------------111--0   ->     1 8'00000010
     69:     2 23'----1-------1----10-001   ->     1 8'00000010
     70:     2 23'-1---------------10-001   ->     1 8'00000010
     71:     2 23'----1-------1----0---01   ->     1 8'00000010
     72:     2 23'-1---------------0---01   ->     1 8'00000010
     73:     2 23'----1-------1----101011   ->     1 8'00000010
     74:     2 23'-1---------------101011   ->     1 8'00000010
     75:     2 23'----1-------1----0-1-11   ->     1 8'00000010
     76:     2 23'-1---------------0-1-11   ->     1 8'00000010
     77:     2 23'----1-------1----1011-1   ->     1 8'00000010
     78:     2 23'-1---------------1011-1   ->     1 8'00000010
     79:     2 23'----1-------1----111--1   ->     1 8'00000010
     80:     2 23'-1---------------111--1   ->     1 8'00000010
     81:     2 23'00--0-000----0---10-001   ->     3 8'00000010
     82:     2 23'1----------------10-001   ->     3 8'00000010
     83:     2 23'00--0-000----0---0---01   ->     3 8'00000010
     84:     2 23'1----------------0---01   ->     3 8'00000010
     85:     2 23'00--0-000----0---101011   ->     3 8'00000010
     86:     2 23'1----------------101011   ->     3 8'00000010
     87:     2 23'00--0-000----0---0-1-11   ->     3 8'00000010
     88:     2 23'1----------------0-1-11   ->     3 8'00000010
     89:     2 23'00--0-000----0---1011-1   ->     3 8'00000010
     90:     2 23'1----------------1011-1   ->     3 8'00000010
     91:     2 23'00--0-000----0---111--1   ->     3 8'00000010
     92:     2 23'1----------------111--1   ->     3 8'00000010
     93:     2 23'00--0-0-1----0---10-001   ->     4 8'00000010
     94:     2 23'------1----------10-001   ->     4 8'00000010
     95:     2 23'00--0-0-1----0---0---01   ->     4 8'00000010
     96:     2 23'------1----------0---01   ->     4 8'00000010
     97:     2 23'00--0-0-1----0---101011   ->     4 8'00000010
     98:     2 23'------1----------101011   ->     4 8'00000010
     99:     2 23'00--0-0-1----0---0-1-11   ->     4 8'00000010
    100:     2 23'------1----------0-1-11   ->     4 8'00000010
    101:     2 23'00--0-0-1----0---1011-1   ->     4 8'00000010
    102:     2 23'------1----------1011-1   ->     4 8'00000010
    103:     2 23'00--0-0-1----0---111--1   ->     4 8'00000010
    104:     2 23'------1----------111--1   ->     4 8'00000010
    105:     2 23'00--0-01-----0---10-001   ->     5 8'00000010
    106:     2 23'00--0-01-----0---0---01   ->     5 8'00000010
    107:     2 23'00--0-01-----0---101011   ->     5 8'00000010
    108:     2 23'00--0-01-----0---0-1-11   ->     5 8'00000010
    109:     2 23'00--0-01-----0---1011-1   ->     5 8'00000010
    110:     2 23'00--0-01-----0---111--1   ->     5 8'00000010
    111:     2 23'-------------1---10-001   ->     6 8'00000010
    112:     2 23'-------------1---0---01   ->     6 8'00000010
    113:     2 23'-------------1---101011   ->     6 8'00000010
    114:     2 23'-------------1---0-1-11   ->     6 8'00000010
    115:     2 23'-------------1---1011-1   ->     6 8'00000010
    116:     2 23'-------------1---111--1   ->     6 8'00000010
    117:     3 23'-----------------11000-   ->     0 8'00001000
    118:     3 23'-----------------1-010-   ->     0 8'00001000
    119:     3 23'-------------------0-1-   ->     0 8'00001000
    120:     3 23'-----------------10-000   ->     1 8'00001000
    121:     3 23'-----------------0---00   ->     1 8'00001000
    122:     3 23'-----------------101010   ->     1 8'00001000
    123:     3 23'-----------------0-1-10   ->     1 8'00001000
    124:     3 23'-----------------1011-0   ->     1 8'00001000
    125:     3 23'-----------------111--0   ->     1 8'00001000
    126:     3 23'---------0-------10-001   ->     1 8'00001000
    127:     3 23'--1------1-------10-001   ->     1 8'00001000
    128:     3 23'---------0-------0---01   ->     1 8'00001000
    129:     3 23'--1------1-------0---01   ->     1 8'00001000
    130:     3 23'---------0-------101011   ->     1 8'00001000
    131:     3 23'--1------1-------101011   ->     1 8'00001000
    132:     3 23'---------0-------0-1-11   ->     1 8'00001000
    133:     3 23'--1------1-------0-1-11   ->     1 8'00001000
    134:     3 23'---------0-------1011-1   ->     1 8'00001000
    135:     3 23'--1------1-------1011-1   ->     1 8'00001000
    136:     3 23'---------0-------111--1   ->     1 8'00001000
    137:     3 23'--1------1-------111--1   ->     1 8'00001000
    138:     3 23'--0------1-------10-001   ->     3 8'00001000
    139:     3 23'--0------1-------0---01   ->     3 8'00001000
    140:     3 23'--0------1-------101011   ->     3 8'00001000
    141:     3 23'--0------1-------0-1-11   ->     3 8'00001000
    142:     3 23'--0------1-------1011-1   ->     3 8'00001000
    143:     3 23'--0------1-------111--1   ->     3 8'00001000
    144:     4 23'-----------------11000-   ->     0 8'00010000
    145:     4 23'-----------------1-010-   ->     0 8'00010000
    146:     4 23'-------------------0-1-   ->     0 8'00010000
    147:     4 23'-----------------10-000   ->     1 8'00010000
    148:     4 23'-----------------0---00   ->     1 8'00010000
    149:     4 23'-----------------101010   ->     1 8'00010000
    150:     4 23'-----------------0-1-10   ->     1 8'00010000
    151:     4 23'-----------------1011-0   ->     1 8'00010000
    152:     4 23'-----------------111--0   ->     1 8'00010000
    153:     4 23'--------------1--10-001   ->     1 8'00010000
    154:     4 23'--------------1--0---01   ->     1 8'00010000
    155:     4 23'--------------1--101011   ->     1 8'00010000
    156:     4 23'--------------1--0-1-11   ->     1 8'00010000
    157:     4 23'--------------1--1011-1   ->     1 8'00010000
    158:     4 23'--------------1--111--1   ->     1 8'00010000
    159:     4 23'--------------0--10-001   ->     4 8'00010000
    160:     4 23'--------------0--0---01   ->     4 8'00010000
    161:     4 23'--------------0--101011   ->     4 8'00010000
    162:     4 23'--------------0--0-1-11   ->     4 8'00010000
    163:     4 23'--------------0--1011-1   ->     4 8'00010000
    164:     4 23'--------------0--111--1   ->     4 8'00010000
    165:     5 23'-----------------11000-   ->     0 8'00100000
    166:     5 23'-----------------1-010-   ->     0 8'00100000
    167:     5 23'-------------------0-1-   ->     0 8'00100000
    168:     5 23'-----------------10-000   ->     1 8'00100000
    169:     5 23'-----------------0---00   ->     1 8'00100000
    170:     5 23'-----------------101010   ->     1 8'00100000
    171:     5 23'-----------------0-1-10   ->     1 8'00100000
    172:     5 23'-----------------1011-0   ->     1 8'00100000
    173:     5 23'-----------------111--0   ->     1 8'00100000
    174:     5 23'---------------1110-001   ->     1 8'00100000
    175:     5 23'---------------110---01   ->     1 8'00100000
    176:     5 23'---------------11101011   ->     1 8'00100000
    177:     5 23'---------------110-1-11   ->     1 8'00100000
    178:     5 23'---------------111011-1   ->     1 8'00100000
    179:     5 23'---------------11111--1   ->     1 8'00100000
    180:     5 23'---------------1010-001   ->     5 8'00100000
    181:     5 23'---------------0-10-001   ->     5 8'00100000
    182:     5 23'---------------100---01   ->     5 8'00100000
    183:     5 23'---------------0-0---01   ->     5 8'00100000
    184:     5 23'---------------10101011   ->     5 8'00100000
    185:     5 23'---------------0-101011   ->     5 8'00100000
    186:     5 23'---------------100-1-11   ->     5 8'00100000
    187:     5 23'---------------0-0-1-11   ->     5 8'00100000
    188:     5 23'---------------101011-1   ->     5 8'00100000
    189:     5 23'---------------0-1011-1   ->     5 8'00100000
    190:     5 23'---------------10111--1   ->     5 8'00100000
    191:     5 23'---------------0-111--1   ->     5 8'00100000
    192:     6 23'-----------------11000-   ->     0 8'01000000
    193:     6 23'-----------------1-010-   ->     0 8'01000000
    194:     6 23'-------------------0-1-   ->     0 8'01000000
    195:     6 23'-----------------10-000   ->     1 8'01000000
    196:     6 23'-----------------0---00   ->     1 8'01000000
    197:     6 23'-----------------101010   ->     1 8'01000000
    198:     6 23'-----------------0-1-10   ->     1 8'01000000
    199:     6 23'-----------------1011-0   ->     1 8'01000000
    200:     6 23'-----------------111--0   ->     1 8'01000000
    201:     6 23'---------------1110-001   ->     1 8'01000000
    202:     6 23'---------------110---01   ->     1 8'01000000
    203:     6 23'---------------11101011   ->     1 8'01000000
    204:     6 23'---------------110-1-11   ->     1 8'01000000
    205:     6 23'---------------111011-1   ->     1 8'01000000
    206:     6 23'---------------11111--1   ->     1 8'01000000
    207:     6 23'---------------1010-001   ->     6 8'01000000
    208:     6 23'---------------0-10-001   ->     6 8'01000000
    209:     6 23'---------------100---01   ->     6 8'01000000
    210:     6 23'---------------0-0---01   ->     6 8'01000000
    211:     6 23'---------------10101011   ->     6 8'01000000
    212:     6 23'---------------0-101011   ->     6 8'01000000
    213:     6 23'---------------100-1-11   ->     6 8'01000000
    214:     6 23'---------------0-0-1-11   ->     6 8'01000000
    215:     6 23'---------------101011-1   ->     6 8'01000000
    216:     6 23'---------------0-1011-1   ->     6 8'01000000
    217:     6 23'---------------10111--1   ->     6 8'01000000
    218:     6 23'---------------0-111--1   ->     6 8'01000000

-------------------------------------

FSM `$fsm$\soc.cpu.mem_wordsize$6883' from module `icebreaker':
-------------------------------------

  Information on FSM $fsm$\soc.cpu.mem_wordsize$6883 (\soc.cpu.mem_wordsize):

  Number of input signals:   13
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \resetn
    1: $techmap\soc.cpu.$procmux$2872_CMP
    2: $techmap\soc.cpu.$procmux$2871_CMP
    3: $techmap\soc.cpu.$logic_or$picorv32.v:1888$2781_Y
    4: $techmap\soc.cpu.$logic_or$picorv32.v:1887$2780_Y
    5: $techmap\soc.cpu.$logic_or$picorv32.v:1858$2772_Y
    6: $techmap\soc.cpu.$eq$picorv32.v:1308$2618_Y
    7: \soc.cpu.instr_sw
    8: \soc.cpu.instr_sh
    9: \soc.cpu.instr_sb
   10: \soc.cpu.instr_lw
   11: \soc.cpu.mem_do_wdata
   12: \soc.cpu.mem_do_rdata

  Output signals:
    0: $techmap\soc.cpu.$procmux$5504_CMP
    1: $techmap\soc.cpu.$eq$picorv32.v:1924$2795_Y
    2: $techmap\soc.cpu.$eq$picorv32.v:1917$2788_Y

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 13'------------0   ->     0 3'100
      1:     0 13'------0---001   ->     0 3'100
      2:     0 13'-------0---11   ->     0 3'100
      3:     0 13'-0---1-1---11   ->     0 3'100
      4:     0 13'-1-----1---11   ->     0 3'100
      5:     0 13'-------0--1-1   ->     0 3'100
      6:     0 13'0-1----1--1-1   ->     0 3'100
      7:     0 13'1------1--1-1   ->     0 3'100
      8:     0 13'------1-----1   ->     0 3'100
      9:     0 13'-0-1---1---11   ->     1 3'100
     10:     0 13'0------11-1-1   ->     1 3'100
     11:     0 13'-0--1--1---11   ->     2 3'100
     12:     0 13'0------1-11-1   ->     2 3'100
     13:     1 13'-0---1-1---11   ->     0 3'001
     14:     1 13'0-1----1--1-1   ->     0 3'001
     15:     1 13'------1-----1   ->     0 3'001
     16:     1 13'------------0   ->     1 3'001
     17:     1 13'------0---001   ->     1 3'001
     18:     1 13'-------0---11   ->     1 3'001
     19:     1 13'-0-1---1---11   ->     1 3'001
     20:     1 13'-1-----1---11   ->     1 3'001
     21:     1 13'0------11-1-1   ->     1 3'001
     22:     1 13'-------0--1-1   ->     1 3'001
     23:     1 13'1------1--1-1   ->     1 3'001
     24:     1 13'-0--1--1---11   ->     2 3'001
     25:     1 13'0------1-11-1   ->     2 3'001
     26:     2 13'-0---1-1---11   ->     0 3'010
     27:     2 13'0-1----1--1-1   ->     0 3'010
     28:     2 13'------1-----1   ->     0 3'010
     29:     2 13'-0-1---1---11   ->     1 3'010
     30:     2 13'0------11-1-1   ->     1 3'010
     31:     2 13'------------0   ->     2 3'010
     32:     2 13'------0---001   ->     2 3'010
     33:     2 13'-------0---11   ->     2 3'010
     34:     2 13'-0--1--1---11   ->     2 3'010
     35:     2 13'-1-----1---11   ->     2 3'010
     36:     2 13'0------1-11-1   ->     2 3'010
     37:     2 13'-------0--1-1   ->     2 3'010
     38:     2 13'1------1--1-1   ->     2 3'010

-------------------------------------

FSM `$fsm$\soc.spimemio.state$6888' from module `icebreaker':
-------------------------------------

  Information on FSM $fsm$\soc.spimemio.state$6888 (\soc.spimemio.state):

  Number of input signals:    8
  Number of output signals:  13
  Number of state bits:      13

  Input signals:
    0: $techmap\soc.spimemio.$logic_or$spimemio.v:350$71_Y
    1: $techmap\soc.spimemio.$logic_or$spimemio.v:310$67_Y
    2: $techmap\soc.spimemio.$logic_and$spimemio.v:282$66_Y
    3: $techmap\soc.spimemio.$logic_or$spimemio.v:211$53_Y
    4: \soc.spimemio.config_cont
    5: \soc.spimemio.jump
    6: \soc.spimemio.dout_valid
    7: \soc.spimemio.xfer.din_ready

  Output signals:
    0: $techmap\soc.spimemio.$procmux$6089_CMP
    1: $techmap\soc.spimemio.$procmux$6083_CMP
    2: $techmap\soc.spimemio.$procmux$6077_CMP
    3: $techmap\soc.spimemio.$procmux$6074_CMP
    4: $techmap\soc.spimemio.$procmux$6069_CMP
    5: $techmap\soc.spimemio.$procmux$6066_CMP
    6: $techmap\soc.spimemio.$procmux$6063_CMP
    7: $techmap\soc.spimemio.$procmux$6060_CMP
    8: $techmap\soc.spimemio.$procmux$6057_CMP
    9: $techmap\soc.spimemio.$procmux$6054_CMP
   10: $techmap\soc.spimemio.$procmux$6051_CMP
   11: $techmap\soc.spimemio.$procmux$6040_CMP
   12: $techmap\soc.spimemio.$procmux$6037_CMP

  State encoding:
    0: 13'------------1  <RESET STATE>
    1: 13'-----------1-
    2: 13'----------1--
    3: 13'---------1---
    4: 13'--------1----
    5: 13'-------1-----
    6: 13'------1------
    7: 13'-----1-------
    8: 13'----1--------
    9: 13'---1---------
   10: 13'--1----------
   11: 13'-1-----------
   12: 13'1------------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 8'0-0-0---   ->     0 13'0000000000001
      1:     0 8'----1---   ->     0 13'0000000000001
      2:     0 8'--100---   ->     2 13'0000000000001
      3:     0 8'1-0-0---   ->     7 13'0000000000001
      4:     0 8'--110---   ->     9 13'0000000000001
      5:     1 8'----1---   ->     0 13'0000001000000
      6:     1 8'0-0-0---   ->     1 13'0000001000000
      7:     1 8'--100---   ->     2 13'0000001000000
      8:     1 8'1-0-0---   ->     8 13'0000001000000
      9:     1 8'--110---   ->     9 13'0000001000000
     10:     2 8'----1---   ->     0 13'0000000000100
     11:     2 8'--100---   ->     2 13'0000000000100
     12:     2 8'0-0-0---   ->     2 13'0000000000100
     13:     2 8'--110---   ->     9 13'0000000000100
     14:     2 8'1-0-0---   ->     9 13'0000000000100
     15:     3 8'----1---   ->     0 13'0010000000000
     16:     3 8'--100---   ->     2 13'0010000000000
     17:     3 8'--0-0--0   ->     3 13'0010000000000
     18:     3 8'0-0-0--1   ->     3 13'0010000000000
     19:     3 8'1-0-0--1   ->     8 13'0010000000000
     20:     3 8'--110---   ->     9 13'0010000000000
     21:     4 8'----1---   ->     0 13'0000000000010
     22:     4 8'--100---   ->     2 13'0000000000010
     23:     4 8'0-0-0---   ->     4 13'0000000000010
     24:     4 8'--110---   ->     9 13'0000000000010
     25:     4 8'1-0-0---   ->    10 13'0000000000010
     26:     5 8'----1---   ->     0 13'0000100000000
     27:     5 8'--100---   ->     2 13'0000100000000
     28:     5 8'0-0-0---   ->     5 13'0000100000000
     29:     5 8'--110---   ->     9 13'0000100000000
     30:     5 8'1-0-0---   ->    11 13'0000100000000
     31:     6 8'----1---   ->     0 13'0000000010000
     32:     6 8'--100---   ->     2 13'0000000010000
     33:     6 8'0-0-0---   ->     6 13'0000000010000
     34:     6 8'--110---   ->     9 13'0000000010000
     35:     6 8'1-0-0---   ->    12 13'0000000010000
     36:     7 8'----1---   ->     0 13'0100000000000
     37:     7 8'--100---   ->     2 13'0100000000000
     38:     7 8'-10-0---   ->     4 13'0100000000000
     39:     7 8'-00-0---   ->     7 13'0100000000000
     40:     7 8'--110---   ->     9 13'0100000000000
     41:     8 8'----1---   ->     0 13'0000010000000
     42:     8 8'--100---   ->     2 13'0000010000000
     43:     8 8'1-0-0---   ->     5 13'0000010000000
     44:     8 8'0-0-0---   ->     8 13'0000010000000
     45:     8 8'--110---   ->     9 13'0000010000000
     46:     9 8'----1---   ->     0 13'0000000001000
     47:     9 8'--100---   ->     2 13'0000000001000
     48:     9 8'1-0-01--   ->     6 13'0000000001000
     49:     9 8'--0-00--   ->     9 13'0000000001000
     50:     9 8'0-0-01--   ->     9 13'0000000001000
     51:     9 8'--110---   ->     9 13'0000000001000
     52:    10 8'----1---   ->     0 13'1000000000000
     53:    10 8'--100---   ->     2 13'1000000000000
     54:    10 8'-10-0---   ->     2 13'1000000000000
     55:    10 8'--110---   ->     9 13'1000000000000
     56:    10 8'-00-0---   ->    10 13'1000000000000
     57:    11 8'----1---   ->     0 13'0001000000000
     58:    11 8'--100---   ->     2 13'0001000000000
     59:    11 8'1-0-0---   ->     3 13'0001000000000
     60:    11 8'--110---   ->     9 13'0001000000000
     61:    11 8'0-0-0---   ->    11 13'0001000000000
     62:    12 8'----1---   ->     0 13'0000000100000
     63:    12 8'1-0-0-1-   ->     1 13'0000000100000
     64:    12 8'--100---   ->     2 13'0000000100000
     65:    12 8'1-0-0-0-   ->     8 13'0000000100000
     66:    12 8'--110---   ->     9 13'0000000100000
     67:    12 8'0-0-0---   ->    12 13'0000000100000

-------------------------------------

7.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\soc.cpu.cpu_state$6873' from module `\icebreaker'.
Mapping FSM `$fsm$\soc.cpu.mem_wordsize$6883' from module `\icebreaker'.
Mapping FSM `$fsm$\soc.spimemio.state$6888' from module `\icebreaker'.

7.21. Executing OPT pass (performing simple optimizations).

7.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.
<suppressed ~18 debug messages>

7.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\icebreaker'.
<suppressed ~141 debug messages>
Removed a total of 47 cells.

7.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

7.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..
Removed 0 unused cells and 81 unused wires.
<suppressed ~1 debug messages>

7.21.5. Finished fast OPT passes.

7.22. Executing MEMORY pass.

7.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

7.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\soc.cpu.cpuregs.$memwr$\regs$picosoc.v:0$197' in module `\icebreaker': merged $dff to cell.
Checking cell `$techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:236$195' in module `\icebreaker': merged address $dff to cell.
Checking cell `$techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:237$196' in module `\icebreaker': merged address $dff to cell.

7.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

7.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

7.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..

7.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\soc.cpu.cpuregs.regs' in module `\icebreaker':
  $techmap\soc.cpu.cpuregs.$memwr$\regs$picosoc.v:0$197 ($memwr)
  $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:237$196 ($memrd)
  $techmap\soc.cpu.cpuregs.$memrd$\regs$picosoc.v:236$195 ($memrd)

7.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..

7.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing icebreaker.soc.cpu.cpuregs.regs:
  Properties: ports=3 bits=1024 rports=2 wports=1 dbits=32 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7168 efficiency=6
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7680 efficiency=3
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7936 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 rejected: requirement 'min efficiency 2' not met.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 2 rules:
    Efficiency for rule 4.1: efficiency=3, cells=8, acells=1
    Efficiency for rule 1.1: efficiency=6, cells=4, acells=1
    Selected rule 1.1 with efficiency 6.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Mapped to bram port A1.2.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: soc.cpu.cpuregs.regs.0.0.0
        Adding extra logic for transparent port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 1>: soc.cpu.cpuregs.regs.0.0.1
        Adding extra logic for transparent port A1.2.
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: soc.cpu.cpuregs.regs.1.0.0
        Adding extra logic for transparent port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 1>: soc.cpu.cpuregs.regs.1.0.1
        Adding extra logic for transparent port A1.2.

7.25. Executing TECHMAP pass (map to technology primitives).

7.25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

7.25.2. Continuing TECHMAP pass.
Using template $paramod\$__ICE40_RAM4K_M0\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$4200c10d2e07b3359d49ca78f8f6d43ec6f7e316\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~70 debug messages>

7.26. Executing ICE40_BRAMINIT pass.

7.27. Executing OPT pass (performing simple optimizations).

7.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.
<suppressed ~93 debug messages>

7.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\icebreaker'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

7.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

7.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..
Removed 24 unused cells and 227 unused wires.
<suppressed ~29 debug messages>

7.27.5. Finished fast OPT passes.

7.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

7.29. Executing OPT pass (performing simple optimizations).

7.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.

7.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\icebreaker'.
Removed a total of 0 cells.

7.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \icebreaker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/3 on $pmux $techmap\soc.cpu.$procmux$3503.
    dead port 2/5 on $pmux $techmap\soc.cpu.$procmux$3967.
    dead port 1/3 on $pmux $techmap\soc.cpu.$procmux$4172.
Removed 3 multiplexer ports.
<suppressed ~244 debug messages>

7.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \icebreaker.
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:1017:replace_cell$7866:
      Old ports: A=16'0000000000000000, B={ \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen }, Y=$auto$rtlil.cc:1989:Mux$7786
      New ports: A=1'0, B=\soc.cpu.cpuregs.wen, Y=$auto$rtlil.cc:1989:Mux$7786 [0]
      New connections: $auto$rtlil.cc:1989:Mux$7786 [15:1] = { $auto$rtlil.cc:1989:Mux$7786 [0] $auto$rtlil.cc:1989:Mux$7786 [0] $auto$rtlil.cc:1989:Mux$7786 [0] $auto$rtlil.cc:1989:Mux$7786 [0] $auto$rtlil.cc:1989:Mux$7786 [0] $auto$rtlil.cc:1989:Mux$7786 [0] $auto$rtlil.cc:1989:Mux$7786 [0] $auto$rtlil.cc:1989:Mux$7786 [0] $auto$rtlil.cc:1989:Mux$7786 [0] $auto$rtlil.cc:1989:Mux$7786 [0] $auto$rtlil.cc:1989:Mux$7786 [0] $auto$rtlil.cc:1989:Mux$7786 [0] $auto$rtlil.cc:1989:Mux$7786 [0] $auto$rtlil.cc:1989:Mux$7786 [0] $auto$rtlil.cc:1989:Mux$7786 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:1017:replace_cell$7905:
      Old ports: A=16'0000000000000000, B={ \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen \soc.cpu.cpuregs.wen }, Y=$auto$rtlil.cc:1989:Mux$7825
      New ports: A=1'0, B=\soc.cpu.cpuregs.wen, Y=$auto$rtlil.cc:1989:Mux$7825 [0]
      New connections: $auto$rtlil.cc:1989:Mux$7825 [15:1] = { $auto$rtlil.cc:1989:Mux$7825 [0] $auto$rtlil.cc:1989:Mux$7825 [0] $auto$rtlil.cc:1989:Mux$7825 [0] $auto$rtlil.cc:1989:Mux$7825 [0] $auto$rtlil.cc:1989:Mux$7825 [0] $auto$rtlil.cc:1989:Mux$7825 [0] $auto$rtlil.cc:1989:Mux$7825 [0] $auto$rtlil.cc:1989:Mux$7825 [0] $auto$rtlil.cc:1989:Mux$7825 [0] $auto$rtlil.cc:1989:Mux$7825 [0] $auto$rtlil.cc:1989:Mux$7825 [0] $auto$rtlil.cc:1989:Mux$7825 [0] $auto$rtlil.cc:1989:Mux$7825 [0] $auto$rtlil.cc:1989:Mux$7825 [0] $auto$rtlil.cc:1989:Mux$7825 [0] }
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$3440:
      Old ports: A=\soc.cpu.mem_rdata_word, B={ \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15:0] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7:0] }, Y=$techmap\soc.cpu.$procmux$3440_Y
      New ports: A=\soc.cpu.mem_rdata_word [31:8], B={ \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15:7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] }, Y=$techmap\soc.cpu.$procmux$3440_Y [31:8]
      New connections: $techmap\soc.cpu.$procmux$3440_Y [7:0] = \soc.cpu.mem_rdata_word [7:0]
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4431: { $techmap\soc.cpu.$procmux$4450_CMP $techmap\soc.cpu.$procmux$4432_CMP }
    New ctrl vector for $pmux cell $techmap\soc.cpu.$procmux$4433: { $techmap\soc.cpu.$procmux$4430_CMP $techmap\soc.cpu.$procmux$4448_CMP }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4483:
      Old ports: A={ \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] }, B={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, Y=$techmap\soc.cpu.$procmux$4483_Y
      New ports: A=\soc.cpu.mem_rdata_latched [31], B=\soc.cpu.mem_rdata_latched [12], Y=$techmap\soc.cpu.$procmux$4483_Y [0]
      New connections: $techmap\soc.cpu.$procmux$4483_Y [11:1] = { $techmap\soc.cpu.$procmux$4483_Y [0] $techmap\soc.cpu.$procmux$4483_Y [0] $techmap\soc.cpu.$procmux$4483_Y [0] $techmap\soc.cpu.$procmux$4483_Y [0] $techmap\soc.cpu.$procmux$4483_Y [0] $techmap\soc.cpu.$procmux$4483_Y [0] $techmap\soc.cpu.$procmux$4483_Y [0] $techmap\soc.cpu.$procmux$4483_Y [0] $techmap\soc.cpu.$procmux$4483_Y [0] $techmap\soc.cpu.$procmux$4483_Y [0] $techmap\soc.cpu.$procmux$4483_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4511:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:460:run$6696 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$6696 [1]
      New connections: $auto$wreduce.cc:460:run$6696 [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4689:
      Old ports: A=5'00000, B={ 2'01 \soc.cpu.mem_rdata_latched [4:2] }, Y=$techmap\soc.cpu.$procmux$4689_Y
      New ports: A=4'0000, B={ 1'1 \soc.cpu.mem_rdata_latched [4:2] }, Y=$techmap\soc.cpu.$procmux$4689_Y [3:0]
      New connections: $techmap\soc.cpu.$procmux$4689_Y [4] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4696:
      Old ports: A=\soc.cpu.mem_rdata_latched [19:12], B={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, Y=$techmap\soc.cpu.$procmux$4696_Y
      New ports: A=\soc.cpu.mem_rdata_latched [19:13], B={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, Y=$techmap\soc.cpu.$procmux$4696_Y [7:1]
      New connections: $techmap\soc.cpu.$procmux$4696_Y [0] = \soc.cpu.mem_rdata_latched [12]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4721:
      Old ports: A=5'00000, B={ 2'01 \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4721_Y
      New ports: A=4'0000, B={ 1'1 \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4721_Y [3:0]
      New connections: $techmap\soc.cpu.$procmux$4721_Y [4] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4739:
      Old ports: A=5'00000, B={ 2'01 \soc.cpu.mem_rdata_latched [4:2] }, Y=$techmap\soc.cpu.$procmux$4739_Y
      New ports: A=4'0000, B={ 1'1 \soc.cpu.mem_rdata_latched [4:2] }, Y=$techmap\soc.cpu.$procmux$4739_Y [3:0]
      New connections: $techmap\soc.cpu.$procmux$4739_Y [4] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$5356:
      Old ports: A={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, B={ \soc.cpu.mem_rdata_latched [6] 4'0000 }, Y=$techmap\soc.cpu.$procmux$5356_Y
      New ports: A={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, B={ \soc.cpu.mem_rdata_latched [6] 1'0 }, Y={ $techmap\soc.cpu.$procmux$5356_Y [4] $techmap\soc.cpu.$procmux$5356_Y [0] }
      New connections: $techmap\soc.cpu.$procmux$5356_Y [3:1] = { $techmap\soc.cpu.$procmux$5356_Y [0] $techmap\soc.cpu.$procmux$5356_Y [0] $techmap\soc.cpu.$procmux$5356_Y [0] }
    Consolidated identical input bits for $pmux cell $techmap\soc.cpu.$procmux$5523:
      Old ports: A=\soc.cpu.reg_op2, B={ \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] }, Y=\soc.cpu.mem_la_wdata
      New ports: A=\soc.cpu.reg_op2 [31:8], B={ \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] }, Y=\soc.cpu.mem_la_wdata [31:8]
      New connections: \soc.cpu.mem_la_wdata [7:0] = \soc.cpu.reg_op2 [7:0]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:1312$2619:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:460:run$6699 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:460:run$6699 [2:1]
      New connections: $auto$wreduce.cc:460:run$6699 [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:1542$2692:
      Old ports: A=2'00, B=2'10, Y=$techmap\soc.cpu.$ternary$picorv32.v:1542$2692_Y
      New ports: A=1'0, B=1'1, Y=$techmap\soc.cpu.$ternary$picorv32.v:1542$2692_Y [1]
      New connections: $techmap\soc.cpu.$ternary$picorv32.v:1542$2692_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:1547$2694:
      Old ports: A=3'011, B=3'100, Y=$auto$wreduce.cc:460:run$6700 [2:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:460:run$6700 [2] $auto$wreduce.cc:460:run$6700 [0] }
      New connections: $auto$wreduce.cc:460:run$6700 [1] = $auto$wreduce.cc:460:run$6700 [0]
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:1553$2699:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:460:run$6701 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:460:run$6701 [2:1]
      New connections: $auto$wreduce.cc:460:run$6701 [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:382$2231:
      Old ports: A={ \soc.cpu.reg_op1 [31:2] 2'00 }, B={ $techmap\soc.cpu.$add$picorv32.v:382$2230_Y 2'00 }, Y=\soc.cpu.mem_la_addr
      New ports: A=\soc.cpu.reg_op1 [31:2], B=$techmap\soc.cpu.$add$picorv32.v:382$2230_Y, Y=\soc.cpu.mem_la_addr [31:2]
      New connections: \soc.cpu.mem_la_addr [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:411$2246:
      Old ports: A=4'0011, B=4'1100, Y=$techmap\soc.cpu.$ternary$picorv32.v:411$2246_Y
      New ports: A=2'01, B=2'10, Y={ $techmap\soc.cpu.$ternary$picorv32.v:411$2246_Y [2] $techmap\soc.cpu.$ternary$picorv32.v:411$2246_Y [0] }
      New connections: { $techmap\soc.cpu.$ternary$picorv32.v:411$2246_Y [3] $techmap\soc.cpu.$ternary$picorv32.v:411$2246_Y [1] } = { $techmap\soc.cpu.$ternary$picorv32.v:411$2246_Y [2] $techmap\soc.cpu.$ternary$picorv32.v:411$2246_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:491$2262:
      Old ports: A=6'000000, B=6'100000, Y=$auto$wreduce.cc:460:run$6702 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$6702 [5]
      New connections: $auto$wreduce.cc:460:run$6702 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$ternary$picorv32.v:617$2306:
      Old ports: A=2'11, B=2'00, Y=$auto$wreduce.cc:460:run$6703 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:460:run$6703 [0]
      New connections: $auto$wreduce.cc:460:run$6703 [1] = $auto$wreduce.cc:460:run$6703 [0]
    Consolidated identical input bits for $mux cell $techmap\soc.simpleuart.$ternary$simpleuart.v:53$124:
      Old ports: A=32'11111111111111111111111111111111, B={ 24'000000000000000000000000 \soc.simpleuart.recv_buf_data }, Y=\soc.simpleuart_reg_dat_do
      New ports: A=9'111111111, B={ 1'0 \soc.simpleuart.recv_buf_data }, Y=\soc.simpleuart_reg_dat_do [8:0]
      New connections: \soc.simpleuart_reg_dat_do [31:9] = { \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] }
    Consolidated identical input bits for $pmux cell $techmap\soc.spimemio.$procmux$6262:
      Old ports: A=8'11101101, B=24'111010111011101100000011, Y=$techmap\soc.spimemio.$procmux$6262_Y
      New ports: A=5'10110, B=15'101010110100001, Y={ $techmap\soc.spimemio.$procmux$6262_Y [6] $techmap\soc.spimemio.$procmux$6262_Y [4:1] }
      New connections: { $techmap\soc.spimemio.$procmux$6262_Y [7] $techmap\soc.spimemio.$procmux$6262_Y [5] $techmap\soc.spimemio.$procmux$6262_Y [0] } = { $techmap\soc.spimemio.$procmux$6262_Y [3] $techmap\soc.spimemio.$procmux$6262_Y [3] 1'1 }
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.$ternary$spimemio.v:316$69:
      Old ports: A=7'1111111, B=7'0100101, Y=$auto$wreduce.cc:460:run$6710 [6:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:460:run$6710 [1]
      New connections: { $auto$wreduce.cc:460:run$6710 [6:2] $auto$wreduce.cc:460:run$6710 [0] } = { $auto$wreduce.cc:460:run$6710 [1] 1'1 $auto$wreduce.cc:460:run$6710 [1] $auto$wreduce.cc:460:run$6710 [1] 2'11 }
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.xfer.$procmux$5757:
      Old ports: A=\soc.spimemio.xfer.count, B={ $techmap\soc.spimemio.xfer.$sub$spimemio.v:524$103_Y [3:1] \soc.spimemio.xfer.count [0] }, Y=$techmap\soc.spimemio.xfer.$5\next_count[3:0]
      New ports: A=\soc.spimemio.xfer.count [3:1], B=$techmap\soc.spimemio.xfer.$sub$spimemio.v:524$103_Y [3:1], Y=$techmap\soc.spimemio.xfer.$5\next_count[3:0] [3:1]
      New connections: $techmap\soc.spimemio.xfer.$5\next_count[3:0] [0] = \soc.spimemio.xfer.count [0]
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.xfer.$procmux$5798:
      Old ports: A=\soc.spimemio.xfer.count, B={ $techmap\soc.spimemio.xfer.$sub$spimemio.v:491$91_Y [3:2] \soc.spimemio.xfer.count [1:0] }, Y=$techmap\soc.spimemio.xfer.$4\next_count[3:0]
      New ports: A=\soc.spimemio.xfer.count [3:2], B=$techmap\soc.spimemio.xfer.$sub$spimemio.v:491$91_Y [3:2], Y=$techmap\soc.spimemio.xfer.$4\next_count[3:0] [3:2]
      New connections: $techmap\soc.spimemio.xfer.$4\next_count[3:0] [1:0] = \soc.spimemio.xfer.count [1:0]
  Optimizing cells in module \icebreaker.
    Consolidated identical input bits for $mux cell $techmap\soc.$ternary$picosoc.v:130$1434:
      Old ports: A=0, B=\soc.simpleuart_reg_dat_do, Y=$techmap\soc.$ternary$picosoc.v:130$1434_Y
      New ports: A=9'000000000, B=\soc.simpleuart_reg_dat_do [8:0], Y=$techmap\soc.$ternary$picosoc.v:130$1434_Y [8:0]
      New connections: $techmap\soc.$ternary$picosoc.v:130$1434_Y [31:9] = { $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] $techmap\soc.$ternary$picosoc.v:130$1434_Y [8] }
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4723:
      Old ports: A=$techmap\soc.cpu.$procmux$4721_Y, B={ 2'01 \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4723_Y
      New ports: A=$techmap\soc.cpu.$procmux$4721_Y [3:0], B={ 1'1 \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4723_Y [3:0]
      New connections: $techmap\soc.cpu.$procmux$4723_Y [4] = 1'0
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.$procmux$6252:
      Old ports: A={ 1'1 $auto$wreduce.cc:460:run$6710 [6:0] }, B={ 4'0000 \soc.spimemio.config_dummy }, Y=$techmap\soc.spimemio.$procmux$6252_Y
      New ports: A={ 1'1 $auto$wreduce.cc:460:run$6710 [1] $auto$wreduce.cc:460:run$6710 [1] 1'1 $auto$wreduce.cc:460:run$6710 [1] 1'1 }, B={ 2'00 \soc.spimemio.config_dummy }, Y=$techmap\soc.spimemio.$procmux$6252_Y [5:0]
      New connections: $techmap\soc.spimemio.$procmux$6252_Y [7:6] = $techmap\soc.spimemio.$procmux$6252_Y [5:4]
    Consolidated identical input bits for $mux cell $techmap\soc.spimemio.xfer.$procmux$5874:
      Old ports: A=\soc.spimemio.xfer.count, B=$techmap\soc.spimemio.xfer.$5\next_count[3:0], Y=$techmap\soc.spimemio.xfer.$procmux$5874_Y
      New ports: A=\soc.spimemio.xfer.count [3:1], B=$techmap\soc.spimemio.xfer.$5\next_count[3:0] [3:1], Y=$techmap\soc.spimemio.xfer.$procmux$5874_Y [3:1]
      New connections: $techmap\soc.spimemio.xfer.$procmux$5874_Y [0] = \soc.spimemio.xfer.count [0]
  Optimizing cells in module \icebreaker.
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4725:
      Old ports: A=$techmap\soc.cpu.$procmux$4723_Y, B={ 2'01 \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4725_Y
      New ports: A=$techmap\soc.cpu.$procmux$4723_Y [3:0], B={ 1'1 \soc.cpu.mem_rdata_latched [9:7] }, Y=$techmap\soc.cpu.$procmux$4725_Y [3:0]
      New connections: $techmap\soc.cpu.$procmux$4725_Y [4] = 1'0
  Optimizing cells in module \icebreaker.
Performed a total of 31 changes.

7.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\icebreaker'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

7.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

7.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

7.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.

7.29.9. Rerunning OPT passes. (Maybe there is more to do..)

7.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \icebreaker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~245 debug messages>

7.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \icebreaker.
    Consolidated identical input bits for $mux cell $techmap\soc.cpu.$procmux$4253:
      Old ports: A=$techmap\soc.cpu.$3\current_pc[31:0], B=$techmap\soc.cpu.$add$picorv32.v:1553$2700_Y, Y=$techmap\soc.cpu.$procmux$4253_Y
      New ports: A=$techmap\soc.cpu.$3\current_pc[31:0] [31:1], B=$techmap\soc.cpu.$add$picorv32.v:1553$2700_Y [31:1], Y=$techmap\soc.cpu.$procmux$4253_Y [31:1]
      New connections: $techmap\soc.cpu.$procmux$4253_Y [0] = $techmap\soc.cpu.$3\current_pc[31:0] [0]
  Optimizing cells in module \icebreaker.
Performed a total of 1 changes.

7.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\icebreaker'.
Removed a total of 0 cells.

7.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

7.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..

7.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.

7.29.16. Rerunning OPT passes. (Maybe there is more to do..)

7.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \icebreaker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~245 debug messages>

7.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \icebreaker.
Performed a total of 0 changes.

7.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\icebreaker'.
Removed a total of 0 cells.

7.29.20. Executing OPT_RMDFF pass (remove dff with constant values).

7.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..

7.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.

7.29.23. Finished OPT passes. (There is nothing left to do.)

7.30. Executing ICE40_WRAPCARRY pass (wrap carries).

7.31. Executing TECHMAP pass (map to technology primitives).

7.31.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

7.31.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

7.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=31\B_WIDTH=31\Y_WIDTH=31 for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=18\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_pmux\WIDTH=24\S_WIDTH=2 for cells of type $pmux.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$9b74a473ccd678a23e1df4cc12019cbbece20051\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=1\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=1\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=26\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=1\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=22\Y_WIDTH=23 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=8 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
No more expansions possible.
<suppressed ~3842 debug messages>

7.32. Executing OPT pass (performing simple optimizations).

7.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.
<suppressed ~3623 debug messages>

7.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\icebreaker'.
<suppressed ~6420 debug messages>
Removed a total of 2140 cells.

7.32.3. Executing OPT_RMDFF pass (remove dff with constant values).

7.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..
Removed 474 unused cells and 4189 unused wires.
<suppressed ~475 debug messages>

7.32.5. Finished fast OPT passes.

7.33. Executing ICE40_OPT pass (performing simple optimizations).

7.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) icebreaker.$auto$alumacc.cc:485:replace_alu$6749.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6749.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) icebreaker.$auto$alumacc.cc:485:replace_alu$6758.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6758.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) icebreaker.$auto$alumacc.cc:485:replace_alu$6769.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) icebreaker.$auto$alumacc.cc:485:replace_alu$6774.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6758.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) icebreaker.$auto$alumacc.cc:485:replace_alu$6793.slice[0].carry: CO=\soc.cpu.count_cycle [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) icebreaker.$auto$alumacc.cc:485:replace_alu$6799.slice[0].carry: CO=\soc.cpu.count_instr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) icebreaker.$auto$alumacc.cc:485:replace_alu$6837.slice[0].carry: CO=\soc.cpu.timer [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) icebreaker.$auto$alumacc.cc:485:replace_alu$6840.slice[0].carry: CO=\soc.cpu.reg_sh [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) icebreaker.$auto$alumacc.cc:485:replace_alu$6843.slice[0].carry: CO=\soc.cpu.reg_sh [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) icebreaker.$auto$alumacc.cc:485:replace_alu$6846.slice[0].carry: CO=\soc.simpleuart.send_divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) icebreaker.$auto$alumacc.cc:485:replace_alu$6849.slice[0].carry: CO=\soc.simpleuart.recv_divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) icebreaker.$auto$alumacc.cc:485:replace_alu$6852.slice[0].carry: CO=\soc.simpleuart.recv_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) icebreaker.$auto$alumacc.cc:485:replace_alu$6855.slice[0].carry: CO=\soc.simpleuart.send_bitcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) icebreaker.$auto$alumacc.cc:485:replace_alu$6858.slice[0].carry: CO=\soc.spimemio.rd_addr [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) icebreaker.$auto$alumacc.cc:485:replace_alu$6858.slice[22].carry: CO=1'0

7.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.
<suppressed ~2 debug messages>

7.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\icebreaker'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

7.33.4. Executing OPT_RMDFF pass (remove dff with constant values).

7.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..
Removed 3 unused cells and 1 unused wires.
<suppressed ~4 debug messages>

7.33.6. Rerunning OPT passes. (Removed registers in this run.)

7.33.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) icebreaker.$auto$alumacc.cc:485:replace_alu$6769.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$6758.BB [25]

7.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.

7.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\icebreaker'.
Removed a total of 0 cells.

7.33.10. Executing OPT_RMDFF pass (remove dff with constant values).

7.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

7.33.12. Rerunning OPT passes. (Removed registers in this run.)

7.33.13. Running ICE40 specific optimizations.

7.33.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.

7.33.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\icebreaker'.
Removed a total of 0 cells.

7.33.16. Executing OPT_RMDFF pass (remove dff with constant values).

7.33.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..

7.33.18. Finished OPT passes. (There is nothing left to do.)

7.34. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

7.35. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module icebreaker:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11453 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [0] -> \soc.cpu.mem_rdata_q [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11454 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [1] -> \soc.cpu.mem_rdata_q [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11455 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [2] -> \soc.cpu.mem_rdata_q [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11456 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [3] -> \soc.cpu.mem_rdata_q [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11457 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [4] -> \soc.cpu.mem_rdata_q [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11458 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [5] -> \soc.cpu.mem_rdata_q [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11459 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_rdata_q[31:0] [6] -> \soc.cpu.mem_rdata_q [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11485 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [0] -> \soc.cpu.mem_16bit_buffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11486 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [1] -> \soc.cpu.mem_16bit_buffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11487 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [2] -> \soc.cpu.mem_16bit_buffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11488 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [3] -> \soc.cpu.mem_16bit_buffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11489 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [4] -> \soc.cpu.mem_16bit_buffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11490 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [5] -> \soc.cpu.mem_16bit_buffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11491 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [6] -> \soc.cpu.mem_16bit_buffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11492 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [7] -> \soc.cpu.mem_16bit_buffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11493 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [8] -> \soc.cpu.mem_16bit_buffer [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11494 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [9] -> \soc.cpu.mem_16bit_buffer [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11495 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [10] -> \soc.cpu.mem_16bit_buffer [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11496 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [11] -> \soc.cpu.mem_16bit_buffer [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11497 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [12] -> \soc.cpu.mem_16bit_buffer [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11498 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [13] -> \soc.cpu.mem_16bit_buffer [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11499 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [14] -> \soc.cpu.mem_16bit_buffer [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11500 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_16bit_buffer[15:0] [15] -> \soc.cpu.mem_16bit_buffer [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11501 to $_DFFE_PP_ for $techmap\soc.cpu.$0\prefetched_high_word[0:0] -> \soc.cpu.prefetched_high_word.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11502 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_la_secondword[0:0] -> \soc.cpu.mem_la_secondword.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11503 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_state[1:0] [0] -> \soc.cpu.mem_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11504 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_state[1:0] [1] -> \soc.cpu.mem_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11505 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wstrb[3:0] [0] -> \soc.cpu.mem_wstrb [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11506 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wstrb[3:0] [1] -> \soc.cpu.mem_wstrb [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11507 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wstrb[3:0] [2] -> \soc.cpu.mem_wstrb [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11508 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wstrb[3:0] [3] -> \soc.cpu.mem_wstrb [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11509 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [0] -> \soc.cpu.mem_wdata [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11510 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [1] -> \soc.cpu.mem_wdata [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11511 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [2] -> \soc.cpu.mem_wdata [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11512 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [3] -> \soc.cpu.mem_wdata [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11513 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [4] -> \soc.cpu.mem_wdata [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11514 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [5] -> \soc.cpu.mem_wdata [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11515 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [6] -> \soc.cpu.mem_wdata [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11516 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [7] -> \soc.cpu.mem_wdata [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11517 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [8] -> \soc.cpu.mem_wdata [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11518 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [9] -> \soc.cpu.mem_wdata [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11519 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [10] -> \soc.cpu.mem_wdata [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11520 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [11] -> \soc.cpu.mem_wdata [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11521 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [12] -> \soc.cpu.mem_wdata [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11522 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [13] -> \soc.cpu.mem_wdata [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11523 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [14] -> \soc.cpu.mem_wdata [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11524 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [15] -> \soc.cpu.mem_wdata [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11525 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [16] -> \soc.cpu.mem_wdata [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11526 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [17] -> \soc.cpu.mem_wdata [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11527 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [18] -> \soc.cpu.mem_wdata [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11528 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [19] -> \soc.cpu.mem_wdata [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11529 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [20] -> \soc.cpu.mem_wdata [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11530 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [21] -> \soc.cpu.mem_wdata [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11531 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [22] -> \soc.cpu.mem_wdata [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11532 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [23] -> \soc.cpu.mem_wdata [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11533 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [24] -> \soc.cpu.mem_wdata [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11534 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [25] -> \soc.cpu.mem_wdata [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11535 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [26] -> \soc.cpu.mem_wdata [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11536 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [27] -> \soc.cpu.mem_wdata [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11537 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [28] -> \soc.cpu.mem_wdata [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11538 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [29] -> \soc.cpu.mem_wdata [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11539 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [30] -> \soc.cpu.mem_wdata [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11540 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_wdata[31:0] [31] -> \soc.cpu.mem_wdata [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11541 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [0] -> \soc.cpu.mem_addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11542 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [1] -> \soc.cpu.mem_addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11543 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [2] -> \soc.cpu.mem_addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11544 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [3] -> \soc.cpu.mem_addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11545 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [4] -> \soc.cpu.mem_addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11546 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [5] -> \soc.cpu.mem_addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11547 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [6] -> \soc.cpu.mem_addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11548 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [7] -> \soc.cpu.mem_addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11549 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [8] -> \soc.cpu.mem_addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11550 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [9] -> \soc.cpu.mem_addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11551 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [10] -> \soc.cpu.mem_addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11552 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [11] -> \soc.cpu.mem_addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11553 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [12] -> \soc.cpu.mem_addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11554 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [13] -> \soc.cpu.mem_addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11555 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [14] -> \soc.cpu.mem_addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11556 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [15] -> \soc.cpu.mem_addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11557 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [16] -> \soc.cpu.mem_addr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11558 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [17] -> \soc.cpu.mem_addr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11559 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [18] -> \soc.cpu.mem_addr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11560 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [19] -> \soc.cpu.mem_addr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11561 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [20] -> \soc.cpu.mem_addr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11562 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [21] -> \soc.cpu.mem_addr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11563 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [22] -> \soc.cpu.mem_addr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11564 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [23] -> \soc.cpu.mem_addr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11565 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [24] -> \soc.cpu.mem_addr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11566 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [25] -> \soc.cpu.mem_addr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11567 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [26] -> \soc.cpu.mem_addr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11568 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [27] -> \soc.cpu.mem_addr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11569 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [28] -> \soc.cpu.mem_addr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11570 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [29] -> \soc.cpu.mem_addr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11571 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [30] -> \soc.cpu.mem_addr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11572 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_addr[31:0] [31] -> \soc.cpu.mem_addr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11573 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_valid[0:0] -> \soc.cpu.mem_valid.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11575 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_alu_reg_reg[0:0] -> \soc.cpu.is_alu_reg_reg.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11576 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_alu_reg_imm[0:0] -> \soc.cpu.is_alu_reg_imm.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11577 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_beq_bne_blt_bge_bltu_bgeu[0:0] -> \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11580 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_sll_srl_sra[0:0] -> \soc.cpu.is_sll_srl_sra.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11581 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_sb_sh_sw[0:0] -> \soc.cpu.is_sb_sh_sw.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11582 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_jalr_addi_slti_sltiu_xori_ori_andi[0:0] -> \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11583 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_slli_srli_srai[0:0] -> \soc.cpu.is_slli_srli_srai.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11584 to $_DFFE_PP_ for $techmap\soc.cpu.$0\is_lb_lh_lw_lbu_lhu[0:0] -> \soc.cpu.is_lb_lh_lw_lbu_lhu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11586 to $_DFFE_PP_ for $techmap\soc.cpu.$0\compressed_instr[0:0] -> \soc.cpu.compressed_instr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11587 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [0] -> \soc.cpu.decoded_imm_j [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11588 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [1] -> \soc.cpu.decoded_imm_j [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11589 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [2] -> \soc.cpu.decoded_imm_j [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11590 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [3] -> \soc.cpu.decoded_imm_j [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11591 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [4] -> \soc.cpu.decoded_imm_j [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11592 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [5] -> \soc.cpu.decoded_imm_j [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11593 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [6] -> \soc.cpu.decoded_imm_j [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11594 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [7] -> \soc.cpu.decoded_imm_j [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11595 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [8] -> \soc.cpu.decoded_imm_j [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11596 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [9] -> \soc.cpu.decoded_imm_j [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11597 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [10] -> \soc.cpu.decoded_imm_j [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11598 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [11] -> \soc.cpu.decoded_imm_j [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11599 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [12] -> \soc.cpu.decoded_imm_j [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11600 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [13] -> \soc.cpu.decoded_imm_j [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11601 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [14] -> \soc.cpu.decoded_imm_j [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11602 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [15] -> \soc.cpu.decoded_imm_j [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11603 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [16] -> \soc.cpu.decoded_imm_j [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11604 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [17] -> \soc.cpu.decoded_imm_j [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11605 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [18] -> \soc.cpu.decoded_imm_j [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11606 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [19] -> \soc.cpu.decoded_imm_j [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11607 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [20] -> \soc.cpu.decoded_imm_j [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11608 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [21] -> \soc.cpu.decoded_imm_j [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11609 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [22] -> \soc.cpu.decoded_imm_j [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11610 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [23] -> \soc.cpu.decoded_imm_j [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11611 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [24] -> \soc.cpu.decoded_imm_j [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11612 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [25] -> \soc.cpu.decoded_imm_j [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11613 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [26] -> \soc.cpu.decoded_imm_j [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11614 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [27] -> \soc.cpu.decoded_imm_j [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11615 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [28] -> \soc.cpu.decoded_imm_j [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11616 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [29] -> \soc.cpu.decoded_imm_j [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11617 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [30] -> \soc.cpu.decoded_imm_j [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11618 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm_j[31:0] [31] -> \soc.cpu.decoded_imm_j [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11619 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [0] -> \soc.cpu.decoded_imm [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11620 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [1] -> \soc.cpu.decoded_imm [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11621 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [2] -> \soc.cpu.decoded_imm [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11622 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [3] -> \soc.cpu.decoded_imm [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11623 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [4] -> \soc.cpu.decoded_imm [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11624 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [5] -> \soc.cpu.decoded_imm [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11625 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [6] -> \soc.cpu.decoded_imm [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11626 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [7] -> \soc.cpu.decoded_imm [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11627 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [8] -> \soc.cpu.decoded_imm [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11628 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [9] -> \soc.cpu.decoded_imm [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11629 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [10] -> \soc.cpu.decoded_imm [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11630 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [11] -> \soc.cpu.decoded_imm [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11631 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [12] -> \soc.cpu.decoded_imm [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11632 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [13] -> \soc.cpu.decoded_imm [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11633 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [14] -> \soc.cpu.decoded_imm [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11634 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [15] -> \soc.cpu.decoded_imm [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11635 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [16] -> \soc.cpu.decoded_imm [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11636 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [17] -> \soc.cpu.decoded_imm [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11637 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [18] -> \soc.cpu.decoded_imm [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11638 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [19] -> \soc.cpu.decoded_imm [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11639 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [20] -> \soc.cpu.decoded_imm [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11640 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [21] -> \soc.cpu.decoded_imm [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11641 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [22] -> \soc.cpu.decoded_imm [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11642 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [23] -> \soc.cpu.decoded_imm [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11643 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [24] -> \soc.cpu.decoded_imm [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11644 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [25] -> \soc.cpu.decoded_imm [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11645 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [26] -> \soc.cpu.decoded_imm [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11646 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [27] -> \soc.cpu.decoded_imm [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11647 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [28] -> \soc.cpu.decoded_imm [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11648 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [29] -> \soc.cpu.decoded_imm [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11649 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [30] -> \soc.cpu.decoded_imm [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11650 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_imm[31:0] [31] -> \soc.cpu.decoded_imm [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11661 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[4:0] [0] -> \soc.cpu.decoded_rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11662 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[4:0] [1] -> \soc.cpu.decoded_rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11663 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[4:0] [2] -> \soc.cpu.decoded_rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11664 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[4:0] [3] -> \soc.cpu.decoded_rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11665 to $_DFFE_PP_ for $techmap\soc.cpu.$0\decoded_rd[4:0] [4] -> \soc.cpu.decoded_rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11666 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_timer[0:0] -> \soc.cpu.instr_timer.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11667 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_waitirq[0:0] -> \soc.cpu.instr_waitirq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11668 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_maskirq[0:0] -> \soc.cpu.instr_maskirq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11669 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_retirq[0:0] -> \soc.cpu.instr_retirq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11671 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_rdinstrh[0:0] -> \soc.cpu.instr_rdinstrh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11672 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_rdinstr[0:0] -> \soc.cpu.instr_rdinstr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11673 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_rdcycleh[0:0] -> \soc.cpu.instr_rdcycleh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11674 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_rdcycle[0:0] -> \soc.cpu.instr_rdcycle.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11675 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_and[0:0] -> \soc.cpu.instr_and.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11676 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_or[0:0] -> \soc.cpu.instr_or.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11677 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sra[0:0] -> \soc.cpu.instr_sra.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11678 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_srl[0:0] -> \soc.cpu.instr_srl.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11679 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_xor[0:0] -> \soc.cpu.instr_xor.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11680 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sltu[0:0] -> \soc.cpu.instr_sltu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11681 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_slt[0:0] -> \soc.cpu.instr_slt.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11682 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sll[0:0] -> \soc.cpu.instr_sll.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11683 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sub[0:0] -> \soc.cpu.instr_sub.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11684 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_add[0:0] -> \soc.cpu.instr_add.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11685 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_srai[0:0] -> \soc.cpu.instr_srai.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11686 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_srli[0:0] -> \soc.cpu.instr_srli.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11687 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_slli[0:0] -> \soc.cpu.instr_slli.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11688 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_andi[0:0] -> \soc.cpu.instr_andi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11689 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_ori[0:0] -> \soc.cpu.instr_ori.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11690 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_xori[0:0] -> \soc.cpu.instr_xori.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11691 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sltiu[0:0] -> \soc.cpu.instr_sltiu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11692 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_slti[0:0] -> \soc.cpu.instr_slti.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11693 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_addi[0:0] -> \soc.cpu.instr_addi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11694 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sw[0:0] -> \soc.cpu.instr_sw.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11695 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sh[0:0] -> \soc.cpu.instr_sh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11696 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_sb[0:0] -> \soc.cpu.instr_sb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11697 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lhu[0:0] -> \soc.cpu.instr_lhu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11698 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lbu[0:0] -> \soc.cpu.instr_lbu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11699 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lw[0:0] -> \soc.cpu.instr_lw.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11700 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lh[0:0] -> \soc.cpu.instr_lh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11701 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lb[0:0] -> \soc.cpu.instr_lb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11702 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_bgeu[0:0] -> \soc.cpu.instr_bgeu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11703 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_bltu[0:0] -> \soc.cpu.instr_bltu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11704 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_bge[0:0] -> \soc.cpu.instr_bge.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11705 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_blt[0:0] -> \soc.cpu.instr_blt.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11706 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_bne[0:0] -> \soc.cpu.instr_bne.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11707 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_beq[0:0] -> \soc.cpu.instr_beq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11708 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_jalr[0:0] -> \soc.cpu.instr_jalr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11709 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_jal[0:0] -> \soc.cpu.instr_jal.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11710 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_auipc[0:0] -> \soc.cpu.instr_auipc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11711 to $_DFFE_PP_ for $techmap\soc.cpu.$0\instr_lui[0:0] -> \soc.cpu.instr_lui.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11747 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[4:0] [0] -> \soc.cpu.latched_rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11748 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[4:0] [1] -> \soc.cpu.latched_rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11749 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[4:0] [2] -> \soc.cpu.latched_rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11750 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[4:0] [3] -> \soc.cpu.latched_rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11751 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_rd[4:0] [4] -> \soc.cpu.latched_rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11752 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_is_lb[0:0] -> \soc.cpu.latched_is_lb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11753 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_is_lh[0:0] -> \soc.cpu.latched_is_lh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11754 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_compr[0:0] -> \soc.cpu.latched_compr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11755 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_branch[0:0] -> \soc.cpu.latched_branch.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11756 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_stalu[0:0] -> \soc.cpu.latched_stalu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11757 to $_DFFE_PP_ for $techmap\soc.cpu.$0\latched_store[0:0] -> \soc.cpu.latched_store.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11758 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_state[1:0] [0] -> \soc.cpu.irq_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11759 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_state[1:0] [1] -> \soc.cpu.irq_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11780 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_do_wdata[0:0] -> \soc.cpu.mem_do_wdata.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11781 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_do_rdata[0:0] -> \soc.cpu.mem_do_rdata.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11782 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_do_rinst[0:0] -> \soc.cpu.mem_do_rinst.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11783 to $_DFFE_PP_ for $techmap\soc.cpu.$0\mem_do_prefetch[0:0] -> \soc.cpu.mem_do_prefetch.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11817 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [1] -> \soc.cpu.irq_pending [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11819 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [3] -> \soc.cpu.irq_pending [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11820 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [4] -> \soc.cpu.irq_pending [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11821 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [5] -> \soc.cpu.irq_pending [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11822 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [6] -> \soc.cpu.irq_pending [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11823 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [7] -> \soc.cpu.irq_pending [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11824 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [8] -> \soc.cpu.irq_pending [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11825 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [9] -> \soc.cpu.irq_pending [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11826 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [10] -> \soc.cpu.irq_pending [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11827 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [11] -> \soc.cpu.irq_pending [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11828 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [12] -> \soc.cpu.irq_pending [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11829 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [13] -> \soc.cpu.irq_pending [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11830 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [14] -> \soc.cpu.irq_pending [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11831 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [15] -> \soc.cpu.irq_pending [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11832 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [16] -> \soc.cpu.irq_pending [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11833 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [17] -> \soc.cpu.irq_pending [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11834 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [18] -> \soc.cpu.irq_pending [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11835 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [19] -> \soc.cpu.irq_pending [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11836 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [20] -> \soc.cpu.irq_pending [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11837 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [21] -> \soc.cpu.irq_pending [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11838 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [22] -> \soc.cpu.irq_pending [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11839 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [23] -> \soc.cpu.irq_pending [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11840 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [24] -> \soc.cpu.irq_pending [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11841 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [25] -> \soc.cpu.irq_pending [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11842 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [26] -> \soc.cpu.irq_pending [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11843 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [27] -> \soc.cpu.irq_pending [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11844 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [28] -> \soc.cpu.irq_pending [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11845 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [29] -> \soc.cpu.irq_pending [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11846 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [30] -> \soc.cpu.irq_pending [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11847 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_pending[31:0] [31] -> \soc.cpu.irq_pending [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11848 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [0] -> \soc.cpu.irq_mask [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11849 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [1] -> \soc.cpu.irq_mask [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11850 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [2] -> \soc.cpu.irq_mask [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11851 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [3] -> \soc.cpu.irq_mask [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11852 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [4] -> \soc.cpu.irq_mask [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11853 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [5] -> \soc.cpu.irq_mask [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11854 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [6] -> \soc.cpu.irq_mask [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11855 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [7] -> \soc.cpu.irq_mask [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11856 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [8] -> \soc.cpu.irq_mask [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11857 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [9] -> \soc.cpu.irq_mask [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11858 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [10] -> \soc.cpu.irq_mask [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11859 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [11] -> \soc.cpu.irq_mask [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11860 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [12] -> \soc.cpu.irq_mask [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11861 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [13] -> \soc.cpu.irq_mask [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11862 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [14] -> \soc.cpu.irq_mask [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11863 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [15] -> \soc.cpu.irq_mask [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11864 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [16] -> \soc.cpu.irq_mask [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11865 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [17] -> \soc.cpu.irq_mask [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11866 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [18] -> \soc.cpu.irq_mask [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11867 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [19] -> \soc.cpu.irq_mask [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11868 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [20] -> \soc.cpu.irq_mask [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11869 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [21] -> \soc.cpu.irq_mask [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11870 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [22] -> \soc.cpu.irq_mask [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11871 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [23] -> \soc.cpu.irq_mask [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11872 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [24] -> \soc.cpu.irq_mask [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11873 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [25] -> \soc.cpu.irq_mask [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11874 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [26] -> \soc.cpu.irq_mask [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11875 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [27] -> \soc.cpu.irq_mask [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11876 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [28] -> \soc.cpu.irq_mask [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11877 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [29] -> \soc.cpu.irq_mask [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11878 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [30] -> \soc.cpu.irq_mask [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11879 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_mask[31:0] [31] -> \soc.cpu.irq_mask [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11880 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_active[0:0] -> \soc.cpu.irq_active.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11881 to $_DFFE_PP_ for $techmap\soc.cpu.$0\irq_delay[0:0] -> \soc.cpu.irq_delay.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11882 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_sh[4:0] [0] -> \soc.cpu.reg_sh [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11883 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_sh[4:0] [1] -> \soc.cpu.reg_sh [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11919 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [0] -> \soc.cpu.reg_op2 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11920 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [1] -> \soc.cpu.reg_op2 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11921 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [2] -> \soc.cpu.reg_op2 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11922 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [3] -> \soc.cpu.reg_op2 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11923 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [4] -> \soc.cpu.reg_op2 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11924 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [5] -> \soc.cpu.reg_op2 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11925 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [6] -> \soc.cpu.reg_op2 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11926 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [7] -> \soc.cpu.reg_op2 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11927 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [8] -> \soc.cpu.reg_op2 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11928 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [9] -> \soc.cpu.reg_op2 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11929 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [10] -> \soc.cpu.reg_op2 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11930 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [11] -> \soc.cpu.reg_op2 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11931 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [12] -> \soc.cpu.reg_op2 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11932 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [13] -> \soc.cpu.reg_op2 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11933 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [14] -> \soc.cpu.reg_op2 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11934 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [15] -> \soc.cpu.reg_op2 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11935 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [16] -> \soc.cpu.reg_op2 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11936 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [17] -> \soc.cpu.reg_op2 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11937 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [18] -> \soc.cpu.reg_op2 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11938 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [19] -> \soc.cpu.reg_op2 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11939 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [20] -> \soc.cpu.reg_op2 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11940 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [21] -> \soc.cpu.reg_op2 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11941 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [22] -> \soc.cpu.reg_op2 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11942 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [23] -> \soc.cpu.reg_op2 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11943 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [24] -> \soc.cpu.reg_op2 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11944 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [25] -> \soc.cpu.reg_op2 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11945 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [26] -> \soc.cpu.reg_op2 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11946 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [27] -> \soc.cpu.reg_op2 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11947 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [28] -> \soc.cpu.reg_op2 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11948 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [29] -> \soc.cpu.reg_op2 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11949 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [30] -> \soc.cpu.reg_op2 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11950 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op2[31:0] [31] -> \soc.cpu.reg_op2 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11951 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [0] -> \soc.cpu.reg_op1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11952 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [1] -> \soc.cpu.reg_op1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11953 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [2] -> \soc.cpu.reg_op1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11954 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [3] -> \soc.cpu.reg_op1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11955 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [4] -> \soc.cpu.reg_op1 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11956 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [5] -> \soc.cpu.reg_op1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11957 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [6] -> \soc.cpu.reg_op1 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11958 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [7] -> \soc.cpu.reg_op1 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11959 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [8] -> \soc.cpu.reg_op1 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11960 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [9] -> \soc.cpu.reg_op1 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11961 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [10] -> \soc.cpu.reg_op1 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11962 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [11] -> \soc.cpu.reg_op1 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11963 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [12] -> \soc.cpu.reg_op1 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11964 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [13] -> \soc.cpu.reg_op1 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11965 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [14] -> \soc.cpu.reg_op1 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11966 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [15] -> \soc.cpu.reg_op1 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11967 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [16] -> \soc.cpu.reg_op1 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11968 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [17] -> \soc.cpu.reg_op1 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11969 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [18] -> \soc.cpu.reg_op1 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11970 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [19] -> \soc.cpu.reg_op1 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11971 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [20] -> \soc.cpu.reg_op1 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11972 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [21] -> \soc.cpu.reg_op1 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11973 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [22] -> \soc.cpu.reg_op1 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11974 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [23] -> \soc.cpu.reg_op1 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11975 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [24] -> \soc.cpu.reg_op1 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11976 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [25] -> \soc.cpu.reg_op1 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11977 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [26] -> \soc.cpu.reg_op1 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11978 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [27] -> \soc.cpu.reg_op1 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11979 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [28] -> \soc.cpu.reg_op1 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11980 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [29] -> \soc.cpu.reg_op1 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11981 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [30] -> \soc.cpu.reg_op1 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11982 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_op1[31:0] [31] -> \soc.cpu.reg_op1 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11983 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [0] -> \soc.cpu.reg_next_pc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11984 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [1] -> \soc.cpu.reg_next_pc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11985 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [2] -> \soc.cpu.reg_next_pc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11986 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [3] -> \soc.cpu.reg_next_pc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11987 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [4] -> \soc.cpu.reg_next_pc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11988 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [5] -> \soc.cpu.reg_next_pc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11989 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [6] -> \soc.cpu.reg_next_pc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11990 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [7] -> \soc.cpu.reg_next_pc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11991 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [8] -> \soc.cpu.reg_next_pc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11992 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [9] -> \soc.cpu.reg_next_pc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11993 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [10] -> \soc.cpu.reg_next_pc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11994 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [11] -> \soc.cpu.reg_next_pc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11995 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [12] -> \soc.cpu.reg_next_pc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11996 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [13] -> \soc.cpu.reg_next_pc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11997 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [14] -> \soc.cpu.reg_next_pc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11998 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [15] -> \soc.cpu.reg_next_pc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11999 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [16] -> \soc.cpu.reg_next_pc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12000 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [17] -> \soc.cpu.reg_next_pc [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12001 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [18] -> \soc.cpu.reg_next_pc [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12002 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [19] -> \soc.cpu.reg_next_pc [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12003 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [20] -> \soc.cpu.reg_next_pc [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12004 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [21] -> \soc.cpu.reg_next_pc [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12005 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [22] -> \soc.cpu.reg_next_pc [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12006 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [23] -> \soc.cpu.reg_next_pc [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12007 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [24] -> \soc.cpu.reg_next_pc [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12008 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [25] -> \soc.cpu.reg_next_pc [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12009 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [26] -> \soc.cpu.reg_next_pc [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12010 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [27] -> \soc.cpu.reg_next_pc [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12011 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [28] -> \soc.cpu.reg_next_pc [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12012 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [29] -> \soc.cpu.reg_next_pc [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12013 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [30] -> \soc.cpu.reg_next_pc [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12014 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_next_pc[31:0] [31] -> \soc.cpu.reg_next_pc [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12015 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [0] -> \soc.cpu.reg_pc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12016 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [1] -> \soc.cpu.reg_pc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12017 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [2] -> \soc.cpu.reg_pc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12018 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [3] -> \soc.cpu.reg_pc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12019 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [4] -> \soc.cpu.reg_pc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12020 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [5] -> \soc.cpu.reg_pc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12021 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [6] -> \soc.cpu.reg_pc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12022 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [7] -> \soc.cpu.reg_pc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12023 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [8] -> \soc.cpu.reg_pc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12024 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [9] -> \soc.cpu.reg_pc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12025 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [10] -> \soc.cpu.reg_pc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12026 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [11] -> \soc.cpu.reg_pc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12027 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [12] -> \soc.cpu.reg_pc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12028 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [13] -> \soc.cpu.reg_pc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12029 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [14] -> \soc.cpu.reg_pc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12030 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [15] -> \soc.cpu.reg_pc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12031 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [16] -> \soc.cpu.reg_pc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12032 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [17] -> \soc.cpu.reg_pc [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12033 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [18] -> \soc.cpu.reg_pc [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12034 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [19] -> \soc.cpu.reg_pc [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12035 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [20] -> \soc.cpu.reg_pc [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12036 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [21] -> \soc.cpu.reg_pc [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12037 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [22] -> \soc.cpu.reg_pc [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12038 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [23] -> \soc.cpu.reg_pc [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12039 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [24] -> \soc.cpu.reg_pc [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12040 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [25] -> \soc.cpu.reg_pc [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12041 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [26] -> \soc.cpu.reg_pc [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12042 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [27] -> \soc.cpu.reg_pc [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12043 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [28] -> \soc.cpu.reg_pc [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12044 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [29] -> \soc.cpu.reg_pc [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12045 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [30] -> \soc.cpu.reg_pc [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12046 to $_DFFE_PP_ for $techmap\soc.cpu.$0\reg_pc[31:0] [31] -> \soc.cpu.reg_pc [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12047 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [0] -> \soc.cpu.count_instr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12048 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [1] -> \soc.cpu.count_instr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12049 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [2] -> \soc.cpu.count_instr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12050 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [3] -> \soc.cpu.count_instr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12051 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [4] -> \soc.cpu.count_instr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12052 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [5] -> \soc.cpu.count_instr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12053 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [6] -> \soc.cpu.count_instr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12054 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [7] -> \soc.cpu.count_instr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12055 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [8] -> \soc.cpu.count_instr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12056 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [9] -> \soc.cpu.count_instr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12057 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [10] -> \soc.cpu.count_instr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12058 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [11] -> \soc.cpu.count_instr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12059 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [12] -> \soc.cpu.count_instr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12060 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [13] -> \soc.cpu.count_instr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12061 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [14] -> \soc.cpu.count_instr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12062 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [15] -> \soc.cpu.count_instr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12063 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [16] -> \soc.cpu.count_instr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12064 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [17] -> \soc.cpu.count_instr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12065 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [18] -> \soc.cpu.count_instr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12066 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [19] -> \soc.cpu.count_instr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12067 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [20] -> \soc.cpu.count_instr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12068 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [21] -> \soc.cpu.count_instr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12069 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [22] -> \soc.cpu.count_instr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12070 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [23] -> \soc.cpu.count_instr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12071 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [24] -> \soc.cpu.count_instr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12072 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [25] -> \soc.cpu.count_instr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12073 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [26] -> \soc.cpu.count_instr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12074 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [27] -> \soc.cpu.count_instr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12075 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [28] -> \soc.cpu.count_instr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12076 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [29] -> \soc.cpu.count_instr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12077 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [30] -> \soc.cpu.count_instr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12078 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [31] -> \soc.cpu.count_instr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12079 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [32] -> \soc.cpu.count_instr [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12080 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [33] -> \soc.cpu.count_instr [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12081 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [34] -> \soc.cpu.count_instr [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12082 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [35] -> \soc.cpu.count_instr [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12083 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [36] -> \soc.cpu.count_instr [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12084 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [37] -> \soc.cpu.count_instr [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12085 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [38] -> \soc.cpu.count_instr [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12086 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [39] -> \soc.cpu.count_instr [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12087 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [40] -> \soc.cpu.count_instr [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12088 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [41] -> \soc.cpu.count_instr [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12089 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [42] -> \soc.cpu.count_instr [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12090 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [43] -> \soc.cpu.count_instr [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12091 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [44] -> \soc.cpu.count_instr [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12092 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [45] -> \soc.cpu.count_instr [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12093 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [46] -> \soc.cpu.count_instr [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12094 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [47] -> \soc.cpu.count_instr [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12095 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [48] -> \soc.cpu.count_instr [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12096 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [49] -> \soc.cpu.count_instr [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12097 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [50] -> \soc.cpu.count_instr [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12098 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [51] -> \soc.cpu.count_instr [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12099 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [52] -> \soc.cpu.count_instr [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12100 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [53] -> \soc.cpu.count_instr [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12101 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [54] -> \soc.cpu.count_instr [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12102 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [55] -> \soc.cpu.count_instr [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12103 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [56] -> \soc.cpu.count_instr [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12104 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [57] -> \soc.cpu.count_instr [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12105 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [58] -> \soc.cpu.count_instr [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12106 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [59] -> \soc.cpu.count_instr [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12107 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [60] -> \soc.cpu.count_instr [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12108 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [61] -> \soc.cpu.count_instr [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12109 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [62] -> \soc.cpu.count_instr [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12110 to $_DFFE_PP_ for $techmap\soc.cpu.$0\count_instr[63:0] [63] -> \soc.cpu.count_instr [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17559 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [0] -> \soc.simpleuart.cfg_divider [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17560 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [1] -> \soc.simpleuart.cfg_divider [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17561 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [2] -> \soc.simpleuart.cfg_divider [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17562 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [3] -> \soc.simpleuart.cfg_divider [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17563 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [4] -> \soc.simpleuart.cfg_divider [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17564 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [5] -> \soc.simpleuart.cfg_divider [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17565 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [6] -> \soc.simpleuart.cfg_divider [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17566 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [7] -> \soc.simpleuart.cfg_divider [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17567 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [8] -> \soc.simpleuart.cfg_divider [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17568 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [9] -> \soc.simpleuart.cfg_divider [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17569 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [10] -> \soc.simpleuart.cfg_divider [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17570 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [11] -> \soc.simpleuart.cfg_divider [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17571 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [12] -> \soc.simpleuart.cfg_divider [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17572 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [13] -> \soc.simpleuart.cfg_divider [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17573 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [14] -> \soc.simpleuart.cfg_divider [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17574 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [15] -> \soc.simpleuart.cfg_divider [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17575 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [16] -> \soc.simpleuart.cfg_divider [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17576 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [17] -> \soc.simpleuart.cfg_divider [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17577 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [18] -> \soc.simpleuart.cfg_divider [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17578 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [19] -> \soc.simpleuart.cfg_divider [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17579 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [20] -> \soc.simpleuart.cfg_divider [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17580 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [21] -> \soc.simpleuart.cfg_divider [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17581 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [22] -> \soc.simpleuart.cfg_divider [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17582 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [23] -> \soc.simpleuart.cfg_divider [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17583 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [24] -> \soc.simpleuart.cfg_divider [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17584 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [25] -> \soc.simpleuart.cfg_divider [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17585 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [26] -> \soc.simpleuart.cfg_divider [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17586 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [27] -> \soc.simpleuart.cfg_divider [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17587 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [28] -> \soc.simpleuart.cfg_divider [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17588 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [29] -> \soc.simpleuart.cfg_divider [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17589 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [30] -> \soc.simpleuart.cfg_divider [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17590 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\cfg_divider[31:0] [31] -> \soc.simpleuart.cfg_divider [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17592 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [0] -> \soc.simpleuart.recv_buf_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17593 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [1] -> \soc.simpleuart.recv_buf_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17594 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [2] -> \soc.simpleuart.recv_buf_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17595 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [3] -> \soc.simpleuart.recv_buf_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17596 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [4] -> \soc.simpleuart.recv_buf_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17597 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [5] -> \soc.simpleuart.recv_buf_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17598 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [6] -> \soc.simpleuart.recv_buf_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17599 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_buf_data[7:0] [7] -> \soc.simpleuart.recv_buf_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17600 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [0] -> \soc.simpleuart.recv_pattern [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17601 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [1] -> \soc.simpleuart.recv_pattern [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17602 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [2] -> \soc.simpleuart.recv_pattern [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17603 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [3] -> \soc.simpleuart.recv_pattern [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17604 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [4] -> \soc.simpleuart.recv_pattern [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17605 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [5] -> \soc.simpleuart.recv_pattern [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17606 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [6] -> \soc.simpleuart.recv_pattern [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17607 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_pattern[7:0] [7] -> \soc.simpleuart.recv_pattern [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17640 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_state[3:0] [0] -> \soc.simpleuart.recv_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17641 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_state[3:0] [1] -> \soc.simpleuart.recv_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17642 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_state[3:0] [2] -> \soc.simpleuart.recv_state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17643 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\recv_state[3:0] [3] -> \soc.simpleuart.recv_state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17644 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_dummy[0:0] -> \soc.simpleuart.send_dummy.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17677 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_bitcnt[3:0] [0] -> \soc.simpleuart.send_bitcnt [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17678 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_bitcnt[3:0] [1] -> \soc.simpleuart.send_bitcnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17679 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_bitcnt[3:0] [2] -> \soc.simpleuart.send_bitcnt [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17680 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_bitcnt[3:0] [3] -> \soc.simpleuart.send_bitcnt [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17681 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [0] -> \soc.simpleuart.send_pattern [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17682 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [1] -> \soc.simpleuart.send_pattern [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17683 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [2] -> \soc.simpleuart.send_pattern [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17684 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [3] -> \soc.simpleuart.send_pattern [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17685 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [4] -> \soc.simpleuart.send_pattern [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17686 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [5] -> \soc.simpleuart.send_pattern [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17687 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [6] -> \soc.simpleuart.send_pattern [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17688 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [7] -> \soc.simpleuart.send_pattern [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17689 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [8] -> \soc.simpleuart.send_pattern [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17690 to $_DFFE_PP_ for $techmap\soc.simpleuart.$0\send_pattern[9:0] [9] -> \soc.simpleuart.send_pattern [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18577 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_do[3:0] [0] -> \soc.spimemio.config_do [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18578 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_do[3:0] [1] -> \soc.spimemio.config_do [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18579 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_do[3:0] [2] -> \soc.spimemio.config_do [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18580 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_do[3:0] [3] -> \soc.spimemio.config_do [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18581 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_clk[0:0] -> \soc.spimemio.config_clk.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18582 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_csb[0:0] -> \soc.spimemio.config_csb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18583 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_oe[3:0] [0] -> \soc.spimemio.config_oe [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18584 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_oe[3:0] [1] -> \soc.spimemio.config_oe [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18585 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_oe[3:0] [2] -> \soc.spimemio.config_oe [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18586 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_oe[3:0] [3] -> \soc.spimemio.config_oe [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18587 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_dummy[3:0] [0] -> \soc.spimemio.config_dummy [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18588 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_dummy[3:0] [1] -> \soc.spimemio.config_dummy [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18589 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_dummy[3:0] [2] -> \soc.spimemio.config_dummy [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18590 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_dummy[3:0] [3] -> \soc.spimemio.config_dummy [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18591 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_cont[0:0] -> \soc.spimemio.config_cont.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18592 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_qspi[0:0] -> \soc.spimemio.config_qspi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18593 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_ddr[0:0] -> \soc.spimemio.config_ddr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18594 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\config_en[0:0] -> \soc.spimemio.config_en.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18622 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_inc[0:0] -> \soc.spimemio.rd_inc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18623 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_wait[0:0] -> \soc.spimemio.rd_wait.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18624 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_valid[0:0] -> \soc.spimemio.rd_valid.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18625 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [0] -> \soc.spimemio.rd_addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18626 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [1] -> \soc.spimemio.rd_addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18627 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [2] -> \soc.spimemio.rd_addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18628 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [3] -> \soc.spimemio.rd_addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18629 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [4] -> \soc.spimemio.rd_addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18630 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [5] -> \soc.spimemio.rd_addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18631 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [6] -> \soc.spimemio.rd_addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18632 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [7] -> \soc.spimemio.rd_addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18633 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [8] -> \soc.spimemio.rd_addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18634 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [9] -> \soc.spimemio.rd_addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18635 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [10] -> \soc.spimemio.rd_addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18636 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [11] -> \soc.spimemio.rd_addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18637 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [12] -> \soc.spimemio.rd_addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18638 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [13] -> \soc.spimemio.rd_addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18639 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [14] -> \soc.spimemio.rd_addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18640 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [15] -> \soc.spimemio.rd_addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18641 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [16] -> \soc.spimemio.rd_addr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18642 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [17] -> \soc.spimemio.rd_addr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18643 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [18] -> \soc.spimemio.rd_addr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18644 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [19] -> \soc.spimemio.rd_addr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18645 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [20] -> \soc.spimemio.rd_addr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18646 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [21] -> \soc.spimemio.rd_addr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18647 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [22] -> \soc.spimemio.rd_addr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18648 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rd_addr[23:0] [23] -> \soc.spimemio.rd_addr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18649 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [0] -> \soc.spimemio.buffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18650 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [1] -> \soc.spimemio.buffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18651 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [2] -> \soc.spimemio.buffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18652 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [3] -> \soc.spimemio.buffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18653 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [4] -> \soc.spimemio.buffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18654 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [5] -> \soc.spimemio.buffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18655 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [6] -> \soc.spimemio.buffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18656 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [7] -> \soc.spimemio.buffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18657 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [8] -> \soc.spimemio.buffer [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18658 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [9] -> \soc.spimemio.buffer [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18659 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [10] -> \soc.spimemio.buffer [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18660 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [11] -> \soc.spimemio.buffer [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18661 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [12] -> \soc.spimemio.buffer [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18662 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [13] -> \soc.spimemio.buffer [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18663 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [14] -> \soc.spimemio.buffer [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18664 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [15] -> \soc.spimemio.buffer [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18665 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [16] -> \soc.spimemio.buffer [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18666 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [17] -> \soc.spimemio.buffer [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18667 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [18] -> \soc.spimemio.buffer [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18668 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [19] -> \soc.spimemio.buffer [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18669 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [20] -> \soc.spimemio.buffer [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18670 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [21] -> \soc.spimemio.buffer [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18671 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [22] -> \soc.spimemio.buffer [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18672 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\buffer[23:0] [23] -> \soc.spimemio.buffer [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18673 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_rd[0:0] -> \soc.spimemio.din_rd.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18676 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_tag[3:0] [0] -> \soc.spimemio.din_tag [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18677 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_tag[3:0] [1] -> \soc.spimemio.din_tag [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18678 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_tag[3:0] [2] -> \soc.spimemio.din_tag [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18679 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_tag[3:0] [3] -> \soc.spimemio.din_tag [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18680 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [0] -> \soc.spimemio.din_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18681 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [1] -> \soc.spimemio.din_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18682 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [2] -> \soc.spimemio.din_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18683 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [3] -> \soc.spimemio.din_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18684 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [4] -> \soc.spimemio.din_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18685 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [5] -> \soc.spimemio.din_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18686 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [6] -> \soc.spimemio.din_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18687 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\din_data[7:0] [7] -> \soc.spimemio.din_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18690 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [0] -> \soc.spimemio.rdata [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18691 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [1] -> \soc.spimemio.rdata [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18692 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [2] -> \soc.spimemio.rdata [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18693 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [3] -> \soc.spimemio.rdata [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18694 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [4] -> \soc.spimemio.rdata [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18695 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [5] -> \soc.spimemio.rdata [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18696 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [6] -> \soc.spimemio.rdata [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18697 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [7] -> \soc.spimemio.rdata [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18698 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [8] -> \soc.spimemio.rdata [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18699 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [9] -> \soc.spimemio.rdata [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18700 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [10] -> \soc.spimemio.rdata [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18701 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [11] -> \soc.spimemio.rdata [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18702 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [12] -> \soc.spimemio.rdata [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18703 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [13] -> \soc.spimemio.rdata [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18704 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [14] -> \soc.spimemio.rdata [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18705 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [15] -> \soc.spimemio.rdata [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18706 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [16] -> \soc.spimemio.rdata [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18707 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [17] -> \soc.spimemio.rdata [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18708 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [18] -> \soc.spimemio.rdata [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18709 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [19] -> \soc.spimemio.rdata [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18710 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [20] -> \soc.spimemio.rdata [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18711 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [21] -> \soc.spimemio.rdata [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18712 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [22] -> \soc.spimemio.rdata [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18713 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [23] -> \soc.spimemio.rdata [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18714 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [24] -> \soc.spimemio.rdata [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18715 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [25] -> \soc.spimemio.rdata [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18716 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [26] -> \soc.spimemio.rdata [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18717 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [27] -> \soc.spimemio.rdata [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18718 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [28] -> \soc.spimemio.rdata [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18719 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [29] -> \soc.spimemio.rdata [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18720 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [30] -> \soc.spimemio.rdata [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18721 to $_DFFE_PP_ for $techmap\soc.spimemio.$0\rdata[31:0] [31] -> \soc.spimemio.rdata [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19872 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_tag[3:0] [0] -> \soc.spimemio.xfer.xfer_tag [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19873 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_tag[3:0] [1] -> \soc.spimemio.xfer.xfer_tag [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19874 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_tag[3:0] [2] -> \soc.spimemio.xfer.xfer_tag [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19875 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_tag[3:0] [3] -> \soc.spimemio.xfer.xfer_tag [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19876 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_rd[0:0] -> \soc.spimemio.xfer.xfer_rd.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19877 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_qspi[0:0] -> \soc.spimemio.xfer.xfer_qspi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19878 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\dummy_count[3:0] [0] -> \soc.spimemio.xfer.dummy_count [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19879 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\dummy_count[3:0] [1] -> \soc.spimemio.xfer.dummy_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19880 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\dummy_count[3:0] [2] -> \soc.spimemio.xfer.dummy_count [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19881 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\dummy_count[3:0] [3] -> \soc.spimemio.xfer.dummy_count [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19882 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\count[3:0] [0] -> \soc.spimemio.xfer.count [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19883 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\count[3:0] [1] -> \soc.spimemio.xfer.count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19884 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\count[3:0] [2] -> \soc.spimemio.xfer.count [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19885 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\count[3:0] [3] -> \soc.spimemio.xfer.count [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19886 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [0] -> \soc.spimemio.xfer.ibuffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19887 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [1] -> \soc.spimemio.xfer.ibuffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19888 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [2] -> \soc.spimemio.xfer.ibuffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19889 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [3] -> \soc.spimemio.xfer.ibuffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19890 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [4] -> \soc.spimemio.xfer.ibuffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19891 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [5] -> \soc.spimemio.xfer.ibuffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19892 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [6] -> \soc.spimemio.xfer.ibuffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19893 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\ibuffer[7:0] [7] -> \soc.spimemio.xfer.ibuffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19894 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [0] -> \soc.spimemio.xfer.obuffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19895 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [1] -> \soc.spimemio.xfer.obuffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19896 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [2] -> \soc.spimemio.xfer.obuffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19897 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [3] -> \soc.spimemio.xfer.obuffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19898 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [4] -> \soc.spimemio.xfer.obuffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19899 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [5] -> \soc.spimemio.xfer.obuffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19900 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [6] -> \soc.spimemio.xfer.obuffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19901 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\obuffer[7:0] [7] -> \soc.spimemio.xfer.obuffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19902 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_ddr[0:0] -> \soc.spimemio.xfer.xfer_ddr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19903 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\xfer_dspi[0:0] -> \soc.spimemio.xfer.xfer_dspi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19904 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\flash_clk[0:0] -> \soc.spimemio.xfer.flash_clk.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19905 to $_DFFE_PP_ for $techmap\soc.spimemio.xfer.$0\flash_csb[0:0] -> \soc.spimemio.xfer.flash_csb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8262 to $_DFFE_PP_ for $0\iomem_ready[0:0] -> \iomem_ready.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8263 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [0] -> \iomem_rdata [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8264 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [1] -> \iomem_rdata [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8265 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [2] -> \iomem_rdata [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8266 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [3] -> \iomem_rdata [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8267 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [4] -> \iomem_rdata [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8268 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [5] -> \iomem_rdata [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8269 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [6] -> \iomem_rdata [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8270 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [7] -> \iomem_rdata [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8271 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [8] -> \iomem_rdata [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8272 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [9] -> \iomem_rdata [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8273 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [10] -> \iomem_rdata [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8274 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [11] -> \iomem_rdata [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8275 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [12] -> \iomem_rdata [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8276 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [13] -> \iomem_rdata [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8277 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [14] -> \iomem_rdata [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8278 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [15] -> \iomem_rdata [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8279 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [16] -> \iomem_rdata [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8280 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [17] -> \iomem_rdata [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8281 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [18] -> \iomem_rdata [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8282 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [19] -> \iomem_rdata [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8283 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [20] -> \iomem_rdata [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8284 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [21] -> \iomem_rdata [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8285 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [22] -> \iomem_rdata [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8286 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [23] -> \iomem_rdata [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8287 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [24] -> \iomem_rdata [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8288 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [25] -> \iomem_rdata [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8289 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [26] -> \iomem_rdata [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8290 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [27] -> \iomem_rdata [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8291 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [28] -> \iomem_rdata [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8292 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [29] -> \iomem_rdata [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8293 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [30] -> \iomem_rdata [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8294 to $_DFFE_PP_ for $0\iomem_rdata[31:0] [31] -> \iomem_rdata [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8295 to $_DFFE_PP_ for $0\gpio[31:0] [0] -> \gpio [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8296 to $_DFFE_PP_ for $0\gpio[31:0] [1] -> \gpio [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8297 to $_DFFE_PP_ for $0\gpio[31:0] [2] -> \gpio [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8298 to $_DFFE_PP_ for $0\gpio[31:0] [3] -> \gpio [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8299 to $_DFFE_PP_ for $0\gpio[31:0] [4] -> \gpio [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8300 to $_DFFE_PP_ for $0\gpio[31:0] [5] -> \gpio [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8301 to $_DFFE_PP_ for $0\gpio[31:0] [6] -> \gpio [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8302 to $_DFFE_PP_ for $0\gpio[31:0] [7] -> \gpio [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8303 to $_DFFE_PP_ for $0\gpio[31:0] [8] -> \gpio [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8304 to $_DFFE_PP_ for $0\gpio[31:0] [9] -> \gpio [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8305 to $_DFFE_PP_ for $0\gpio[31:0] [10] -> \gpio [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8306 to $_DFFE_PP_ for $0\gpio[31:0] [11] -> \gpio [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8307 to $_DFFE_PP_ for $0\gpio[31:0] [12] -> \gpio [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8308 to $_DFFE_PP_ for $0\gpio[31:0] [13] -> \gpio [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8309 to $_DFFE_PP_ for $0\gpio[31:0] [14] -> \gpio [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8310 to $_DFFE_PP_ for $0\gpio[31:0] [15] -> \gpio [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8311 to $_DFFE_PP_ for $0\gpio[31:0] [16] -> \gpio [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8312 to $_DFFE_PP_ for $0\gpio[31:0] [17] -> \gpio [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8313 to $_DFFE_PP_ for $0\gpio[31:0] [18] -> \gpio [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8314 to $_DFFE_PP_ for $0\gpio[31:0] [19] -> \gpio [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8315 to $_DFFE_PP_ for $0\gpio[31:0] [20] -> \gpio [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8316 to $_DFFE_PP_ for $0\gpio[31:0] [21] -> \gpio [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8317 to $_DFFE_PP_ for $0\gpio[31:0] [22] -> \gpio [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8318 to $_DFFE_PP_ for $0\gpio[31:0] [23] -> \gpio [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8319 to $_DFFE_PP_ for $0\gpio[31:0] [24] -> \gpio [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8320 to $_DFFE_PP_ for $0\gpio[31:0] [25] -> \gpio [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8321 to $_DFFE_PP_ for $0\gpio[31:0] [26] -> \gpio [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8322 to $_DFFE_PP_ for $0\gpio[31:0] [27] -> \gpio [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8323 to $_DFFE_PP_ for $0\gpio[31:0] [28] -> \gpio [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8324 to $_DFFE_PP_ for $0\gpio[31:0] [29] -> \gpio [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8325 to $_DFFE_PP_ for $0\gpio[31:0] [30] -> \gpio [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8326 to $_DFFE_PP_ for $0\gpio[31:0] [31] -> \gpio [31].

7.36. Executing TECHMAP pass (map to technology primitives).

7.36.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

7.36.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFF_N_ for cells of type $_DFF_N_.
No more expansions possible.
<suppressed ~1130 debug messages>

7.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.
<suppressed ~5040 debug messages>

7.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping icebreaker.$auto$alumacc.cc:485:replace_alu$6793.slice[0].carry ($lut).
Mapping icebreaker.$auto$alumacc.cc:485:replace_alu$6799.slice[0].carry ($lut).
Mapping icebreaker.$auto$alumacc.cc:485:replace_alu$6837.slice[0].carry ($lut).
Mapping icebreaker.$auto$alumacc.cc:485:replace_alu$6840.slice[0].carry ($lut).
Mapping icebreaker.$auto$alumacc.cc:485:replace_alu$6843.slice[0].carry ($lut).
Mapping icebreaker.$auto$alumacc.cc:485:replace_alu$6846.slice[0].carry ($lut).
Mapping icebreaker.$auto$alumacc.cc:485:replace_alu$6849.slice[0].carry ($lut).
Mapping icebreaker.$auto$alumacc.cc:485:replace_alu$6852.slice[0].carry ($lut).
Mapping icebreaker.$auto$alumacc.cc:485:replace_alu$6855.slice[0].carry ($lut).
Mapping icebreaker.$auto$alumacc.cc:485:replace_alu$6858.slice[0].carry ($lut).
Mapping icebreaker.$auto$alumacc.cc:485:replace_alu$6858.slice[22].carry ($lut).

7.39. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in icebreaker.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8328 (SB_DFF): \reset_cnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8329 (SB_DFF): \reset_cnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8332 (SB_DFF): \reset_cnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8330 (SB_DFF): \reset_cnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8331 (SB_DFF): \reset_cnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8327 (SB_DFF): \reset_cnt [0] = 0

7.40. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in icebreaker.
  Merging $auto$simplemap.cc:277:simplemap_mux$15741 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12113 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15020 (A=1'0, B=\soc.cpu.cpu_state [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12175 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$12178 (A=1'0, B=$techmap\soc.$logic_and$picosoc.v:206$1451_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11451 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$12176 (A=1'0, B=$techmap\soc.cpu.$procmux$5530_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11452 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8118 (A=1'0, B=\soc.cpu.mem_wdata [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8320 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8117 (A=1'0, B=\soc.cpu.mem_wdata [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8319 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8148 (A=1'0, B=\soc.cpu.mem_wdata [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8318 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8120 (A=1'0, B=\soc.cpu.mem_wdata [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8322 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8119 (A=1'0, B=\soc.cpu.mem_wdata [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8321 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12842 (A=$techmap\soc.cpu.$procmux$5186_Y, B=1'0, S=\soc.cpu.clear_prefetched_high_word) into $auto$simplemap.cc:420:simplemap_dff$11501 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12839 (A=\soc.cpu.mem_la_read, B=1'0, S=$techmap\soc.cpu.$logic_or$picorv32.v:566$2288_Y) into $auto$simplemap.cc:420:simplemap_dff$11502 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12795 (A=$techmap$techmap\soc.cpu.$procmux$5204.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$12825_Y, B=1'0, S=$techmap\soc.cpu.$logic_or$picorv32.v:566$2288_Y) into $auto$simplemap.cc:420:simplemap_dff$11503 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12796 (A=$techmap$techmap\soc.cpu.$procmux$5204.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$12826_Y, B=1'0, S=$techmap\soc.cpu.$logic_or$picorv32.v:566$2288_Y) into $auto$simplemap.cc:420:simplemap_dff$11504 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8168 (A=1'0, B=\soc.cpu.mem_wdata [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8306 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8172 (A=1'0, B=\soc.cpu.mem_wdata [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8310 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12645 (A=$techmap$techmap\soc.cpu.$procmux$5262.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$12639_Y, B=1'0, S=$techmap\soc.cpu.$logic_or$picorv32.v:566$2288_Y) into $auto$simplemap.cc:420:simplemap_dff$11573 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13275 (A=1'0, B=$techmap\soc.cpu.$procmux$4654_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11574 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13291 (A=1'0, B=$techmap\soc.cpu.$procmux$4611_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11577 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8141 (A=1'0, B=\soc.cpu.mem_wdata [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8311 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8142 (A=1'0, B=\soc.cpu.mem_wdata [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8312 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8145 (A=1'0, B=\soc.cpu.mem_wdata [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8315 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8169 (A=1'0, B=\soc.cpu.mem_wdata [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8307 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8170 (A=1'0, B=\soc.cpu.mem_wdata [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8308 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8124 (A=1'0, B=\soc.cpu.mem_wdata [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8326 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13657 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [32], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12079 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14012 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11986 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23481 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13246_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11622 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15742 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12114 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23483 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13248_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11624 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15743 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12115 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23485 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13250_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11626 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15744 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12116 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23487 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13252_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11628 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15745 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12117 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23489 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13254_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11630 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15746 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12118 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23491 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13256_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11632 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15747 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12119 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23493 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13258_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11634 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15748 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12120 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23495 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13260_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11636 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15749 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12121 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23497 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13262_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11638 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15750 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12122 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23499 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13264_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11640 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15751 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12123 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23501 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13266_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11642 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15752 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12124 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23503 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13268_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11644 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15753 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12125 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23505 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13270_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11646 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15754 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12126 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23507 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13272_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11648 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15755 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12127 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23509 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13274_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11650 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15756 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12128 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15757 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12129 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15758 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12130 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15759 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12131 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15760 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12132 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15761 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12133 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15762 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12134 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13054 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1075$2488_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11675 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13052 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1074$2484_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11676 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13050 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1073$2480_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11677 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13048 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1072$2476_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11678 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13046 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1071$2472_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11679 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13044 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1070$2468_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11680 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13042 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1069$2464_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11681 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13040 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1068$2460_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11682 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13038 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1067$2456_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11683 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13036 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1066$2452_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11684 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13031 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1060$2436_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11688 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13029 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1059$2434_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11689 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13027 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1058$2432_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11690 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13025 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1057$2430_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11691 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13023 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1056$2428_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11692 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13021 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1055$2426_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11693 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13011 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1043$2408_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11702 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13009 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1042$2406_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11703 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13007 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1041$2404_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11704 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13005 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1040$2402_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11705 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13003 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1039$2400_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11706 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13001 (A=1'0, B=$techmap\soc.cpu.$logic_and$picorv32.v:1038$2398_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11707 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13561 (A=$techmap\soc.cpu.$1\clear_prefetched_high_word[0:0], B=1'1, S=$techmap\soc.cpu.$logic_or$picorv32.v:1294$2616_Y) into $auto$simplemap.cc:420:simplemap_dff$11712 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15763 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12135 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15764 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12136 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15765 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12137 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15766 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12138 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15767 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12139 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15768 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12140 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15769 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12141 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15770 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12142 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15771 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [32], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12143 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15772 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [33], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12144 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15773 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [34], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12145 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15774 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [35], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12146 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15775 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [36], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12147 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15776 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [37], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12148 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15777 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [38], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12149 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15778 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [39], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12150 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15779 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [40], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12151 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15780 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [41], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12152 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15781 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [42], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12153 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15782 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [43], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12154 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15783 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [44], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12155 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15784 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [45], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12156 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15785 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [46], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12157 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15786 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [47], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12158 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15787 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [48], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12159 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15078 (A=1'0, B=$techmap\soc.cpu.$procmux$3308_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11745 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15788 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [49], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12160 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15789 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [50], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12161 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15790 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [51], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12162 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15791 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [52], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12163 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15005 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3549.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$12581_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11747 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15002 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3575.$and$/usr/local/bin/../share/yosys/techmap.v:469$12623_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11752 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14999 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3588.$and$/usr/local/bin/../share/yosys/techmap.v:469$12623_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11753 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14990 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3646.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$12639_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11755 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14988 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3682.$and$/usr/local/bin/../share/yosys/techmap.v:469$12623_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11756 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14976 (A=1'1, B=$techmap$techmap\soc.cpu.$procmux$3689.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$14987_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11757 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15792 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [53], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12164 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14970 (A=1'0, B=$techmap\soc.cpu.$eq$picorv32.v:1541$2690_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11758 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15074 (A=1'0, B=$techmap\soc.cpu.$procmux$3319_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11778 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15087 (A=1'0, B=$techmap\soc.cpu.$2\set_mem_do_wdata[0:0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11780 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15086 (A=1'0, B=$techmap\soc.cpu.$2\set_mem_do_rdata[0:0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11781 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14855 (A=$techmap\soc.cpu.$procmux$4028_Y, B=1'1, S=$techmap\soc.cpu.$0\set_mem_do_rinst[0:0]) into $auto$simplemap.cc:420:simplemap_dff$11782 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14848 (A=$techmap\soc.cpu.$logic_and$picorv32.v:1574$2707_Y, B=1'0, S=$techmap\soc.cpu.$logic_or$picorv32.v:1943$2814_Y) into $auto$simplemap.cc:420:simplemap_dff$11783 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15797 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [58], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12169 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15802 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [63], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12174 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14692 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11788 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14693 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11789 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14694 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11790 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14695 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11791 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14696 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11792 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14697 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11793 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14698 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11794 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14699 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11795 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14700 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11796 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14701 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11797 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14702 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11798 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14703 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11799 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14704 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11800 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14705 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11801 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14706 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11802 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14707 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11803 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14708 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11804 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14709 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11805 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14710 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11806 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14711 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11807 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14712 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11808 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14713 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11809 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14714 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11810 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14715 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11811 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14716 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11812 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14717 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11813 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14718 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11814 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14719 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11815 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15089 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$2892.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$12622_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11817 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14688 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11784 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15091 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11819 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15092 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11820 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15093 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11821 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15094 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11822 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15095 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11823 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15096 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11824 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15097 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11825 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15098 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11826 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15099 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11827 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15100 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11828 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15101 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11829 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15102 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11830 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15103 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11831 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15104 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11832 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15105 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11833 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15106 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11834 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15107 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11835 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15108 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11836 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15109 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11837 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15110 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11838 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15111 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11839 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15112 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11840 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15113 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11841 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15114 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11842 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15115 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11843 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15116 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11844 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15117 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11845 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15118 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11846 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15119 (A=1'0, B=$techmap\soc.cpu.$and$picorv32.v:1514$2669_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11847 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14593 (A=1'1, B=\soc.cpu.cpuregs_rs1 [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11849 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15088 (A=1'0, B=$techmap\soc.cpu.$5\next_irq_pending[31:0] [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11816 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14594 (A=1'1, B=\soc.cpu.cpuregs_rs1 [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11850 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14595 (A=1'1, B=\soc.cpu.cpuregs_rs1 [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11851 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14596 (A=1'1, B=\soc.cpu.cpuregs_rs1 [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11852 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14597 (A=1'1, B=\soc.cpu.cpuregs_rs1 [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11853 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14598 (A=1'1, B=\soc.cpu.cpuregs_rs1 [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11854 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14599 (A=1'1, B=\soc.cpu.cpuregs_rs1 [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11855 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14600 (A=1'1, B=\soc.cpu.cpuregs_rs1 [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11856 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14601 (A=1'1, B=\soc.cpu.cpuregs_rs1 [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11857 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14602 (A=1'1, B=\soc.cpu.cpuregs_rs1 [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11858 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14603 (A=1'1, B=\soc.cpu.cpuregs_rs1 [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11859 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14604 (A=1'1, B=\soc.cpu.cpuregs_rs1 [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11860 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14605 (A=1'1, B=\soc.cpu.cpuregs_rs1 [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11861 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14606 (A=1'1, B=\soc.cpu.cpuregs_rs1 [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11862 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14607 (A=1'1, B=\soc.cpu.cpuregs_rs1 [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11863 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14608 (A=1'1, B=\soc.cpu.cpuregs_rs1 [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11864 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14609 (A=1'1, B=\soc.cpu.cpuregs_rs1 [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11865 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14610 (A=1'1, B=\soc.cpu.cpuregs_rs1 [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11866 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14611 (A=1'1, B=\soc.cpu.cpuregs_rs1 [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11867 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14612 (A=1'1, B=\soc.cpu.cpuregs_rs1 [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11868 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14613 (A=1'1, B=\soc.cpu.cpuregs_rs1 [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11869 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14614 (A=1'1, B=\soc.cpu.cpuregs_rs1 [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11870 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14615 (A=1'1, B=\soc.cpu.cpuregs_rs1 [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11871 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14616 (A=1'1, B=\soc.cpu.cpuregs_rs1 [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11872 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14617 (A=1'1, B=\soc.cpu.cpuregs_rs1 [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11873 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14618 (A=1'1, B=\soc.cpu.cpuregs_rs1 [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11874 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14619 (A=1'1, B=\soc.cpu.cpuregs_rs1 [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11875 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14620 (A=1'1, B=\soc.cpu.cpuregs_rs1 [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11876 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14621 (A=1'1, B=\soc.cpu.cpuregs_rs1 [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11877 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14622 (A=1'1, B=\soc.cpu.cpuregs_rs1 [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11878 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14623 (A=1'1, B=\soc.cpu.cpuregs_rs1 [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11879 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14592 (A=1'1, B=\soc.cpu.cpuregs_rs1 [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11848 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14589 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4137.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$12625_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11880 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14584 (A=1'0, B=\soc.cpu.irq_active, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11881 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15037 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11888 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15038 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11889 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15039 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11890 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15040 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11891 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15041 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11892 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15042 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11893 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15043 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11894 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15044 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11895 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15045 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11896 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15046 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11897 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15047 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11898 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15048 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11899 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15049 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11900 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15050 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11901 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15051 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11902 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15052 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11903 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15053 (A=1'1, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11904 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15054 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11905 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15055 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11906 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15056 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11907 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15057 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11908 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15058 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11909 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15059 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11910 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15060 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11911 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15061 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11912 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15062 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11913 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15063 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11914 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15064 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11915 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15065 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11916 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15066 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11917 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15067 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11918 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15036 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3448.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13523_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11887 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$23479 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13244_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11620 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14010 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11984 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14011 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11985 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14013 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11987 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14014 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11988 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14015 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11989 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14016 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11990 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14017 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11991 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14018 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11992 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14019 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11993 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14020 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11994 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14021 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11995 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14022 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11996 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14023 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11997 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14024 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11998 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14025 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11999 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14026 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12000 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14027 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12001 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14028 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12002 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14029 (A=1'1, B=$techmap\soc.cpu.$procmux$4258_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12003 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14030 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12004 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14031 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12005 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14032 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12006 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14033 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12007 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14034 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12008 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14035 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12009 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14036 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12010 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14037 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12011 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14038 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12012 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14039 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12013 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14040 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12014 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13946 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12016 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14009 (A=1'0, B=$techmap\soc.cpu.$procmux$4258_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11983 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13947 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12017 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13948 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12018 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13949 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12019 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13950 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12020 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13951 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12021 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13952 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12022 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13953 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12023 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13954 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12024 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13955 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12025 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13956 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12026 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13957 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12027 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13958 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12028 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13959 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12029 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13960 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12030 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13961 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12031 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13962 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12032 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13963 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12033 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13964 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12034 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13965 (A=1'1, B=$auto$alumacc.cc:485:replace_alu$6796.AA [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12035 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13966 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12036 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13967 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12037 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13968 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12038 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13969 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12039 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13970 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12040 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13971 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12041 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13972 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12042 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13973 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12043 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13974 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12044 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13975 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12045 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13976 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6796.AA [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12046 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13626 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12048 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13945 (A=1'0, B=$auto$alumacc.cc:485:replace_alu$6802.AA [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12015 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13627 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12049 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13628 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12050 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13629 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12051 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13630 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12052 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13631 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12053 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13632 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12054 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13633 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12055 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13634 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12056 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13635 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12057 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13636 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12058 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13637 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12059 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13638 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12060 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13639 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12061 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13640 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12062 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13641 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12063 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13642 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12064 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13643 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12065 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13644 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12066 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13645 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12067 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13646 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12068 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13647 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12069 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13648 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12070 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13649 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12071 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13650 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12072 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13651 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12073 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13652 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12074 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13653 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12075 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13654 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12076 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13655 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12077 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13656 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12078 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13659 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [34], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12081 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13658 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [33], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12080 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13660 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [35], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12082 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13662 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [37], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12084 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13663 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [38], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12085 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13664 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [39], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12086 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13665 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [40], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12087 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13666 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [41], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12088 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13667 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [42], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12089 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13668 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [43], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12090 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13669 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [44], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12091 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13670 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [45], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12092 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13671 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [46], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12093 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13672 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [47], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12094 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13673 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [48], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12095 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13674 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [49], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12096 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13675 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [50], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12097 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13676 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [51], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12098 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13677 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [52], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12099 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13678 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [53], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12100 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13679 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [54], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12101 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13680 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [55], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12102 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13681 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [56], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12103 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13682 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [57], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12104 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13683 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [58], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12105 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13684 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [59], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12106 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13685 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [60], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12107 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13686 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [61], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12108 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13687 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [62], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12109 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13688 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [63], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12110 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15740 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12112 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13625 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$50998, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12047 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23480 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13245_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11621 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23482 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13247_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11623 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23484 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13249_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11625 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23486 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13251_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11627 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23488 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13253_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11629 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23490 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13255_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11631 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23492 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13257_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11633 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23494 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13259_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11635 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23496 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13261_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11637 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23498 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13263_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11639 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23500 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13265_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11641 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23502 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13267_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11643 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23504 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13269_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11645 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23506 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13271_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11647 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$23508 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$13273_Y, S=$techmap$techmap\soc.cpu.$procmux$4659.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$13236_Y) into $auto$simplemap.cc:420:simplemap_dff$11649 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15006 (A=1'1, B=$techmap$techmap\soc.cpu.$procmux$3549.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$12582_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11748 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15007 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3549.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$12583_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11749 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15008 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3549.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$12584_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11750 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15009 (A=1'0, B=$techmap$techmap\soc.cpu.$procmux$3549.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$12585_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11751 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14971 (A=1'0, B=$techmap\soc.cpu.$ternary$picorv32.v:1541$2693_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11759 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15793 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [54], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12165 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15794 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [55], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12166 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15795 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [56], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12167 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15796 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [57], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12168 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14689 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11785 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15798 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [59], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12170 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15799 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [60], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12171 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15800 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [61], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12172 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15801 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1428$2646_Y [62], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12173 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14690 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11786 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14691 (A=1'0, B=$techmap\soc.cpu.$procmux$4100_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$11787 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15739 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$50979, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12111 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17692 (A=1'0, B=\soc.cpu.mem_wdata [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17560 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17693 (A=1'0, B=\soc.cpu.mem_wdata [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17561 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17694 (A=1'0, B=\soc.cpu.mem_wdata [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17562 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17695 (A=1'0, B=\soc.cpu.mem_wdata [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17563 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17696 (A=1'0, B=\soc.cpu.mem_wdata [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17564 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17697 (A=1'0, B=\soc.cpu.mem_wdata [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17565 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17698 (A=1'0, B=\soc.cpu.mem_wdata [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17566 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17707 (A=1'0, B=\soc.cpu.mem_wdata [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17567 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17708 (A=1'0, B=\soc.cpu.mem_wdata [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17568 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17709 (A=1'0, B=\soc.cpu.mem_wdata [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17569 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17710 (A=1'0, B=\soc.cpu.mem_wdata [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17570 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17711 (A=1'0, B=\soc.cpu.mem_wdata [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17571 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17712 (A=1'0, B=\soc.cpu.mem_wdata [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17572 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17713 (A=1'0, B=\soc.cpu.mem_wdata [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17573 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17714 (A=1'0, B=\soc.cpu.mem_wdata [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17574 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17723 (A=1'0, B=\soc.cpu.mem_wdata [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17575 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17724 (A=1'0, B=\soc.cpu.mem_wdata [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17576 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17725 (A=1'0, B=\soc.cpu.mem_wdata [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17577 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17726 (A=1'0, B=\soc.cpu.mem_wdata [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17578 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17727 (A=1'0, B=\soc.cpu.mem_wdata [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17579 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17728 (A=1'0, B=\soc.cpu.mem_wdata [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17580 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17729 (A=1'0, B=\soc.cpu.mem_wdata [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17581 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17730 (A=1'0, B=\soc.cpu.mem_wdata [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17582 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17739 (A=1'0, B=\soc.cpu.mem_wdata [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17583 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17740 (A=1'0, B=\soc.cpu.mem_wdata [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17584 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17741 (A=1'0, B=\soc.cpu.mem_wdata [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17585 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17742 (A=1'0, B=\soc.cpu.mem_wdata [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17586 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17743 (A=1'0, B=\soc.cpu.mem_wdata [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17587 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17744 (A=1'0, B=\soc.cpu.mem_wdata [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17588 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17745 (A=1'0, B=\soc.cpu.mem_wdata [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17589 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17691 (A=1'1, B=\soc.cpu.mem_wdata [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17559 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17827 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5608_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17591 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17746 (A=1'0, B=\soc.cpu.mem_wdata [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17590 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17803 (A=1'0, B=\soc.simpleuart.recv_pattern [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17593 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17804 (A=1'0, B=\soc.simpleuart.recv_pattern [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17594 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17805 (A=1'0, B=\soc.simpleuart.recv_pattern [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17595 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17806 (A=1'0, B=\soc.simpleuart.recv_pattern [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17596 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17807 (A=1'0, B=\soc.simpleuart.recv_pattern [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17597 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17808 (A=1'0, B=\soc.simpleuart.recv_pattern [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17598 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17802 (A=1'0, B=\soc.simpleuart.recv_pattern [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17592 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17809 (A=1'0, B=\soc.simpleuart.recv_pattern [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17599 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17778 (A=1'0, B=\soc.simpleuart.recv_pattern [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17601 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17779 (A=1'0, B=\soc.simpleuart.recv_pattern [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17602 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17780 (A=1'0, B=\soc.simpleuart.recv_pattern [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17603 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17781 (A=1'0, B=\soc.simpleuart.recv_pattern [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17604 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17782 (A=1'0, B=\soc.simpleuart.recv_pattern [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17605 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17783 (A=1'0, B=\soc.simpleuart.recv_pattern [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17606 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17777 (A=1'0, B=\soc.simpleuart.recv_pattern [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17600 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17784 (A=1'0, B=\ser_rx, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17607 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17832 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17609 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17833 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17610 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17834 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17611 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17835 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17612 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17836 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17613 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17837 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17614 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17838 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17615 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17839 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17616 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17840 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17617 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17841 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17618 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17842 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17619 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17843 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17620 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17844 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17621 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17845 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17622 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17846 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17623 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17847 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17624 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17848 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17625 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17849 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17626 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17850 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17627 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17851 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17628 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17852 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17629 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17853 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17630 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17854 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17631 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17855 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17632 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17856 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17633 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17857 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17634 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17858 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17635 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17859 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17636 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17860 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17637 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17861 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17638 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17831 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17608 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17862 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5594.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$13589_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17639 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17756 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5636.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$12454_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17641 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17757 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5636.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$12454_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17642 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17755 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5636.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$12454_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17640 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18019 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5564_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17644 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17758 (A=1'0, B=$techmap$techmap\soc.simpleuart.$procmux$5636.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$12454_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17643 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18023 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17646 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18024 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17647 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18025 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17648 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18026 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17649 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18027 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17650 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18028 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17651 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18029 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17652 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18030 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17653 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18031 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17654 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18032 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17655 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18033 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17656 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18034 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [12], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17657 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18035 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [13], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17658 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18036 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17659 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18037 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [15], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17660 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18038 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17661 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18039 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17662 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18040 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17663 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18041 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17664 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18042 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17665 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18043 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17666 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18044 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17667 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18045 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [23], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17668 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18046 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [24], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17669 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18047 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [25], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17670 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18048 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [26], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17671 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18049 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [27], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17672 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18050 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17673 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18051 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17674 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18052 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17675 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18022 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17645 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18053 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5556_Y [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17676 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18004 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5575_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17678 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18005 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5575_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17679 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18003 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5575_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17677 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18006 (A=1'0, B=$techmap\soc.simpleuart.$procmux$5575_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17680 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17964 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5586_Y [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17682 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17965 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5586_Y [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17683 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17966 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5586_Y [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17684 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17967 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5586_Y [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17685 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17968 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5586_Y [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17686 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17969 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5586_Y [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17687 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17970 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5586_Y [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17688 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17971 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5586_Y [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17689 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17963 (A=1'1, B=$techmap\soc.simpleuart.$procmux$5586_Y [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$17681 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18751 (A=1'0, B=\soc.cpu.mem_wdata [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18578 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18752 (A=1'0, B=\soc.cpu.mem_wdata [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18579 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18750 (A=1'0, B=\soc.cpu.mem_wdata [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18577 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18748 (A=1'0, B=\soc.cpu.mem_wdata [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18581 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18746 (A=1'0, B=\soc.cpu.mem_wdata [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18582 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18753 (A=1'0, B=\soc.cpu.mem_wdata [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18580 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18739 (A=1'0, B=\soc.cpu.mem_wdata [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18584 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18740 (A=1'0, B=\soc.cpu.mem_wdata [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18585 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18738 (A=1'0, B=\soc.cpu.mem_wdata [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18583 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18741 (A=1'0, B=\soc.cpu.mem_wdata [11], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18586 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18731 (A=1'0, B=\soc.cpu.mem_wdata [17], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18588 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18732 (A=1'0, B=\soc.cpu.mem_wdata [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18589 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18730 (A=1'0, B=\soc.cpu.mem_wdata [16], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18587 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18728 (A=1'0, B=\soc.cpu.mem_wdata [20], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18591 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18726 (A=1'0, B=\soc.cpu.mem_wdata [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18592 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18724 (A=1'0, B=\soc.cpu.mem_wdata [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18593 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18722 (A=1'1, B=\soc.cpu.mem_wdata [31], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18594 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18758 (A=1'1, B=$techmap\soc.spimemio.$logic_or$spimemio.v:100$31_Y, S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18595 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19916 (A=$techmap\soc.spimemio.xfer.$2\flash_io3_do[0:0], B=1'0, S=$auto$simplemap.cc:168:logic_reduce$20450) into $auto$simplemap.cc:420:simplemap_dff$18596 (SB_DFFN).
  Merging $auto$simplemap.cc:277:simplemap_mux$19914 (A=$techmap\soc.spimemio.xfer.$2\flash_io2_do[0:0], B=1'0, S=$auto$simplemap.cc:168:logic_reduce$20450) into $auto$simplemap.cc:420:simplemap_dff$18597 (SB_DFFN).
  Merging $auto$simplemap.cc:277:simplemap_mux$19909 (A=$techmap$techmap\soc.spimemio.xfer.$procmux$5958.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$12622_Y, B=1'0, S=$auto$simplemap.cc:168:logic_reduce$20450) into $auto$simplemap.cc:420:simplemap_dff$18598 (SB_DFFN).
  Merging $auto$simplemap.cc:277:simplemap_mux$19907 (A=$techmap$techmap\soc.spimemio.xfer.$procmux$5906.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$12622_Y, B=1'0, S=$auto$simplemap.cc:168:logic_reduce$20450) into $auto$simplemap.cc:420:simplemap_dff$18599 (SB_DFFN).
  Merging $auto$simplemap.cc:277:simplemap_mux$19042 (A=$techmap\soc.spimemio.$procmux$6108_Y, B=1'0, S=\soc.spimemio.jump) into $auto$simplemap.cc:420:simplemap_dff$18622 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19039 (A=\soc.spimemio.rd_inc, B=1'0, S=\soc.spimemio.valid) into $auto$simplemap.cc:420:simplemap_dff$18623 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$19035 (A=$techmap\soc.spimemio.$procmux$6124_Y, B=1'0, S=$auto$fsm_map.cc:74:implement_pattern_cache$7645) into $auto$simplemap.cc:420:simplemap_dff$18624 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18733 (A=1'1, B=\soc.cpu.mem_wdata [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$18590 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18955 (A=$techmap\soc.spimemio.$procmux$6183_Y, B=1'0, S=$auto$fsm_map.cc:74:implement_pattern_cache$7645) into $auto$simplemap.cc:420:simplemap_dff$18673 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18950 (A=$techmap\soc.spimemio.$procmux$6202_Y, B=1'0, S=$auto$fsm_map.cc:74:implement_pattern_cache$7645) into $auto$simplemap.cc:420:simplemap_dff$18674 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18944 (A=$techmap\soc.spimemio.$procmux$6221_Y, B=1'0, S=$auto$fsm_map.cc:74:implement_pattern_cache$7645) into $auto$simplemap.cc:420:simplemap_dff$18675 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18901 (A=$techmap$techmap\soc.spimemio.$procmux$6231.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$18937_Y, B=1'0, S=$auto$fsm_map.cc:74:implement_pattern_cache$7645) into $auto$simplemap.cc:420:simplemap_dff$18677 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18902 (A=$techmap$techmap\soc.spimemio.$procmux$6231.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$18938_Y, B=1'0, S=$auto$fsm_map.cc:74:implement_pattern_cache$7645) into $auto$simplemap.cc:420:simplemap_dff$18678 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18900 (A=$techmap$techmap\soc.spimemio.$procmux$6231.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$18936_Y, B=1'0, S=$auto$fsm_map.cc:74:implement_pattern_cache$7645) into $auto$simplemap.cc:420:simplemap_dff$18676 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18903 (A=$techmap$techmap\soc.spimemio.$procmux$6231.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$18939_Y, B=1'0, S=$auto$fsm_map.cc:74:implement_pattern_cache$7645) into $auto$simplemap.cc:420:simplemap_dff$18679 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18960 (A=$techmap$techmap\soc.spimemio.$procmux$6138.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$12635_Y, B=1'0, S=$auto$fsm_map.cc:74:implement_pattern_cache$7645) into $auto$simplemap.cc:420:simplemap_dff$18688 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$19213 (A=$techmap\soc.spimemio.$procmux$6041_Y, B=1'0, S=$auto$fsm_map.cc:74:implement_pattern_cache$7645) into $auto$simplemap.cc:420:simplemap_dff$18689 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20331 (A=1'0, B=\soc.spimemio.din_tag [0], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$19872 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20332 (A=1'0, B=\soc.spimemio.din_tag [1], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$19873 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20333 (A=1'0, B=\soc.spimemio.din_tag [2], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$19874 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20334 (A=1'0, B=\soc.spimemio.din_tag [3], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$19875 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20241 (A=1'0, B=\soc.spimemio.xfer.din_ddr, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$19902 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20340 (A=1'1, B=$auto$wreduce.cc:460:run$6712 [0], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$19870 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18199 (A=\soc.cpu.cpuregs.wen, B=1'0, S=$auto$simplemap.cc:256:simplemap_eqne$19854) into $auto$simplemap.cc:420:simplemap_dff$19755 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20339 (A=1'1, B=\soc.spimemio.xfer.next_fetch, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$19871 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20329 (A=1'0, B=\soc.spimemio.din_rd, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$19876 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20327 (A=1'0, B=\soc.spimemio.din_qspi, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$19877 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20316 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5696_Y [1], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$19879 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20317 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5696_Y [2], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$19880 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20315 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5696_Y [0], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$19878 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20318 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5696_Y [3], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$19881 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20300 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5706_Y [1], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$19883 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20301 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5706_Y [2], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$19884 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20299 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5706_Y [0], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$19882 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20302 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5706_Y [3], S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$19885 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20239 (A=1'0, B=\soc.spimemio.xfer.din_dspi, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$19903 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20235 (A=1'0, B=$techmap\soc.spimemio.xfer.$procmux$5744_Y, S=\soc.spimemio.xfer_resetn) into $auto$simplemap.cc:420:simplemap_dff$19904 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18909 (A=\soc.cpu.cpuregs.wen, B=1'0, S=$auto$simplemap.cc:256:simplemap_eqne$18917) into $auto$simplemap.cc:420:simplemap_dff$10732 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13661 (A=1'0, B=$techmap\soc.cpu.$add$picorv32.v:1565$2703_Y [36], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$12083 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8190 (A=1'0, B=\soc.cpu.mem_wdata [1], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8296 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8191 (A=1'0, B=\soc.cpu.mem_wdata [2], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8297 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8192 (A=1'0, B=\soc.cpu.mem_wdata [3], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8298 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8193 (A=1'0, B=\soc.cpu.mem_wdata [4], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8299 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8194 (A=1'0, B=\soc.cpu.mem_wdata [5], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8300 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8195 (A=1'0, B=\soc.cpu.mem_wdata [6], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8301 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8196 (A=1'0, B=\soc.cpu.mem_wdata [7], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8302 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8165 (A=1'0, B=\soc.cpu.mem_wdata [8], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8303 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8166 (A=1'0, B=\soc.cpu.mem_wdata [9], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8304 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8123 (A=1'0, B=\soc.cpu.mem_wdata [30], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8325 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8121 (A=1'0, B=\soc.cpu.mem_wdata [28], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8323 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8143 (A=1'0, B=\soc.cpu.mem_wdata [18], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8313 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8171 (A=1'0, B=\soc.cpu.mem_wdata [14], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8309 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8144 (A=1'0, B=\soc.cpu.mem_wdata [19], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8314 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8122 (A=1'0, B=\soc.cpu.mem_wdata [29], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8324 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8189 (A=1'0, B=\soc.cpu.mem_wdata [0], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8295 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8146 (A=1'0, B=\soc.cpu.mem_wdata [21], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8316 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8147 (A=1'0, B=\soc.cpu.mem_wdata [22], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8317 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8167 (A=1'0, B=\soc.cpu.mem_wdata [10], S=\resetn) into $auto$simplemap.cc:420:simplemap_dff$8305 (SB_DFFE).

7.41. Executing ICE40_OPT pass (performing simple optimizations).

7.41.1. Running ICE40 specific optimizations.

7.41.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.
<suppressed ~1058 debug messages>

7.41.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\icebreaker'.
<suppressed ~14616 debug messages>
Removed a total of 4872 cells.

7.41.4. Executing OPT_RMDFF pass (remove dff with constant values).

7.41.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..
Removed 560 unused cells and 12379 unused wires.
<suppressed ~561 debug messages>

7.41.6. Rerunning OPT passes. (Removed registers in this run.)

7.41.7. Running ICE40 specific optimizations.

7.41.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module icebreaker.

7.41.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\icebreaker'.
Removed a total of 0 cells.

7.41.10. Executing OPT_RMDFF pass (remove dff with constant values).

7.41.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \icebreaker..

7.41.12. Finished OPT passes. (There is nothing left to do.)

7.42. Executing TECHMAP pass (map to technology primitives).

7.42.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

7.42.2. Continuing TECHMAP pass.
No more expansions possible.

7.43. Executing ABC pass (technology mapping using ABC).

7.43.1. Extracting gate netlist of module `\icebreaker' to `<abc-temp-dir>/input.blif'..
Extracted 7749 gates and 9324 wires to a netlist network with 1573 inputs and 1040 outputs.

7.43.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    1770.
ABC: Participating nodes from both networks       =    3772.
ABC: Participating nodes from the first network   =    1773. (  59.92 % of nodes)
ABC: Participating nodes from the second network  =    1999. (  67.56 % of nodes)
ABC: Node pairs (any polarity)                    =    1773. (  59.92 % of names can be moved)
ABC: Node pairs (same polarity)                   =    1352. (  45.69 % of names can be moved)
ABC: Total runtime =     0.30 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

7.43.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2958
ABC RESULTS:        internal signals:     6711
ABC RESULTS:           input signals:     1573
ABC RESULTS:          output signals:     1040
Removing temp directory.

7.44. Executing ICE40_WRAPCARRY pass (wrap carries).

7.45. Executing TECHMAP pass (map to technology primitives).

7.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

7.45.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 218 unused cells and 4588 unused wires.

7.46. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     3480
  1-LUT              145
  2-LUT              887
  3-LUT              812
  4-LUT             1636

Eliminating LUTs.
Number of LUTs:     3480
  1-LUT              145
  2-LUT              887
  3-LUT              812
  4-LUT             1636

Combining LUTs.
Number of LUTs:     3339
  1-LUT              145
  2-LUT              682
  3-LUT              809
  4-LUT             1703

Eliminated 0 LUTs.
Combined 141 LUTs.
<suppressed ~21224 debug messages>

7.47. Executing TECHMAP pass (map to technology primitives).

7.47.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

7.47.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011010010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100011101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011100110010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111110001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011011100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010111110001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110011111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011100101101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000110000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000110011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010000011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010111101110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111101001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110110001101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101000111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000101110111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110110011000110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101010100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111011101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101011101111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001101011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110010100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101111100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001110101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111100101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010110111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101110010101011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111110000 for cells of type $lut.
No more expansions possible.
<suppressed ~6095 debug messages>
Removed 0 unused cells and 6819 unused wires.

7.48. Executing AUTONAME pass.
Renamed 87023 objects in module icebreaker (71 iterations).
<suppressed ~8278 debug messages>

7.49. Executing HIERARCHY pass (managing design hierarchy).

7.49.1. Analyzing design hierarchy..
Top module:  \icebreaker

7.49.2. Analyzing design hierarchy..
Top module:  \icebreaker
Removed 0 unused modules.

7.50. Printing statistics.

=== icebreaker ===

   Number of wires:               3450
   Number of wire bits:           6564
   Number of public wires:        3450
   Number of public wire bits:    6564
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5181
     SB_CARRY                      700
     SB_DFF                        142
     SB_DFFE                       366
     SB_DFFESR                     358
     SB_DFFESS                      50
     SB_DFFNSR                       4
     SB_DFFSR                      205
     SB_DFFSS                        5
     SB_IO                           4
     SB_LUT4                      3339
     SB_RAM40_4K                     4
     SB_SPRAM256KA                   4

7.51. Executing CHECK pass (checking for obvious problems).
checking module icebreaker..
found and reported 0 problems.

7.52. Executing JSON backend.

End of script. Logfile hash: 99c478c7c3, CPU: user 8.25s system 0.05s, MEM: 141.26 MB peak
Yosys 0.9+2406 (git sha1 93ef516d, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 25% 24x opt_expr (2 sec), 15% 24x opt_clean (1 sec), ...
